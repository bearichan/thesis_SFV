$date Mon Feb 25 17:22:55 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var reg 32 ! quotient_msk [31:0] $end
$var reg 1 " running $end
$var wire 1 # \:X_3 $end
$var wire 1 $ \:X_4 $end
$var wire 1 % \:X_0 $end
$var wire 1 & \:X_1 $end
$var wire 1 ' \:X_2 $end
$var wire 1 ( \:X_5 $end
$var wire 1 ) \:X_6 $end
$var wire 1 * \:X_7 $end
$var wire 1 + \:X_8 $end
$var wire 1 , \:X_9 $end
$var wire 1 - \:X_10 $end
$var wire 1 . \:X_11 $end
$var wire 1 / \:X_12 $end
$var wire 1 0 \:X_13 $end
$var wire 1 1 \:X_14 $end
$var wire 1 2 \:X_15 $end
$var wire 1 3 \:X_16 $end
$var wire 1 4 \:X_17 $end
$var wire 1 5 \:X_18 $end
$var wire 1 6 \:X_19 $end
$var wire 1 7 \:X_20 $end
$var wire 1 8 \:X_21 $end
$var wire 1 9 \:X_22 $end
$var wire 1 : \:X_23 $end
$var wire 1 ; \:X_24 $end
$var wire 1 < \:X_25 $end
$var wire 1 = \:X_26 $end
$var wire 1 > \:X_27 $end
$var wire 1 ? \:X_28 $end
$var wire 1 @ \:X_29 $end
$var wire 1 A \:X_30 $end
$var wire 1 B \:X_31 $end
$var wire 1 C resetn $end
$var wire 1 D pcpi_valid $end
$var wire 32 E pcpi_insn [31:0] $end
$var wire 32 F pcpi_rs1 [31:0] $end
$var wire 32 G pcpi_rs2 [31:0] $end
$var wire 1 H instr_any_div_rem $end
$var reg 1 I pcpi_wr $end
$var reg 32 J pcpi_rd [31:0] $end
$var reg 1 K pcpi_wait $end
$var reg 1 L pcpi_ready $end
$var reg 1 M instr_div $end
$var reg 1 N instr_divu $end
$var reg 1 O instr_rem $end
$var reg 1 P instr_remu $end
$var reg 1 Q pcpi_wait_q $end
$var wire 1 R start $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T \:X_3556 $end
$var wire 1 U resetn $end
$var wire 1 V pcpi_valid $end
$var wire 32 W pcpi_insn [31:0] $end
$var wire 32 X pcpi_rs1 [31:0] $end
$var wire 32 Y pcpi_rs2 [31:0] $end
$var wire 1 Z instr_any_mul $end
$var wire 1 [ pcpi_wr $end
$var wire 32 \ pcpi_rd [31:0] $end
$var wire 1 ] pcpi_wait $end
$var wire 1 ^ pcpi_ready $end
$var wire 1 _ instr_mul $end
$var wire 1 ` instr_mulh $end
$var wire 1 a instr_mulhsu $end
$var wire 1 b instr_mulhu $end
$var reg 4 c active [3:0] $end
$var wire 1 d pcpi_insn_valid $end
$var wire 1 e clk $end
$upscope $end
$var wire 1 f resetn $end
$var reg 1 g trap $end
$var reg 1 h mem_valid $end
$var wire 1 i mem_ready $end
$var wire 32 j mem_rdata [31:0] $end
$var wire 1 k mem_la_read $end
$var reg 1 l pcpi_valid $end
$var reg 32 m pcpi_insn [31:0] $end
$var wire 32 n pcpi_rs1 [31:0] $end
$var wire 32 o pcpi_rs2 [31:0] $end
$var reg 1 p instr_addi $end
$var reg 1 q instr_slti $end
$var reg 1 r instr_sltiu $end
$var reg 1 s instr_xori $end
$var reg 1 t instr_ori $end
$var reg 1 u instr_andi $end
$var reg 1 v instr_slli $end
$var reg 1 w instr_srli $end
$var reg 1 x instr_srai $end
$var reg 1 y instr_add $end
$var reg 1 z instr_sub $end
$var reg 1 { instr_sll $end
$var reg 1 | instr_slt $end
$var reg 1 } instr_sltu $end
$var reg 1 ~ instr_xor $end
$var reg 1 !! instr_srl $end
$var reg 1 "! instr_sra $end
$var reg 1 #! instr_or $end
$var reg 1 $! instr_and $end
$var reg 1 %! instr_rdcycle $end
$var reg 1 &! instr_rdcycleh $end
$var reg 1 '! instr_rdinstr $end
$var reg 1 (! instr_rdinstrh $end
$var reg 1 )! instr_ecall_ebreak $end
$var reg 1 *! instr_getq $end
$var reg 1 +! instr_setq $end
$var reg 1 ,! instr_retirq $end
$var wire 1 -! \:X_50 $end
$var wire 1 .! \:X_51 $end
$var wire 1 /! \:X_52 $end
$var wire 1 0! \:X_53 $end
$var wire 1 1! \:X_54 $end
$var wire 1 2! \:X_55 $end
$var wire 1 3! \:X_56 $end
$var wire 1 4! \:X_57 $end
$var wire 1 5! \:X_58 $end
$var wire 1 6! \:X_59 $end
$var wire 1 7! \:X_60 $end
$var wire 1 8! \:X_61 $end
$var wire 1 9! \:X_62 $end
$var wire 1 :! \:X_63 $end
$var wire 1 ;! \:X_129 $end
$var wire 1 <! \:X_130 $end
$var wire 1 =! \:X_131 $end
$var wire 1 >! \:X_132 $end
$var wire 1 ?! \:X_133 $end
$var wire 1 @! \:X_134 $end
$var wire 1 A! \:X_135 $end
$var wire 1 B! \:X_136 $end
$var wire 1 C! \:X_137 $end
$var wire 1 D! \:X_138 $end
$var wire 1 E! \:X_139 $end
$var wire 1 F! \:X_379 $end
$var wire 1 G! \:X_380 $end
$var wire 1 H! \:X_381 $end
$var wire 1 I! \:X_382 $end
$var wire 1 J! \:X_383 $end
$var wire 1 K! \:X_384 $end
$var wire 1 L! \:X_385 $end
$var wire 1 M! \:X_386 $end
$var wire 1 N! \:X_387 $end
$var wire 1 O! \:X_388 $end
$var wire 1 P! \:X_389 $end
$var wire 1 Q! \:X_390 $end
$var wire 1 R! \:X_391 $end
$var wire 1 S! \:X_392 $end
$var wire 1 T! \:X_393 $end
$var wire 1 U! \:X_394 $end
$var wire 1 V! \:X_395 $end
$var wire 1 W! \:X_396 $end
$var wire 1 X! \:X_397 $end
$var wire 1 Y! \:X_398 $end
$var wire 1 Z! \:X_399 $end
$var wire 1 [! \:X_400 $end
$var wire 1 \! \:X_401 $end
$var wire 1 ]! \:X_402 $end
$var wire 1 ^! \:X_403 $end
$var wire 1 _! \:X_404 $end
$var wire 1 `! \:X_405 $end
$var wire 1 a! \:X_406 $end
$var wire 1 b! \:X_407 $end
$var wire 1 c! cpuregs_write $end
$var wire 32 d! cpuregs_wrdata [31:0] $end
$var wire 32 e! cpuregs_rs1 [31:0] $end
$var wire 32 f! cpuregs_rs2 [31:0] $end
$var wire 1 g! \:X_32 $end
$var wire 1 h! \:X_33 $end
$var wire 1 i! \:X_34 $end
$var wire 1 j! \:X_35 $end
$var wire 1 k! \:X_36 $end
$var wire 1 l! \:X_37 $end
$var wire 1 m! \:X_38 $end
$var wire 1 n! \:X_39 $end
$var wire 1 o! \:X_40 $end
$var wire 1 p! \:X_41 $end
$var wire 1 q! \:X_42 $end
$var wire 1 r! \:X_43 $end
$var wire 1 s! \:X_44 $end
$var wire 1 t! \:X_45 $end
$var wire 1 u! \:X_46 $end
$var wire 1 v! \:X_47 $end
$var wire 1 w! \:X_48 $end
$var wire 1 x! \:X_49 $end
$var reg 1 y! instr_maskirq $end
$var reg 1 z! instr_waitirq $end
$var reg 1 {! instr_timer $end
$var wire 1 |! instr_trap $end
$var reg 5 }! decoded_rd [4:0] $end
$var reg 5 ~! decoded_rs1 [4:0] $end
$var reg 5 !" decoded_rs2 [4:0] $end
$var reg 32 "" decoded_imm [31:0] $end
$var reg 32 #" decoded_imm_uj [31:0] $end
$var reg 1 $" decoder_trigger $end
$var reg 1 %" decoder_trigger_q $end
$var reg 1 &" decoder_pseudo_trigger $end
$var reg 1 '" decoder_pseudo_trigger_q $end
$var wire 1 (" \:X_220 $end
$var wire 1 )" \:X_221 $end
$var wire 1 *" \:X_222 $end
$var wire 1 +" \:X_223 $end
$var wire 1 ," \:X_224 $end
$var wire 1 -" \:X_225 $end
$var wire 1 ." \:X_226 $end
$var wire 1 /" \:X_227 $end
$var wire 1 0" \:X_228 $end
$var wire 1 1" \:X_229 $end
$var wire 1 2" \:X_230 $end
$var wire 1 3" \:X_231 $end
$var wire 1 4" \:X_232 $end
$var wire 1 5" \:X_233 $end
$var wire 1 6" \:X_234 $end
$var wire 1 7" \:X_235 $end
$var wire 1 8" \:X_468 $end
$var wire 1 9" \:X_467 $end
$var wire 1 :" \:X_466 $end
$var wire 1 ;" \:X_465 $end
$var wire 1 <" \:X_464 $end
$var wire 1 =" \:X_463 $end
$var wire 1 >" \:X_462 $end
$var wire 1 ?" \:X_461 $end
$var reg 1 @" is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 A" is_slti_blt_slt $end
$var reg 1 B" is_sltiu_bltu_sltu $end
$var reg 1 C" is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 D" is_lbu_lhu_lw $end
$var reg 1 E" is_alu_reg_imm $end
$var reg 1 F" is_alu_reg_reg $end
$var reg 1 G" is_compare $end
$var wire 1 H" is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var reg 32 I" q_insn_opcode [31:0] $end
$var reg 32 J" \cpuregs[15] [31:0] $end
$var reg 32 K" \cpuregs[16] [31:0] $end
$var reg 32 L" \cpuregs[17] [31:0] $end
$var reg 32 M" \cpuregs[18] [31:0] $end
$var reg 32 N" \cpuregs[19] [31:0] $end
$var reg 32 O" \cpuregs[20] [31:0] $end
$var reg 32 P" \cpuregs[21] [31:0] $end
$var reg 32 Q" \cpuregs[22] [31:0] $end
$var reg 32 R" \cpuregs[23] [31:0] $end
$var reg 32 S" \cpuregs[24] [31:0] $end
$var reg 32 T" \cpuregs[25] [31:0] $end
$var reg 32 U" \cpuregs[26] [31:0] $end
$var reg 32 V" \cpuregs[27] [31:0] $end
$var reg 32 W" \cpuregs[28] [31:0] $end
$var reg 32 X" \cpuregs[29] [31:0] $end
$var reg 32 Y" \cpuregs[30] [31:0] $end
$var reg 32 Z" \cpuregs[31] [31:0] $end
$var wire 1 [" pcpi_mul_wr $end
$var wire 32 \" pcpi_mul_rd [31:0] $end
$var wire 1 ]" pcpi_mul_wait $end
$var wire 1 ^" pcpi_mul_ready $end
$var wire 1 _" pcpi_div_wr $end
$var wire 32 `" pcpi_div_rd [31:0] $end
$var wire 1 a" pcpi_div_wait $end
$var wire 1 b" pcpi_div_ready $end
$var wire 1 c" pcpi_int_wr $end
$var wire 32 d" pcpi_int_rd [31:0] $end
$var wire 1 e" pcpi_int_wait $end
$var wire 1 f" pcpi_int_ready $end
$var reg 2 g" mem_state [1:0] $end
$var reg 2 h" mem_wordsize [1:0] $end
$var wire 32 i" mem_rdata_word [31:0] $end
$var reg 32 j" mem_rdata_q [31:0] $end
$var reg 1 k" mem_do_prefetch $end
$var reg 1 l" mem_do_rinst $end
$var reg 1 m" mem_do_rdata $end
$var reg 1 n" mem_do_wdata $end
$var wire 1 o" mem_xfer $end
$var reg 1 p" mem_la_secondword $end
$var reg 1 q" prefetched_high_word $end
$var wire 1 r" clear_prefetched_high_word $end
$var reg 16 s" mem_16bit_buffer [15:0] $end
$var wire 32 t" mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 u" mem_rdata_latched [31:0] $end
$var wire 1 v" mem_la_use_prefetched_high_word $end
$var wire 1 w" mem_done $end
$var wire 1 x" \:X_408 $end
$var wire 1 y" \:X_409 $end
$var wire 1 z" \:X_410 $end
$var wire 1 {" \:X_411 $end
$var wire 1 |" \:X_412 $end
$var wire 1 }" \:X_413 $end
$var wire 1 ~" \:X_414 $end
$var wire 1 !# \:X_415 $end
$var wire 1 "# \:X_416 $end
$var wire 1 ## \:X_417 $end
$var wire 1 $# \:X_418 $end
$var wire 1 %# \:X_419 $end
$var wire 1 &# \:X_420 $end
$var reg 1 '# compressed_instr $end
$var reg 1 (# is_lui_auipc_jal $end
$var reg 1 )# is_lb_lh_lw_lbu_lhu $end
$var reg 1 *# is_slli_srli_srai $end
$var reg 1 +# is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 ,# is_sb_sh_sw $end
$var reg 1 -# dbg_next $end
$var wire 1 .# launch_next_insn $end
$var reg 1 /# dbg_valid_insn $end
$var reg 32 0# cached_insn_opcode [31:0] $end
$var reg 8 1# cpu_state [7:0] $end
$var reg 2 2# irq_state [1:0] $end
$var reg 1 3# latched_store $end
$var reg 1 4# latched_stalu $end
$var reg 1 5# latched_branch $end
$var reg 1 6# latched_compr $end
$var reg 1 7# latched_is_lu $end
$var reg 1 8# latched_is_lh $end
$var reg 1 9# latched_is_lb $end
$var reg 5 :# latched_rd [4:0] $end
$var wire 1 ;# \:X_140 $end
$var wire 1 <# \:X_141 $end
$var wire 1 =# \:X_142 $end
$var wire 1 ># \:X_143 $end
$var wire 1 ?# \:X_144 $end
$var wire 1 @# \:X_145 $end
$var wire 1 A# \:X_146 $end
$var wire 1 B# \:X_147 $end
$var wire 1 C# \:X_148 $end
$var wire 1 D# \:X_149 $end
$var wire 1 E# \:X_150 $end
$var wire 1 F# \:X_151 $end
$var wire 1 G# \:X_152 $end
$var wire 1 H# \:X_153 $end
$var wire 1 I# \:X_154 $end
$var wire 1 J# \:X_155 $end
$var wire 1 K# \:X_156 $end
$var wire 1 L# \:X_157 $end
$var wire 1 M# \:X_158 $end
$var wire 1 N# \:X_159 $end
$var wire 1 O# \:X_160 $end
$var wire 1 P# \:X_236 $end
$var wire 1 Q# \:X_237 $end
$var wire 1 R# \:X_238 $end
$var wire 1 S# \:X_239 $end
$var wire 1 T# \:X_240 $end
$var wire 1 U# \:X_241 $end
$var wire 1 V# \:X_242 $end
$var wire 1 W# \:X_243 $end
$var wire 1 X# \:X_244 $end
$var wire 1 Y# \:X_245 $end
$var wire 1 Z# \:X_246 $end
$var wire 1 [# \:X_247 $end
$var wire 1 \# \:X_248 $end
$var wire 1 ]# \:X_249 $end
$var wire 1 ^# \:X_250 $end
$var wire 1 _# \:X_251 $end
$var wire 1 `# \:X_252 $end
$var wire 1 a# \:X_253 $end
$var wire 1 b# \:X_254 $end
$var wire 1 c# \:X_255 $end
$var wire 1 d# \:X_256 $end
$var wire 32 e# alu_add_sub [31:0] $end
$var wire 32 f# alu_shl [31:0] $end
$var wire 32 g# alu_shr [31:0] $end
$var wire 1 h# alu_eq $end
$var wire 1 i# alu_ltu $end
$var wire 1 j# alu_lts $end
$var reg 1 k# clear_prefetched_high_word_q $end
$var reg 1 l# instr_lui $end
$var reg 1 m# instr_auipc $end
$var reg 1 n# instr_jal $end
$var reg 1 o# instr_jalr $end
$var reg 1 p# instr_beq $end
$var reg 1 q# instr_bne $end
$var reg 1 r# instr_blt $end
$var reg 1 s# instr_bge $end
$var reg 1 t# instr_bltu $end
$var reg 1 u# instr_bgeu $end
$var reg 1 v# instr_lb $end
$var reg 1 w# instr_lh $end
$var reg 1 x# instr_lw $end
$var reg 1 y# instr_lbu $end
$var reg 1 z# instr_lhu $end
$var reg 1 {# instr_sb $end
$var reg 1 |# instr_sh $end
$var reg 1 }# instr_sw $end
$var wire 1 ~# \:X_64 $end
$var wire 32 !$ next_pc [31:0] $end
$var reg 32 "$ \cpuregs[0] [31:0] $end
$var reg 32 #$ \cpuregs[1] [31:0] $end
$var reg 32 $$ \cpuregs[2] [31:0] $end
$var reg 32 %$ \cpuregs[3] [31:0] $end
$var reg 32 &$ \cpuregs[4] [31:0] $end
$var reg 32 '$ \cpuregs[5] [31:0] $end
$var reg 32 ($ \cpuregs[6] [31:0] $end
$var reg 32 )$ \cpuregs[7] [31:0] $end
$var reg 32 *$ \cpuregs[8] [31:0] $end
$var reg 32 +$ \cpuregs[9] [31:0] $end
$var reg 32 ,$ \cpuregs[10] [31:0] $end
$var reg 32 -$ \cpuregs[11] [31:0] $end
$var reg 32 .$ \cpuregs[12] [31:0] $end
$var reg 32 /$ \cpuregs[13] [31:0] $end
$var reg 32 0$ \cpuregs[14] [31:0] $end
$var wire 1 1$ \:X_492 $end
$var wire 1 2$ \:X_491 $end
$var wire 1 3$ \:X_490 $end
$var wire 1 4$ \:X_489 $end
$var wire 1 5$ \:X_488 $end
$var wire 1 6$ \:X_487 $end
$var wire 1 7$ \:X_486 $end
$var wire 1 8$ \:X_485 $end
$var wire 1 9$ \:X_484 $end
$var wire 1 :$ \:X_483 $end
$var wire 1 ;$ \:X_482 $end
$var wire 1 <$ \:X_481 $end
$var wire 1 =$ \:X_480 $end
$var wire 1 >$ \:X_479 $end
$var wire 1 ?$ \:X_478 $end
$var wire 1 @$ \:X_477 $end
$var wire 1 A$ \:X_476 $end
$var wire 1 B$ \:X_475 $end
$var wire 1 C$ \:X_474 $end
$var wire 1 D$ \:X_473 $end
$var wire 1 E$ \:X_472 $end
$var wire 1 F$ \:X_471 $end
$var wire 1 G$ \:X_470 $end
$var wire 1 H$ \:X_469 $end
$var reg 1 I$ rvfi_valid $end
$var reg 32 J$ rvfi_insn [31:0] $end
$var reg 64 K$ count_cycle [63:0] $end
$var reg 64 L$ count_instr [63:0] $end
$var reg 32 M$ reg_pc [31:0] $end
$var reg 32 N$ reg_next_pc [31:0] $end
$var reg 32 O$ reg_op1 [31:0] $end
$var reg 32 P$ reg_op2 [31:0] $end
$var reg 32 Q$ reg_out [31:0] $end
$var reg 5 R$ reg_sh [4:0] $end
$var reg 32 S$ next_insn_opcode [31:0] $end
$var wire 32 T$ dbg_insn_opcode [31:0] $end
$var reg 1 U$ mem_la_firstword_reg $end
$var reg 1 V$ last_mem_valid $end
$var wire 1 W$ mem_la_firstword $end
$var wire 1 X$ \:X_357 $end
$var wire 1 Y$ \:X_358 $end
$var wire 1 Z$ \:X_359 $end
$var wire 1 [$ \:X_360 $end
$var wire 1 \$ \:X_361 $end
$var wire 1 ]$ \:X_362 $end
$var wire 1 ^$ \:X_363 $end
$var wire 1 _$ \:X_364 $end
$var wire 1 `$ \:X_365 $end
$var wire 1 a$ \:X_366 $end
$var wire 1 b$ \:X_367 $end
$var wire 1 c$ \:X_368 $end
$var wire 1 d$ \:X_369 $end
$var wire 1 e$ \:X_370 $end
$var wire 1 f$ \:X_371 $end
$var wire 1 g$ \:X_372 $end
$var wire 1 h$ \:X_373 $end
$var wire 1 i$ \:X_374 $end
$var wire 1 j$ \:X_375 $end
$var wire 1 k$ \:X_376 $end
$var wire 1 l$ \:X_377 $end
$var wire 1 m$ \:X_378 $end
$var reg 4 n$ pcpi_timeout_counter [3:0] $end
$var reg 1 o$ pcpi_timeout $end
$var reg 1 p$ do_waitirq $end
$var wire 32 q$ alu_out [31:0] $end
$var reg 32 r$ alu_out_q [31:0] $end
$var wire 1 s$ alu_out_0 $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ mem_ready $end
$var wire 32 v$ mem_rdata [31:0] $end
$var wire 1 w$ reset $end
$var wire 1 x$ rvfi_valid $end
$var wire 32 y$ rvfi_insn [31:0] $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ rvfi_valid $end
$var wire 32 |$ rvfi_insn [31:0] $end
$var wire 1 }$ spec_valid $end
$var wire 32 ~$ insn_padding [31:0] $end
$var wire 7 !% insn_funct6 [6:0] $end
$var wire 6 "% insn_shamt [5:0] $end
$var wire 3 #% insn_funct3 [2:0] $end
$var wire 7 $% insn_opcode [6:0] $end
$upscope $end
$var wire 1 %% reset $end
$var wire 1 &% check $end
$var wire 1 '% spec_valid $end
$var wire 1 (% rvfi_valid $end
$var wire 32 )% rvfi_insn [31:0] $end
$var wire 1 *% valid $end
$var wire 1 +% clock $end
$upscope $end
$var wire 1 ,% reset $end
$var wire 32 -% rvfi_insn [31:0] $end
$var wire 1 .% rvfi_valid $end
$var wire 1 /% \:jasper_formal_reset $end
$var reg 8 0% cycle_reg [7:0] $end
$var wire 8 1% cycle [7:0] $end
$var wire 1 2% clock $end
$var wire 1 3% \:jasper_formal_clock $end
$upscope $end
$enddefinitions $end
#0
12%
1,%
b00000000 1%
#5
02%
#10
12%
b00000001 0%
#15
02%
#20
12%
#25
02%
#30
b00000000000000000000000000000000 !
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
1C
0D
b00000010000000000100000000110011 E
b11111111111111111111111111111110 F
b00000000000000000000000000000011 G
0H
0I
b00000000000000000000000000000000 J
0K
0L
0M
0N
0O
0P
0Q
0R
1S
0T
1U
0V
b00000010000000000100000000110011 W
b11111111111111111111111111111110 X
b00000000000000000000000000000011 Y
0Z
0[
b00000000000000000000000000000000 \
0]
0^
0_
0`
0a
0b
b0000 c
0d
1e
1f
0g
0h
0i
b00000000000000010000000000000011 j
0k
0l
b00000010000000000100000000110011 m
b11111111111111111111111111111110 n
b00000000000000000000000000000011 o
0p
0q
0r
0s
0t
0u
1v
0w
1x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
1;!
1<!
1=!
1>!
1?!
1@!
1A!
1B!
1C!
1D!
1E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
b11111111111111111111111111111111 d!
b00000000000000000000000000000000 e!
b00000000000000000000000000000000 f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
b11111 }!
b11110 ~!
b00000 !"
b00000000000000000000000000000011 ""
b00000000000000000000000000000000 #"
0$"
0%"
0&"
0'"
1("
1)"
1*"
1+"
1,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
1@"
0A"
0B"
0C"
0D"
0E"
1F"
0G"
0H"
b00000000100000000000100000001011 I"
b00000000000000000000000000000000 J"
b00000000000000000000000000000000 K"
b00000000000000000000000000000000 L"
b00000000000000000000000000000000 M"
b00000000000000000000000000000000 N"
b00000000000000000000000000000000 O"
b00000000000000000000000000000000 P"
b00000000000000000000000000000000 Q"
b00000000000000000000000000000000 R"
b00000000000000000000000000000000 S"
b00000000000000000000000000000000 T"
b00000000000000000000000000000000 U"
b00000000000000000000000000000000 V"
b00000000000000000000000000000000 W"
b00000000000000000000000000000000 X"
b00000000000000000000000000000000 Y"
b00000000000000000000000000000000 Z"
0["
b00000000000000000000000000000000 \"
0]"
0^"
0_"
b00000000000000000000000000000000 `"
0a"
0b"
0c"
b00000000000000000000000000000000 d"
0e"
0f"
b00 g"
b00 h"
b00000000000000010000000000000011 i"
b10111111100000001100100000000101 j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
b0000000000000000 s"
b10111111100000001100100000000101 t"
b10111111100000001100100000000101 u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
1'#
1(#
0)#
1*#
0+#
0,#
0-#
0.#
0/#
b00000000000000000000000000000000 0#
b01000000 1#
b00 2#
03#
04#
05#
06#
07#
08#
09#
b00010 :#
1;#
1<#
1=#
1>#
1?#
1@#
1A#
1B#
1C#
1D#
1E#
1F#
1G#
1H#
1I#
1J#
1K#
1L#
1M#
1N#
1O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
b00000000000000000000000000000001 e#
b11111111111111111111111111110000 f#
b11111111111111111111111111111111 g#
0h#
0i#
1j#
1k#
0l#
0m#
1n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
b00000000000000000000000000000000 !$
b00000000000000000000000000000000 "$
b00000000000000000000000000000000 #$
b00000000000000000000000000000000 $$
b00000000000000000000000000000000 %$
b00000000000000000000000000000000 &$
b00000000000000000000000000000000 '$
b00000000000000000000000000000000 ($
b00000000000000000000000000000000 )$
b00000000000000000000000000000000 *$
b00000000000000000000000000000000 +$
b00000000000000000000000000000000 ,$
b00000000000000000000000000000000 -$
b00000000000000000000000000000000 .$
b00000000000000000000000000000000 /$
b00000000000000000000000000000000 0$
01$
02$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
0<$
0=$
0>$
0?$
0@$
0A$
0B$
0C$
0D$
0E$
0F$
0G$
0H$
0I$
b00000000100000000000100000001011 J$
b0000000000000000000000000000000000000000000000000000000000000000 K$
b0000000000000000000000000000000000000000000000000000000000000000 L$
b00000000000000000000000000000000 M$
b00000000000000000000000000000000 N$
b11111111111111111111111111111110 O$
b00000000000000000000000000000011 P$
b00000000000000000000000000000000 Q$
b11111 R$
b11111111111111110000000000000011 S$
b00000000100000000000100000001011 T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
b1111 n$
0o$
0p$
b11111111111111111111111111111111 q$
b00000000000000000000000000000000 r$
0s$
1t$
0u$
b00000000000000010000000000000011 v$
0w$
0x$
b00000000100000000000100000001011 y$
1z$
0{$
b00000000100000000000100000001011 |$
0}$
b00000000000000000000000000000000 ~$
b0000000 !%
b001000 "%
b000 #%
b0001011 $%
0%%
0&%
0'%
0(%
b00000000100000000000100000001011 )%
0*%
1+%
0,%
b00000000100000000000100000001011 -%
0.%
0/%
b00000001 0%
b00000001 1%
12%
13%
#35
0S
0e
0t$
0z$
0+%
02%
03%
#40
1S
1e
b00000000000000000000000000000011 j
1k
b00000000000000000000000000000011 i"
1l"
16#
b11111 :#
0k#
b0000000000000000000000000000000000000000000000000000000000000001 K$
b11111111111111111111111111111111 r$
1t$
b00000000000000000000000000000011 v$
1z$
1+%
b00000010 0%
b00000010 1%
12%
13%
#45
0S
0e
0t$
0z$
0+%
02%
03%
#50
1S
1e
1h
1i
b00000010010000111010000000001001 j
0k
b01 g"
b00000010010000111010000000001001 i"
1o"
b00000010010000111010000000001001 t"
b00000010010000111010000000001001 u"
1w"
b0000000000000000000000000000000000000000000000000000000000000010 K$
1t$
1u$
b00000010010000111010000000001001 v$
1z$
1+%
b00000011 0%
b00000011 1%
12%
13%
#55
0S
0e
0t$
0z$
0+%
02%
03%
#60
1S
1e
0h
b00000000000000000000000000000000 j
b00000 }!
b00000 ~!
b00000000000000000000000000000010 #"
1$"
0F"
b00 g"
b00000000000000000000000000000000 i"
b00000010010000111010000000001001 j"
0l"
0o"
1q"
b0000001001000011 s"
0w"
1.#
b0000000000000000000000000000000000000000000000000000000000000011 K$
b00000010010000111010000000001001 S$
1t$
b00000000000000000000000000000000 v$
1z$
1+%
b00000100 0%
b00000100 1%
12%
13%
#65
0S
0e
0t$
0z$
0+%
02%
03%
#70
b00000010010000111010000000001001 E
1S
b00000010010000111010000000001001 W
1e
0i
1k
b00000010010000111010000000001001 m
0v
0x
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
1c!
b00000000000000000000000000000010 d!
b00000000000000000000000000000010 ""
0$"
1%"
0@"
1l"
1r"
b00000000000000000000001001000011 u"
0*#
1-#
0.#
1/#
15#
b00000 :#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
b00011111111111111111111111111111 g#
b00000000000000000000000000000010 !$
b0000000000000000000000000000000000000000000000000000000000000100 K$
b0000000000000000000000000000000000000000000000000000000000000001 L$
b00000000000000000000000000000010 N$
b00000000000000001010000000001001 T$
1W$
b00000000000000000000000000000000 q$
1t$
0u$
1z$
1+%
b00000101 0%
b00000101 1%
12%
13%
#75
0S
0e
0t$
0z$
0+%
02%
03%
#80
1S
1e
1h
1i
b00110001000000000000000000000011 j
0k
0c!
b00000000000000000000000000000000 d!
0%"
1@"
b00000000000000001010000000001001 I"
b01 g"
b00110001000000000000000000000011 i"
1o"
0q"
0r"
b00110001000000000000000000000011 t"
b00000000000000000011000100000000 u"
1w"
0-#
b00000000000000001010000000001001 0#
05#
1k#
b00000000000000001010000000001001 J$
b0000000000000000000000000000000000000000000000000000000000000101 K$
b00000000000000000000000000000010 M$
1U$
b00000000000000000000000000000001 q$
b00000000000000000000000000000000 r$
1t$
1u$
b00110001000000000000000000000011 v$
b00000000000000001010000000001001 y$
1z$
b00000000000000001010000000001001 |$
b000000 "%
b010 #%
b0001001 $%
b00000000000000001010000000001001 )%
1+%
b00000000000000001010000000001001 -%
b00000110 0%
b00000110 1%
12%
13%
#85
0S
0e
0t$
0z$
0+%
02%
03%
#90
1S
1e
0h
b00000000000000000000000000000000 j
1|!
b11111111111111111111110000000000 #"
1$"
b00 g"
b00000000000000000000000000000000 i"
b00000000000000000011000100000000 j"
0l"
0o"
b00000000000000000011000100000000 t"
0w"
1.#
0k#
0n#
b0000000000000000000000000000000000000000000000000000000000000110 K$
b00000000000000000011000100000000 S$
0W$
b00000000000000000000000000000001 r$
1t$
b00000000000000000000000000000000 v$
1z$
1+%
b00000111 0%
b00000111 1%
12%
13%
#95
0S
0e
0t$
0z$
0+%
02%
03%
#100
b00000000000000000011000100000000 E
1S
b00000000000000000011000100000000 W
1e
1k
b00000000000000000011000100000000 m
b00000000000000000000000000000000 ""
0$"
1%"
0@"
1k"
0(#
1-#
0.#
b00100000 1#
b00000000000000000000000000000100 !$
1I$
b0000000000000000000000000000000000000000000000000000000000000111 K$
b0000000000000000000000000000000000000000000000000000000000000010 L$
b00000000000000000000000000000100 N$
b00000000000000000011000100000000 T$
0U$
b00000000000000000000000000000000 q$
1t$
1x$
1z$
1{$
1(%
1*%
1+%
1.%
b00001000 0%
b00001000 1%
12%
13%
#105
0S
0e
0t$
0z$
0+%
02%
03%
#110
