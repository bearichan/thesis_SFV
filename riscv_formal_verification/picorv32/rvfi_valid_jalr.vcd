$date Mon Feb 25 14:11:18 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! resetn $end
$var wire 1 " pcpi_valid $end
$var wire 32 # pcpi_insn [31:0] $end
$var wire 32 $ pcpi_rs1 [31:0] $end
$var wire 32 % pcpi_rs2 [31:0] $end
$var wire 1 & instr_any_div_rem $end
$var reg 1 ' pcpi_wr $end
$var reg 32 ( pcpi_rd [31:0] $end
$var reg 1 ) pcpi_wait $end
$var reg 1 * pcpi_ready $end
$var reg 1 + instr_div $end
$var reg 1 , instr_divu $end
$var reg 1 - instr_rem $end
$var reg 1 . instr_remu $end
$var reg 1 / pcpi_wait_q $end
$var wire 1 0 start $end
$var reg 32 1 quotient_msk [31:0] $end
$var reg 1 2 running $end
$var wire 1 3 \:X_3 $end
$var wire 1 4 \:X_4 $end
$var wire 1 5 \:X_0 $end
$var wire 1 6 \:X_1 $end
$var wire 1 7 \:X_2 $end
$var wire 1 8 \:X_5 $end
$var wire 1 9 \:X_6 $end
$var wire 1 : \:X_7 $end
$var wire 1 ; \:X_8 $end
$var wire 1 < \:X_9 $end
$var wire 1 = \:X_10 $end
$var wire 1 > \:X_11 $end
$var wire 1 ? \:X_12 $end
$var wire 1 @ \:X_13 $end
$var wire 1 A \:X_14 $end
$var wire 1 B \:X_15 $end
$var wire 1 C \:X_16 $end
$var wire 1 D \:X_17 $end
$var wire 1 E \:X_18 $end
$var wire 1 F \:X_19 $end
$var wire 1 G \:X_20 $end
$var wire 1 H \:X_21 $end
$var wire 1 I \:X_22 $end
$var wire 1 J \:X_23 $end
$var wire 1 K \:X_24 $end
$var wire 1 L \:X_25 $end
$var wire 1 M \:X_26 $end
$var wire 1 N \:X_27 $end
$var wire 1 O \:X_28 $end
$var wire 1 P \:X_29 $end
$var wire 1 Q \:X_30 $end
$var wire 1 R \:X_31 $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T resetn $end
$var wire 1 U pcpi_valid $end
$var wire 32 V pcpi_insn [31:0] $end
$var wire 32 W pcpi_rs1 [31:0] $end
$var wire 32 X pcpi_rs2 [31:0] $end
$var wire 1 Y instr_any_mul $end
$var wire 1 Z pcpi_wr $end
$var wire 32 [ pcpi_rd [31:0] $end
$var wire 1 \ pcpi_wait $end
$var wire 1 ] pcpi_ready $end
$var wire 1 ^ instr_mul $end
$var wire 1 _ instr_mulh $end
$var wire 1 ` instr_mulhsu $end
$var wire 1 a instr_mulhu $end
$var reg 4 b active [3:0] $end
$var wire 1 c pcpi_insn_valid $end
$var wire 1 d \:X_3556 $end
$var wire 1 e clk $end
$upscope $end
$var reg 1 f pcpi_timeout $end
$var reg 1 g do_waitirq $end
$var wire 32 h alu_out [31:0] $end
$var reg 32 i alu_out_q [31:0] $end
$var wire 1 j alu_out_0 $end
$var wire 1 k clear_prefetched_high_word $end
$var reg 16 l mem_16bit_buffer [15:0] $end
$var wire 32 m mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 n mem_rdata_latched [31:0] $end
$var wire 1 o mem_la_use_prefetched_high_word $end
$var wire 1 p mem_done $end
$var reg 1 q instr_lui $end
$var reg 1 r instr_auipc $end
$var reg 1 s instr_jal $end
$var reg 1 t instr_jalr $end
$var reg 1 u instr_beq $end
$var reg 1 v instr_bne $end
$var reg 1 w instr_blt $end
$var reg 1 x instr_bge $end
$var reg 1 y instr_bltu $end
$var reg 1 z instr_bgeu $end
$var reg 1 { instr_lb $end
$var reg 1 | instr_lh $end
$var reg 1 } instr_lw $end
$var reg 1 ~ instr_lbu $end
$var reg 1 !! instr_lhu $end
$var reg 1 "! instr_sb $end
$var reg 1 #! instr_sh $end
$var reg 1 $! instr_sw $end
$var reg 1 %! instr_addi $end
$var reg 1 &! instr_slti $end
$var reg 1 '! instr_sltiu $end
$var reg 1 (! instr_xori $end
$var reg 1 )! instr_ori $end
$var reg 1 *! instr_andi $end
$var reg 1 +! instr_slli $end
$var reg 1 ,! instr_srli $end
$var reg 1 -! instr_srai $end
$var reg 1 .! instr_add $end
$var reg 1 /! instr_sub $end
$var reg 1 0! instr_sll $end
$var reg 1 1! instr_slt $end
$var reg 1 2! instr_sltu $end
$var reg 1 3! instr_xor $end
$var reg 1 4! instr_srl $end
$var reg 1 5! instr_sra $end
$var reg 1 6! instr_or $end
$var reg 1 7! instr_and $end
$var reg 1 8! instr_rdcycle $end
$var reg 1 9! instr_rdcycleh $end
$var reg 1 :! instr_rdinstr $end
$var reg 1 ;! instr_rdinstrh $end
$var reg 1 <! instr_ecall_ebreak $end
$var reg 1 =! instr_getq $end
$var reg 1 >! instr_setq $end
$var reg 1 ?! instr_retirq $end
$var reg 1 @! instr_maskirq $end
$var reg 1 A! instr_waitirq $end
$var reg 1 B! instr_timer $end
$var wire 1 C! instr_trap $end
$var reg 5 D! decoded_rd [4:0] $end
$var wire 1 E! \:X_239 $end
$var wire 1 F! \:X_240 $end
$var wire 1 G! \:X_241 $end
$var wire 1 H! \:X_242 $end
$var wire 1 I! \:X_243 $end
$var wire 1 J! \:X_244 $end
$var wire 1 K! \:X_245 $end
$var wire 1 L! \:X_246 $end
$var wire 1 M! \:X_247 $end
$var wire 1 N! \:X_248 $end
$var wire 1 O! \:X_249 $end
$var wire 1 P! \:X_250 $end
$var wire 1 Q! \:X_251 $end
$var wire 1 R! \:X_252 $end
$var wire 1 S! \:X_253 $end
$var wire 1 T! \:X_254 $end
$var wire 1 U! \:X_255 $end
$var wire 1 V! \:X_256 $end
$var reg 1 W! latched_branch $end
$var reg 1 X! latched_compr $end
$var reg 1 Y! latched_is_lu $end
$var reg 1 Z! latched_is_lh $end
$var reg 1 [! latched_is_lb $end
$var reg 5 \! latched_rd [4:0] $end
$var reg 4 ]! pcpi_timeout_counter [3:0] $end
$var wire 32 ^! alu_add_sub [31:0] $end
$var wire 32 _! alu_shl [31:0] $end
$var wire 32 `! alu_shr [31:0] $end
$var wire 1 a! alu_eq $end
$var wire 1 b! alu_ltu $end
$var wire 1 c! alu_lts $end
$var reg 1 d! clear_prefetched_high_word_q $end
$var wire 1 e! cpuregs_write $end
$var wire 32 f! cpuregs_wrdata [31:0] $end
$var wire 32 g! cpuregs_rs1 [31:0] $end
$var wire 32 h! cpuregs_rs2 [31:0] $end
$var wire 1 i! \:X_32 $end
$var wire 1 j! \:X_33 $end
$var wire 1 k! \:X_34 $end
$var wire 1 l! \:X_35 $end
$var wire 1 m! \:X_36 $end
$var wire 1 n! \:X_37 $end
$var wire 1 o! \:X_38 $end
$var wire 1 p! \:X_39 $end
$var wire 1 q! \:X_40 $end
$var wire 1 r! \:X_41 $end
$var wire 1 s! \:X_42 $end
$var wire 1 t! \:X_43 $end
$var wire 1 u! \:X_44 $end
$var wire 1 v! \:X_45 $end
$var wire 1 w! \:X_46 $end
$var wire 1 x! \:X_47 $end
$var wire 1 y! \:X_48 $end
$var wire 1 z! \:X_49 $end
$var wire 1 {! \:X_50 $end
$var wire 1 |! \:X_51 $end
$var wire 1 }! \:X_52 $end
$var wire 1 ~! \:X_53 $end
$var wire 1 !" \:X_54 $end
$var wire 1 "" \:X_55 $end
$var wire 1 #" \:X_56 $end
$var wire 1 $" \:X_57 $end
$var wire 1 %" \:X_58 $end
$var wire 1 &" \:X_59 $end
$var wire 1 '" \:X_60 $end
$var wire 1 (" \:X_61 $end
$var wire 1 )" \:X_62 $end
$var wire 1 *" \:X_63 $end
$var wire 32 +" pcpi_rs1 [31:0] $end
$var wire 32 ," pcpi_rs2 [31:0] $end
$var reg 1 -" rvfi_valid $end
$var reg 32 ." rvfi_insn [31:0] $end
$var reg 64 /" count_cycle [63:0] $end
$var reg 64 0" count_instr [63:0] $end
$var reg 32 1" reg_pc [31:0] $end
$var reg 32 2" reg_next_pc [31:0] $end
$var reg 32 3" reg_op1 [31:0] $end
$var reg 32 4" reg_op2 [31:0] $end
$var reg 32 5" reg_out [31:0] $end
$var reg 5 6" reg_sh [4:0] $end
$var reg 32 7" next_insn_opcode [31:0] $end
$var wire 32 8" dbg_insn_opcode [31:0] $end
$var reg 1 9" last_mem_valid $end
$var wire 1 :" mem_la_firstword $end
$var reg 1 ;" prefetched_high_word $end
$var wire 32 <" next_pc [31:0] $end
$var wire 1 =" \:X_492 $end
$var wire 1 >" \:X_491 $end
$var wire 1 ?" \:X_490 $end
$var wire 1 @" \:X_489 $end
$var wire 1 A" \:X_488 $end
$var wire 1 B" \:X_487 $end
$var wire 1 C" \:X_486 $end
$var wire 1 D" \:X_485 $end
$var wire 1 E" \:X_484 $end
$var wire 1 F" \:X_483 $end
$var wire 1 G" \:X_482 $end
$var wire 1 H" \:X_481 $end
$var wire 1 I" \:X_480 $end
$var wire 1 J" \:X_479 $end
$var wire 1 K" \:X_478 $end
$var wire 1 L" \:X_477 $end
$var wire 1 M" \:X_476 $end
$var wire 1 N" \:X_475 $end
$var wire 1 O" \:X_474 $end
$var wire 1 P" \:X_473 $end
$var wire 1 Q" \:X_392 $end
$var wire 1 R" \:X_393 $end
$var wire 1 S" \:X_394 $end
$var wire 1 T" \:X_395 $end
$var wire 1 U" \:X_396 $end
$var wire 1 V" \:X_397 $end
$var wire 1 W" \:X_398 $end
$var wire 1 X" \:X_399 $end
$var wire 1 Y" \:X_400 $end
$var wire 1 Z" \:X_401 $end
$var wire 1 [" \:X_402 $end
$var wire 1 \" \:X_403 $end
$var wire 1 ]" \:X_404 $end
$var wire 1 ^" \:X_405 $end
$var wire 1 _" \:X_406 $end
$var wire 1 `" \:X_407 $end
$var wire 1 a" \:X_408 $end
$var wire 1 b" \:X_409 $end
$var wire 1 c" \:X_410 $end
$var wire 1 d" \:X_411 $end
$var wire 1 e" \:X_412 $end
$var wire 1 f" \:X_413 $end
$var wire 1 g" \:X_414 $end
$var wire 1 h" \:X_415 $end
$var wire 1 i" \:X_416 $end
$var wire 1 j" \:X_417 $end
$var wire 1 k" \:X_418 $end
$var wire 1 l" \:X_419 $end
$var wire 1 m" \:X_420 $end
$var reg 32 n" decoded_imm_uj [31:0] $end
$var reg 1 o" decoder_trigger $end
$var reg 1 p" decoder_trigger_q $end
$var reg 1 q" decoder_pseudo_trigger $end
$var reg 1 r" decoder_pseudo_trigger_q $end
$var reg 1 s" compressed_instr $end
$var reg 32 t" \cpuregs[0] [31:0] $end
$var reg 32 u" \cpuregs[1] [31:0] $end
$var reg 32 v" \cpuregs[2] [31:0] $end
$var reg 32 w" \cpuregs[3] [31:0] $end
$var reg 32 x" \cpuregs[4] [31:0] $end
$var reg 32 y" \cpuregs[5] [31:0] $end
$var reg 32 z" \cpuregs[6] [31:0] $end
$var reg 32 {" \cpuregs[7] [31:0] $end
$var reg 32 |" \cpuregs[8] [31:0] $end
$var reg 32 }" \cpuregs[9] [31:0] $end
$var reg 32 ~" \cpuregs[10] [31:0] $end
$var reg 32 !# \cpuregs[11] [31:0] $end
$var reg 32 "# \cpuregs[12] [31:0] $end
$var reg 32 ## \cpuregs[13] [31:0] $end
$var reg 32 $# \cpuregs[14] [31:0] $end
$var reg 32 %# \cpuregs[15] [31:0] $end
$var reg 32 &# \cpuregs[16] [31:0] $end
$var reg 32 '# \cpuregs[17] [31:0] $end
$var reg 32 (# \cpuregs[18] [31:0] $end
$var reg 32 )# \cpuregs[19] [31:0] $end
$var reg 32 *# \cpuregs[20] [31:0] $end
$var reg 32 +# \cpuregs[21] [31:0] $end
$var reg 32 ,# \cpuregs[22] [31:0] $end
$var reg 32 -# \cpuregs[23] [31:0] $end
$var reg 32 .# \cpuregs[24] [31:0] $end
$var reg 32 /# \cpuregs[25] [31:0] $end
$var reg 32 0# \cpuregs[26] [31:0] $end
$var reg 32 1# \cpuregs[27] [31:0] $end
$var reg 32 2# \cpuregs[28] [31:0] $end
$var reg 32 3# \cpuregs[29] [31:0] $end
$var reg 32 4# \cpuregs[30] [31:0] $end
$var reg 32 5# \cpuregs[31] [31:0] $end
$var wire 1 6# pcpi_mul_wr $end
$var wire 32 7# pcpi_mul_rd [31:0] $end
$var wire 1 8# pcpi_mul_wait $end
$var wire 1 9# pcpi_mul_ready $end
$var wire 1 :# pcpi_div_wr $end
$var wire 32 ;# pcpi_div_rd [31:0] $end
$var wire 1 <# pcpi_div_wait $end
$var wire 1 =# pcpi_div_ready $end
$var wire 1 ># pcpi_int_wr $end
$var wire 32 ?# pcpi_int_rd [31:0] $end
$var wire 1 @# pcpi_int_wait $end
$var wire 1 A# pcpi_int_ready $end
$var reg 2 B# mem_state [1:0] $end
$var reg 2 C# mem_wordsize [1:0] $end
$var wire 32 D# mem_rdata_word [31:0] $end
$var reg 32 E# mem_rdata_q [31:0] $end
$var reg 1 F# mem_do_prefetch $end
$var reg 1 G# mem_do_rinst $end
$var reg 1 H# mem_do_rdata $end
$var reg 1 I# mem_do_wdata $end
$var wire 1 J# mem_xfer $end
$var reg 1 K# mem_la_secondword $end
$var reg 1 L# mem_la_firstword_reg $end
$var wire 1 M# \:X_472 $end
$var wire 1 N# \:X_471 $end
$var wire 1 O# \:X_470 $end
$var wire 1 P# \:X_469 $end
$var wire 1 Q# \:X_468 $end
$var wire 1 R# \:X_467 $end
$var wire 1 S# \:X_466 $end
$var wire 1 T# \:X_465 $end
$var wire 1 U# \:X_464 $end
$var wire 1 V# \:X_463 $end
$var wire 1 W# \:X_462 $end
$var wire 1 X# \:X_461 $end
$var wire 1 Y# \:X_64 $end
$var wire 1 Z# resetn $end
$var reg 1 [# trap $end
$var reg 1 \# mem_valid $end
$var wire 1 ]# mem_ready $end
$var wire 32 ^# mem_rdata [31:0] $end
$var wire 1 _# mem_la_read $end
$var reg 1 `# pcpi_valid $end
$var reg 32 a# pcpi_insn [31:0] $end
$var wire 1 b# \:X_129 $end
$var wire 1 c# \:X_130 $end
$var wire 1 d# \:X_131 $end
$var wire 1 e# \:X_132 $end
$var wire 1 f# \:X_133 $end
$var wire 1 g# \:X_134 $end
$var wire 1 h# \:X_135 $end
$var wire 1 i# \:X_136 $end
$var wire 1 j# \:X_137 $end
$var wire 1 k# \:X_138 $end
$var wire 1 l# \:X_139 $end
$var wire 1 m# \:X_140 $end
$var wire 1 n# \:X_141 $end
$var wire 1 o# \:X_142 $end
$var wire 1 p# \:X_143 $end
$var wire 1 q# \:X_144 $end
$var wire 1 r# \:X_145 $end
$var wire 1 s# \:X_146 $end
$var wire 1 t# \:X_147 $end
$var wire 1 u# \:X_148 $end
$var wire 1 v# \:X_149 $end
$var wire 1 w# \:X_150 $end
$var wire 1 x# \:X_151 $end
$var wire 1 y# \:X_152 $end
$var wire 1 z# \:X_153 $end
$var wire 1 {# \:X_154 $end
$var wire 1 |# \:X_155 $end
$var wire 1 }# \:X_156 $end
$var wire 1 ~# \:X_157 $end
$var wire 1 !$ \:X_158 $end
$var wire 1 "$ \:X_159 $end
$var wire 1 #$ \:X_160 $end
$var reg 5 $$ decoded_rs1 [4:0] $end
$var reg 5 %$ decoded_rs2 [4:0] $end
$var reg 32 &$ decoded_imm [31:0] $end
$var reg 1 '$ is_lui_auipc_jal $end
$var reg 1 ($ is_lb_lh_lw_lbu_lhu $end
$var reg 1 )$ is_slli_srli_srai $end
$var reg 1 *$ is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 +$ is_sb_sh_sw $end
$var reg 1 ,$ is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 -$ is_slti_blt_slt $end
$var reg 1 .$ is_sltiu_bltu_sltu $end
$var reg 1 /$ is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 0$ is_lbu_lhu_lw $end
$var reg 1 1$ is_alu_reg_imm $end
$var reg 1 2$ is_alu_reg_reg $end
$var reg 1 3$ is_compare $end
$var wire 1 4$ is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var reg 32 5$ q_insn_opcode [31:0] $end
$var reg 1 6$ dbg_next $end
$var wire 1 7$ launch_next_insn $end
$var reg 1 8$ dbg_valid_insn $end
$var reg 32 9$ cached_insn_opcode [31:0] $end
$var reg 8 :$ cpu_state [7:0] $end
$var reg 2 ;$ irq_state [1:0] $end
$var reg 1 <$ latched_store $end
$var reg 1 =$ latched_stalu $end
$var wire 1 >$ \:X_220 $end
$var wire 1 ?$ \:X_221 $end
$var wire 1 @$ \:X_222 $end
$var wire 1 A$ \:X_223 $end
$var wire 1 B$ \:X_224 $end
$var wire 1 C$ \:X_225 $end
$var wire 1 D$ \:X_226 $end
$var wire 1 E$ \:X_227 $end
$var wire 1 F$ \:X_228 $end
$var wire 1 G$ \:X_229 $end
$var wire 1 H$ \:X_230 $end
$var wire 1 I$ \:X_231 $end
$var wire 1 J$ \:X_232 $end
$var wire 1 K$ \:X_233 $end
$var wire 1 L$ \:X_234 $end
$var wire 1 M$ \:X_235 $end
$var wire 1 N$ \:X_236 $end
$var wire 1 O$ \:X_237 $end
$var wire 1 P$ \:X_238 $end
$var wire 1 Q$ \:X_357 $end
$var wire 1 R$ \:X_358 $end
$var wire 1 S$ \:X_359 $end
$var wire 1 T$ \:X_360 $end
$var wire 1 U$ \:X_361 $end
$var wire 1 V$ \:X_362 $end
$var wire 1 W$ \:X_363 $end
$var wire 1 X$ \:X_364 $end
$var wire 1 Y$ \:X_365 $end
$var wire 1 Z$ \:X_366 $end
$var wire 1 [$ \:X_367 $end
$var wire 1 \$ \:X_368 $end
$var wire 1 ]$ \:X_369 $end
$var wire 1 ^$ \:X_370 $end
$var wire 1 _$ \:X_371 $end
$var wire 1 `$ \:X_372 $end
$var wire 1 a$ \:X_373 $end
$var wire 1 b$ \:X_374 $end
$var wire 1 c$ \:X_375 $end
$var wire 1 d$ \:X_376 $end
$var wire 1 e$ \:X_377 $end
$var wire 1 f$ \:X_378 $end
$var wire 1 g$ \:X_379 $end
$var wire 1 h$ \:X_380 $end
$var wire 1 i$ \:X_381 $end
$var wire 1 j$ \:X_382 $end
$var wire 1 k$ \:X_383 $end
$var wire 1 l$ \:X_384 $end
$var wire 1 m$ \:X_385 $end
$var wire 1 n$ \:X_386 $end
$var wire 1 o$ \:X_387 $end
$var wire 1 p$ \:X_388 $end
$var wire 1 q$ \:X_389 $end
$var wire 1 r$ \:X_390 $end
$var wire 1 s$ \:X_391 $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ rvfi_valid $end
$var wire 32 v$ rvfi_insn [31:0] $end
$var wire 1 w$ mem_ready $end
$var wire 32 x$ mem_rdata [31:0] $end
$var wire 1 y$ reset $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ spec_valid $end
$var wire 32 |$ insn_padding [31:0] $end
$var wire 3 }$ insn_funct3 [2:0] $end
$var wire 7 ~$ insn_opcode [6:0] $end
$var wire 1 !% rvfi_valid $end
$var wire 32 "% rvfi_insn [31:0] $end
$upscope $end
$var wire 1 #% reset $end
$var wire 1 $% valid $end
$var wire 1 %% check $end
$var wire 1 &% rvfi_valid $end
$var wire 32 '% rvfi_insn [31:0] $end
$var wire 1 (% spec_valid $end
$var wire 1 )% clock $end
$upscope $end
$var wire 1 *% \:jasper_formal_reset $end
$var wire 1 +% reset $end
$var wire 1 ,% rvfi_valid $end
$var wire 32 -% rvfi_insn [31:0] $end
$var reg 8 .% cycle_reg [7:0] $end
$var wire 8 /% cycle [7:0] $end
$var wire 1 0% \:jasper_formal_clock $end
$var wire 1 1% clock $end
$upscope $end
$enddefinitions $end
#0
1!
0"
b00000010000000000011000000110011 #
b11111111111111111111111111111111 $
b00000000000000000000000000000010 %
0&
0'
b00000000000000000000000000000000 (
0)
0*
0+
0,
0-
0.
0/
00
b00000000000000000000000000000000 1
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
1S
1T
0U
b00000010000000000011000000110011 V
b11111111111111111111111111111111 W
b00000000000000000000000000000010 X
0Y
0Z
b00000000000000000000000000000000 [
0\
0]
0^
0_
0`
0a
b0000 b
0c
0d
1e
0f
0g
b11111111111111111111111111111100 h
b00000000000000000000000000000000 i
0j
0k
b0000000000000000 l
b11000000011000001001000001100011 m
b11000000011000001001000001100011 n
0o
0p
1q
0r
1s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
1+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
b11111 D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
b00101 \!
b1111 ]!
b00000000000000000000000000000001 ^!
b11111111111111111111111111111100 _!
b00111111111111111111111111111111 `!
0a!
0b!
1c!
1d!
0e!
b11111111111111111101111111111111 f!
b00000000000000000000000000000000 g!
b00100000000000000000000000000000 h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
b11111111111111111111111111111111 +"
b00000000000000000000000000000010 ,"
0-"
b11111111110100000000100000000011 ."
b0000000000000000000000000000000000000000000000000000000000000000 /"
b0000000000000000000000000000000000000000000000000000000000000000 0"
b00000000000000000000000000000000 1"
b00000000000000000000000000000000 2"
b11111111111111111111111111111111 3"
b00000000000000000000000000000010 4"
b00000000000000000000000000000000 5"
b11111 6"
b11111111111111110000000000000011 7"
b11111111110100000000100000000011 8"
09"
0:"
0;"
b00000000000000000000000000000000 <"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
1j"
0k"
0l"
0m"
b00000000000000000000000000000000 n"
0o"
0p"
0q"
0r"
1s"
b00000000000000000000000000000000 t"
b00000000000000000000000000000000 u"
b00000000000000000000000000000000 v"
b00000000000000000000000000000000 w"
b00000000000000000000000000000000 x"
b00000000000000000000000000000000 y"
b00000000000000000000000000000000 z"
b00000000000000000000000000000000 {"
b00000000000000000000000000000000 |"
b00000000000000000000000000000000 }"
b00000000000000000000000000000000 ~"
b00000000000000000000000000000000 !#
b00000000000000000000000000000000 "#
b00000000000000000000000000000000 ##
b00000000000000000000000000000000 $#
b00000000000000000000000000000000 %#
b00000000000000000000000000000000 &#
b00000000000000000000000000000000 '#
b00000000000000000000000000000000 (#
b00000000000000000000000000000000 )#
b00000000000000000000000000000000 *#
b00000000000000000000000000000000 +#
b00000000000000000000000000000000 ,#
b00000000000000000000000000000000 -#
b00100000000000000000000000000000 .#
b00000000000000000000000000000000 /#
b00000000000000000000000000000000 0#
b00000000000000000000000000000000 1#
b00000000000000000000000000000000 2#
b00000000000000000000000000000000 3#
b00000000000000000000000000000000 4#
b00000000000000000000000000000000 5#
06#
b00000000000000000000000000000000 7#
08#
09#
0:#
b00000000000000000000000000000000 ;#
0<#
0=#
0>#
b00000000000000000000000000000000 ?#
0@#
0A#
b00 B#
b00 C#
b11111100011111010000000000000011 D#
b11000000011000001001000001100011 E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
1Z#
0[#
0\#
0]#
b11111100011111010000000000000011 ^#
0_#
0`#
b00000010000000000011000000110011 a#
1b#
1c#
1d#
1e#
1f#
1g#
1h#
1i#
1j#
1k#
1l#
1m#
1n#
1o#
1p#
1q#
1r#
1s#
0t#
1u#
1v#
1w#
1x#
1y#
1z#
1{#
1|#
1}#
1~#
1!$
1"$
1#$
b11101 $$
b11000 %$
b00000000000000000000000000000011 &$
0'$
1($
1)$
1*$
1+$
0,$
0-$
0.$
0/$
00$
11$
12$
03$
04$
b11111111110100000000100000000011 5$
06$
07$
08$
b00000000000000000000000000000000 9$
b01000000 :$
b00 ;$
0<$
0=$
1>$
1?$
1@$
1A$
1B$
0C$
0D$
0E$
0F$
0G$
0H$
0I$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
1t$
0u$
b11111111110100000000100000000011 v$
0w$
b11111100011111010000000000000011 x$
0y$
1z$
0{$
b00000000000000000000000000000000 |$
b000 }$
b0000011 ~$
0!%
b11111111110100000000100000000011 "%
0#%
0$%
0%%
0&%
b11111111110100000000100000000011 '%
0(%
1)%
0*%
0+%
0,%
b11111111110100000000100000000011 -%
b00000001 .%
b00000001 /%
10%
11%
#5
0S
0e
0t$
0z$
0)%
00%
01%
#10
1S
1e
b11111111111111111111111111111101 h
b11111111111111111111111111111100 i
1X!
b11111 \!
0d!
b11111111111111111111111111111111 f!
b0000000000000000000000000000000000000000000000000000000000000001 /"
1i"
b00000000000000000000000000000011 D#
1G#
b00000000000000000000000000000011 ^#
1_#
1t#
1'$
1,$
1t$
b00000000000000000000000000000011 x$
1z$
1)%
b00000010 .%
b00000010 /%
10%
11%
#15
0S
0e
0t$
0z$
0)%
00%
01%
#20
1S
1e
b11111111111111111111111111111101 i
b00000010010000111010000000001001 m
b00000010010000111010000000001001 n
1p
b0000000000000000000000000000000000000000000000000000000000000010 /"
b01 B#
b00000010010000111010000000001001 D#
1J#
1\#
1]#
b00000010010000111010000000001001 ^#
0_#
1t$
1w$
b00000010010000111010000000001001 x$
1z$
1)%
b00000011 .%
b00000011 /%
10%
11%
#25
0S
0e
0t$
0z$
0)%
00%
01%
#30
1S
1e
b0000001001000011 l
0p
0q
b00000 D!
b00000000000000000000000000000000 h!
b0000000000000000000000000000000000000000000000000000000000000011 /"
b00000010010000111010000000001001 7"
1;"
0i"
0j"
b00000000000000000000000000000010 n"
1o"
b00 B#
b00000000000000000000000000000000 D#
b00000010010000111010000000001001 E#
0G#
0J#
0\#
b00000000000000000000000000000000 ^#
b00000 $$
b00000 %$
0($
0+$
01$
02$
17$
1t$
b00000000000000000000000000000000 x$
1z$
1)%
b00000100 .%
b00000100 /%
10%
11%
#35
0S
0e
0t$
0z$
0)%
00%
01%
#40
b00000010010000111010000000001001 #
1S
b00000010010000111010000000001001 V
1e
b00000000000000000000000000000000 h
1k
b00000000000000000000001001000011 n
0+!
1W!
b00000 \!
1e!
b00000000000000000000000000000010 f!
b0000000000000000000000000000000000000000000000000000000000000100 /"
b0000000000000000000000000000000000000000000000000000000000000001 0"
b00000000000000000000000000000010 2"
b00000000000000001010000000001001 8"
1:"
b00000000000000000000000000000010 <"
0o"
1p"
1G#
0]#
1_#
b00000010010000111010000000001001 a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
0!$
0"$
0#$
b00000000000000000000000000000010 &$
0)$
0*$
0,$
16$
07$
18$
1t$
0w$
1z$
1)%
b00000101 .%
b00000101 /%
10%
11%
#45
0S
0e
0t$
0z$
0)%
00%
01%
#50
1S
1e
b00000000000000000000000000000001 h
b00000000000000000000000000000000 i
0k
b00000000000000100000000000000011 m
b00000000000000000000000000000010 n
1p
0W!
1d!
0e!
b00000000000000000000000000000000 f!
b00000000000000001010000000001001 ."
b0000000000000000000000000000000000000000000000000000000000000101 /"
b00000000000000000000000000000010 1"
0;"
0p"
b01 B#
b00000000000000100000000000000011 D#
1J#
1L#
1\#
1]#
b00000000000000100000000000000011 ^#
0_#
1,$
b00000000000000001010000000001001 5$
06$
b00000000000000001010000000001001 9$
1t$
b00000000000000001010000000001001 v$
1w$
b00000000000000100000000000000011 x$
1z$
b010 }$
b0001001 ~$
b00000000000000001010000000001001 "%
b00000000000000001010000000001001 '%
1)%
b00000000000000001010000000001001 -%
b00000110 .%
b00000110 /%
10%
11%
#55
0S
0e
0t$
0z$
0)%
00%
01%
#60
1S
1e
b00000000000000000000000000000001 i
b00000000000000000001000000000010 m
b00000000000000000001000000000010 n
0p
0s
1C!
0d!
b0000000000000000000000000000000000000000000000000000000000000110 /"
b00000000000000000000000000000010 7"
0:"
b00000000000000000000000000000000 n"
1o"
b00 B#
b00000000000000000000000000000000 D#
b00000000000000000001000000000010 E#
0G#
0J#
0\#
b00000000000000000000000000000000 ^#
11$
17$
1t$
b00000000000000000000000000000000 x$
1z$
1)%
b00000111 .%
b00000111 /%
10%
11%
#65
0S
0e
0t$
0z$
0)%
00%
01%
#70
b00000000000000000001000000000010 #
1S
b00000000000000000001000000000010 V
1e
b11111111111111111111111111111100 h
1+!
0C!
1-"
b0000000000000000000000000000000000000000000000000000000000000111 /"
b0000000000000000000000000000000000000000000000000000000000000010 0"
b00000000000000000000000000000100 2"
b00000000000000000000000000000010 8"
b00000000000000000000000000000100 <"
0o"
1p"
1F#
0L#
1_#
b00000000000000000001000000000010 a#
b00000000000000000000000000000000 &$
0'$
1)$
0,$
16$
07$
b00100000 :$
1t$
1u$
1z$
1!%
1$%
1&%
1)%
1,%
b00001000 .%
b00001000 /%
10%
11%
#75
0S
0e
0t$
0z$
0)%
00%
01%
#80
