$date Tue Feb 26 14:59:31 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! resetn $end
$var wire 1 " pcpi_valid $end
$var wire 32 # pcpi_insn [31:0] $end
$var wire 32 $ pcpi_rs1 [31:0] $end
$var wire 32 % pcpi_rs2 [31:0] $end
$var wire 1 & instr_any_div_rem $end
$var reg 1 ' pcpi_wr $end
$var reg 32 ( pcpi_rd [31:0] $end
$var reg 1 ) pcpi_wait $end
$var reg 1 * pcpi_ready $end
$var reg 1 + instr_div $end
$var reg 1 , instr_divu $end
$var reg 1 - instr_rem $end
$var reg 1 . instr_remu $end
$var reg 1 / pcpi_wait_q $end
$var wire 1 0 \:X_12 $end
$var wire 1 1 \:X_13 $end
$var wire 1 2 \:X_14 $end
$var wire 1 3 \:X_15 $end
$var wire 1 4 \:X_16 $end
$var wire 1 5 \:X_17 $end
$var wire 1 6 \:X_18 $end
$var wire 1 7 \:X_19 $end
$var wire 1 8 \:X_20 $end
$var wire 1 9 \:X_21 $end
$var wire 1 : \:X_22 $end
$var wire 1 ; \:X_23 $end
$var wire 1 < \:X_24 $end
$var wire 1 = \:X_25 $end
$var wire 1 > \:X_26 $end
$var wire 1 ? \:X_27 $end
$var wire 1 @ \:X_28 $end
$var wire 1 A \:X_29 $end
$var wire 1 B \:X_30 $end
$var wire 1 C \:X_31 $end
$var wire 1 D \:X_0 $end
$var wire 1 E \:X_1 $end
$var wire 1 F \:X_2 $end
$var wire 1 G \:X_5 $end
$var wire 1 H \:X_6 $end
$var wire 1 I \:X_7 $end
$var wire 1 J \:X_8 $end
$var wire 1 K \:X_9 $end
$var wire 1 L \:X_10 $end
$var wire 1 M \:X_11 $end
$var wire 1 N start $end
$var reg 32 O quotient_msk [31:0] $end
$var reg 1 P running $end
$var wire 1 Q \:X_3 $end
$var wire 1 R \:X_4 $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T \:X_3556 $end
$var reg 4 U active [3:0] $end
$var wire 1 V pcpi_insn_valid $end
$var wire 1 W resetn $end
$var wire 1 X pcpi_valid $end
$var wire 32 Y pcpi_insn [31:0] $end
$var wire 32 Z pcpi_rs1 [31:0] $end
$var wire 32 [ pcpi_rs2 [31:0] $end
$var wire 1 \ instr_any_mul $end
$var wire 1 ] pcpi_wr $end
$var wire 32 ^ pcpi_rd [31:0] $end
$var wire 1 _ pcpi_wait $end
$var wire 1 ` pcpi_ready $end
$var wire 1 a instr_mul $end
$var wire 1 b instr_mulh $end
$var wire 1 c instr_mulhsu $end
$var wire 1 d instr_mulhu $end
$var wire 1 e clk $end
$upscope $end
$var reg 1 f pcpi_valid $end
$var reg 32 g pcpi_insn [31:0] $end
$var wire 32 h pcpi_rs1 [31:0] $end
$var wire 32 i pcpi_rs2 [31:0] $end
$var reg 1 j rvfi_valid $end
$var reg 32 k rvfi_insn [31:0] $end
$var reg 64 l count_cycle [63:0] $end
$var reg 64 m count_instr [63:0] $end
$var reg 32 n reg_pc [31:0] $end
$var reg 32 o reg_next_pc [31:0] $end
$var reg 32 p reg_op1 [31:0] $end
$var reg 32 q reg_op2 [31:0] $end
$var reg 32 r reg_out [31:0] $end
$var reg 5 s reg_sh [4:0] $end
$var reg 32 t next_insn_opcode [31:0] $end
$var wire 32 u dbg_insn_opcode [31:0] $end
$var reg 1 v instr_lbu $end
$var reg 1 w instr_lhu $end
$var reg 1 x instr_sb $end
$var reg 1 y instr_sh $end
$var reg 1 z instr_sw $end
$var reg 1 { instr_addi $end
$var reg 1 | instr_slti $end
$var reg 1 } instr_sltiu $end
$var reg 1 ~ instr_xori $end
$var reg 1 !! instr_ori $end
$var reg 1 "! instr_andi $end
$var reg 1 #! instr_slli $end
$var reg 1 $! instr_srli $end
$var reg 1 %! instr_srai $end
$var reg 1 &! instr_add $end
$var reg 1 '! instr_sub $end
$var reg 1 (! instr_sll $end
$var reg 1 )! instr_slt $end
$var wire 1 *! \:X_49 $end
$var wire 1 +! \:X_50 $end
$var wire 1 ,! \:X_51 $end
$var wire 1 -! \:X_52 $end
$var wire 1 .! \:X_53 $end
$var wire 1 /! \:X_54 $end
$var wire 1 0! \:X_55 $end
$var wire 1 1! \:X_56 $end
$var wire 1 2! \:X_57 $end
$var wire 1 3! \:X_58 $end
$var wire 1 4! \:X_59 $end
$var wire 1 5! \:X_60 $end
$var wire 1 6! \:X_61 $end
$var wire 1 7! \:X_62 $end
$var wire 1 8! \:X_63 $end
$var wire 1 9! \:X_416 $end
$var wire 1 :! \:X_417 $end
$var wire 1 ;! \:X_418 $end
$var wire 1 <! \:X_419 $end
$var wire 1 =! \:X_420 $end
$var wire 1 >! \:X_478 $end
$var wire 1 ?! \:X_477 $end
$var wire 1 @! \:X_476 $end
$var wire 1 A! \:X_475 $end
$var wire 1 B! \:X_474 $end
$var wire 1 C! \:X_473 $end
$var wire 1 D! \:X_472 $end
$var wire 1 E! \:X_471 $end
$var wire 1 F! \:X_470 $end
$var wire 1 G! \:X_469 $end
$var wire 1 H! \:X_468 $end
$var wire 1 I! \:X_467 $end
$var wire 1 J! \:X_466 $end
$var wire 1 K! \:X_465 $end
$var wire 1 L! \:X_464 $end
$var wire 1 M! \:X_463 $end
$var wire 1 N! \:X_462 $end
$var wire 1 O! \:X_461 $end
$var reg 1 P! decoder_trigger $end
$var reg 1 Q! decoder_trigger_q $end
$var reg 1 R! decoder_pseudo_trigger $end
$var reg 1 S! decoder_pseudo_trigger_q $end
$var reg 1 T! compressed_instr $end
$var reg 1 U! is_lui_auipc_jal $end
$var reg 1 V! is_lb_lh_lw_lbu_lhu $end
$var reg 5 W! decoded_rs1 [4:0] $end
$var reg 5 X! decoded_rs2 [4:0] $end
$var reg 32 Y! decoded_imm [31:0] $end
$var reg 32 Z! decoded_imm_uj [31:0] $end
$var wire 1 [! \:X_32 $end
$var wire 1 \! \:X_33 $end
$var wire 1 ]! \:X_34 $end
$var wire 1 ^! \:X_35 $end
$var wire 1 _! \:X_36 $end
$var wire 1 `! \:X_37 $end
$var wire 1 a! \:X_38 $end
$var wire 1 b! \:X_39 $end
$var wire 1 c! \:X_40 $end
$var wire 1 d! \:X_41 $end
$var wire 1 e! \:X_42 $end
$var wire 1 f! \:X_43 $end
$var wire 1 g! \:X_44 $end
$var wire 1 h! \:X_45 $end
$var wire 1 i! \:X_46 $end
$var wire 1 j! \:X_47 $end
$var wire 1 k! \:X_48 $end
$var wire 1 l! \:X_136 $end
$var wire 1 m! \:X_137 $end
$var wire 1 n! \:X_138 $end
$var wire 1 o! \:X_139 $end
$var wire 1 p! \:X_140 $end
$var wire 1 q! \:X_141 $end
$var wire 1 r! \:X_142 $end
$var wire 1 s! \:X_143 $end
$var wire 1 t! \:X_144 $end
$var wire 1 u! \:X_145 $end
$var wire 1 v! \:X_146 $end
$var wire 1 w! \:X_147 $end
$var wire 1 x! \:X_148 $end
$var wire 1 y! \:X_149 $end
$var wire 1 z! \:X_150 $end
$var wire 1 {! \:X_151 $end
$var wire 1 |! \:X_152 $end
$var wire 1 }! \:X_153 $end
$var wire 1 ~! \:X_154 $end
$var wire 1 !" \:X_155 $end
$var wire 1 "" \:X_357 $end
$var wire 1 #" \:X_358 $end
$var wire 1 $" \:X_359 $end
$var wire 1 %" \:X_360 $end
$var wire 1 &" \:X_361 $end
$var wire 1 '" \:X_362 $end
$var wire 1 (" \:X_363 $end
$var wire 1 )" \:X_364 $end
$var wire 1 *" \:X_365 $end
$var wire 1 +" \:X_366 $end
$var wire 1 ," \:X_367 $end
$var wire 1 -" \:X_368 $end
$var wire 1 ." \:X_369 $end
$var wire 1 /" \:X_370 $end
$var wire 1 0" \:X_371 $end
$var wire 1 1" \:X_372 $end
$var wire 1 2" \:X_373 $end
$var wire 1 3" \:X_374 $end
$var wire 1 4" \:X_375 $end
$var wire 1 5" \:X_220 $end
$var wire 1 6" \:X_221 $end
$var wire 1 7" \:X_222 $end
$var wire 1 8" \:X_223 $end
$var wire 1 9" \:X_224 $end
$var wire 1 :" \:X_225 $end
$var wire 1 ;" \:X_226 $end
$var wire 1 <" \:X_227 $end
$var wire 1 =" \:X_228 $end
$var wire 1 >" \:X_229 $end
$var wire 1 ?" \:X_230 $end
$var wire 1 @" \:X_231 $end
$var wire 1 A" \:X_232 $end
$var wire 1 B" \:X_233 $end
$var wire 1 C" \:X_234 $end
$var wire 1 D" \:X_235 $end
$var wire 1 E" \:X_129 $end
$var wire 1 F" \:X_130 $end
$var wire 1 G" \:X_131 $end
$var wire 1 H" \:X_132 $end
$var wire 1 I" \:X_133 $end
$var wire 1 J" \:X_134 $end
$var wire 1 K" \:X_135 $end
$var reg 32 L" cached_insn_opcode [31:0] $end
$var reg 8 M" cpu_state [7:0] $end
$var reg 2 N" irq_state [1:0] $end
$var reg 1 O" latched_store $end
$var reg 1 P" latched_stalu $end
$var reg 1 Q" latched_branch $end
$var reg 1 R" latched_compr $end
$var reg 1 S" latched_is_lu $end
$var reg 1 T" latched_is_lh $end
$var reg 1 U" latched_is_lb $end
$var reg 5 V" latched_rd [4:0] $end
$var reg 4 W" pcpi_timeout_counter [3:0] $end
$var wire 32 X" alu_add_sub [31:0] $end
$var wire 32 Y" alu_shl [31:0] $end
$var wire 32 Z" alu_shr [31:0] $end
$var wire 1 [" alu_eq $end
$var wire 1 \" alu_ltu $end
$var wire 1 ]" alu_lts $end
$var reg 1 ^" clear_prefetched_high_word_q $end
$var wire 1 _" cpuregs_write $end
$var wire 32 `" cpuregs_wrdata [31:0] $end
$var wire 32 a" cpuregs_rs1 [31:0] $end
$var wire 32 b" cpuregs_rs2 [31:0] $end
$var wire 1 c" \:X_396 $end
$var wire 1 d" \:X_397 $end
$var wire 1 e" \:X_398 $end
$var wire 1 f" \:X_399 $end
$var wire 1 g" \:X_400 $end
$var wire 1 h" \:X_401 $end
$var wire 1 i" \:X_402 $end
$var wire 1 j" \:X_403 $end
$var wire 1 k" \:X_404 $end
$var wire 1 l" \:X_405 $end
$var wire 1 m" \:X_406 $end
$var wire 1 n" \:X_407 $end
$var wire 1 o" \:X_408 $end
$var wire 1 p" \:X_409 $end
$var wire 1 q" \:X_410 $end
$var wire 1 r" \:X_411 $end
$var wire 1 s" \:X_412 $end
$var wire 1 t" \:X_413 $end
$var wire 1 u" \:X_414 $end
$var wire 1 v" \:X_415 $end
$var wire 1 w" resetn $end
$var reg 1 x" trap $end
$var reg 1 y" mem_valid $end
$var wire 1 z" mem_ready $end
$var wire 32 {" mem_rdata [31:0] $end
$var wire 1 |" mem_la_read $end
$var reg 32 }" \cpuregs[2] [31:0] $end
$var reg 32 ~" \cpuregs[3] [31:0] $end
$var reg 32 !# \cpuregs[4] [31:0] $end
$var reg 32 "# \cpuregs[5] [31:0] $end
$var reg 32 ## \cpuregs[6] [31:0] $end
$var reg 32 $# \cpuregs[7] [31:0] $end
$var reg 32 %# \cpuregs[8] [31:0] $end
$var reg 32 &# \cpuregs[9] [31:0] $end
$var reg 32 '# \cpuregs[10] [31:0] $end
$var reg 32 (# \cpuregs[11] [31:0] $end
$var reg 32 )# \cpuregs[12] [31:0] $end
$var reg 32 *# \cpuregs[13] [31:0] $end
$var reg 32 +# \cpuregs[14] [31:0] $end
$var reg 32 ,# \cpuregs[15] [31:0] $end
$var reg 32 -# \cpuregs[16] [31:0] $end
$var reg 32 .# \cpuregs[17] [31:0] $end
$var reg 32 /# \cpuregs[18] [31:0] $end
$var reg 32 0# \cpuregs[19] [31:0] $end
$var reg 32 1# \cpuregs[20] [31:0] $end
$var reg 32 2# \cpuregs[21] [31:0] $end
$var reg 32 3# \cpuregs[22] [31:0] $end
$var reg 32 4# \cpuregs[23] [31:0] $end
$var reg 32 5# \cpuregs[24] [31:0] $end
$var reg 32 6# \cpuregs[25] [31:0] $end
$var reg 32 7# \cpuregs[26] [31:0] $end
$var reg 32 8# \cpuregs[27] [31:0] $end
$var reg 32 9# \cpuregs[28] [31:0] $end
$var reg 32 :# \cpuregs[29] [31:0] $end
$var reg 32 ;# \cpuregs[30] [31:0] $end
$var reg 32 <# \cpuregs[31] [31:0] $end
$var wire 1 =# \:X_156 $end
$var wire 1 ># \:X_157 $end
$var wire 1 ?# \:X_158 $end
$var wire 1 @# \:X_159 $end
$var wire 1 A# \:X_160 $end
$var wire 1 B# \:X_236 $end
$var wire 1 C# \:X_237 $end
$var wire 1 D# \:X_238 $end
$var wire 1 E# \:X_239 $end
$var wire 1 F# \:X_240 $end
$var wire 1 G# \:X_241 $end
$var wire 1 H# \:X_242 $end
$var wire 1 I# \:X_243 $end
$var wire 1 J# \:X_244 $end
$var wire 1 K# \:X_245 $end
$var wire 1 L# \:X_246 $end
$var wire 1 M# \:X_247 $end
$var wire 1 N# \:X_248 $end
$var wire 1 O# \:X_249 $end
$var wire 1 P# \:X_250 $end
$var wire 1 Q# \:X_251 $end
$var wire 1 R# \:X_252 $end
$var wire 1 S# \:X_253 $end
$var wire 1 T# \:X_254 $end
$var wire 1 U# \:X_255 $end
$var wire 1 V# pcpi_mul_wr $end
$var wire 32 W# pcpi_mul_rd [31:0] $end
$var wire 1 X# pcpi_mul_wait $end
$var wire 1 Y# pcpi_mul_ready $end
$var wire 1 Z# pcpi_div_wr $end
$var wire 32 [# pcpi_div_rd [31:0] $end
$var wire 1 \# pcpi_div_wait $end
$var wire 1 ]# pcpi_div_ready $end
$var wire 1 ^# pcpi_int_wr $end
$var wire 32 _# pcpi_int_rd [31:0] $end
$var wire 1 `# pcpi_int_wait $end
$var wire 1 a# pcpi_int_ready $end
$var reg 2 b# mem_state [1:0] $end
$var reg 2 c# mem_wordsize [1:0] $end
$var wire 32 d# mem_rdata_word [31:0] $end
$var reg 32 e# mem_rdata_q [31:0] $end
$var wire 1 f# \:X_376 $end
$var wire 1 g# \:X_377 $end
$var wire 1 h# \:X_378 $end
$var wire 1 i# \:X_379 $end
$var wire 1 j# \:X_380 $end
$var wire 1 k# \:X_381 $end
$var wire 1 l# \:X_382 $end
$var wire 1 m# \:X_383 $end
$var wire 1 n# \:X_384 $end
$var wire 1 o# \:X_385 $end
$var wire 1 p# \:X_386 $end
$var wire 1 q# \:X_387 $end
$var wire 1 r# \:X_388 $end
$var wire 1 s# \:X_389 $end
$var wire 1 t# \:X_390 $end
$var wire 1 u# \:X_391 $end
$var wire 1 v# \:X_392 $end
$var wire 1 w# \:X_393 $end
$var wire 1 x# \:X_394 $end
$var wire 1 y# \:X_395 $end
$var wire 1 z# \:X_256 $end
$var reg 1 {# mem_do_prefetch $end
$var reg 1 |# mem_do_rinst $end
$var reg 1 }# mem_do_rdata $end
$var reg 1 ~# mem_do_wdata $end
$var wire 1 !$ mem_xfer $end
$var reg 1 "$ mem_la_secondword $end
$var reg 1 #$ pcpi_timeout $end
$var reg 1 $$ do_waitirq $end
$var wire 32 %$ alu_out [31:0] $end
$var reg 32 &$ alu_out_q [31:0] $end
$var wire 1 '$ alu_out_0 $end
$var reg 1 ($ mem_la_firstword_reg $end
$var reg 1 )$ last_mem_valid $end
$var wire 1 *$ \:X_64 $end
$var wire 1 +$ \:X_492 $end
$var wire 1 ,$ \:X_491 $end
$var wire 1 -$ \:X_490 $end
$var wire 1 .$ \:X_489 $end
$var wire 1 /$ \:X_488 $end
$var wire 1 0$ \:X_487 $end
$var wire 1 1$ \:X_486 $end
$var wire 1 2$ \:X_485 $end
$var wire 1 3$ \:X_484 $end
$var wire 1 4$ \:X_483 $end
$var wire 1 5$ \:X_482 $end
$var wire 1 6$ \:X_481 $end
$var wire 1 7$ \:X_480 $end
$var wire 1 8$ \:X_479 $end
$var wire 1 9$ mem_la_firstword $end
$var reg 1 :$ prefetched_high_word $end
$var wire 1 ;$ clear_prefetched_high_word $end
$var reg 16 <$ mem_16bit_buffer [15:0] $end
$var wire 32 =$ next_pc [31:0] $end
$var reg 32 >$ \cpuregs[0] [31:0] $end
$var reg 32 ?$ \cpuregs[1] [31:0] $end
$var reg 1 @$ is_slli_srli_srai $end
$var reg 1 A$ is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 B$ is_sb_sh_sw $end
$var reg 1 C$ is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 D$ is_slti_blt_slt $end
$var reg 1 E$ is_sltiu_bltu_sltu $end
$var reg 1 F$ is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 G$ is_lbu_lhu_lw $end
$var reg 1 H$ is_alu_reg_imm $end
$var reg 1 I$ is_alu_reg_reg $end
$var reg 1 J$ is_compare $end
$var wire 1 K$ is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var reg 1 L$ instr_sltu $end
$var reg 1 M$ instr_xor $end
$var reg 1 N$ instr_srl $end
$var reg 1 O$ instr_sra $end
$var reg 1 P$ instr_or $end
$var reg 1 Q$ instr_and $end
$var reg 1 R$ instr_rdcycle $end
$var reg 1 S$ instr_rdcycleh $end
$var reg 1 T$ instr_rdinstr $end
$var reg 1 U$ instr_rdinstrh $end
$var reg 1 V$ instr_ecall_ebreak $end
$var reg 1 W$ instr_getq $end
$var reg 1 X$ instr_setq $end
$var reg 1 Y$ instr_retirq $end
$var reg 1 Z$ instr_maskirq $end
$var reg 1 [$ instr_waitirq $end
$var reg 1 \$ instr_timer $end
$var wire 1 ]$ instr_trap $end
$var reg 5 ^$ decoded_rd [4:0] $end
$var reg 32 _$ q_insn_opcode [31:0] $end
$var reg 1 `$ dbg_next $end
$var wire 1 a$ launch_next_insn $end
$var reg 1 b$ dbg_valid_insn $end
$var wire 32 c$ mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 d$ mem_rdata_latched [31:0] $end
$var wire 1 e$ mem_la_use_prefetched_high_word $end
$var wire 1 f$ mem_done $end
$var reg 1 g$ instr_lui $end
$var reg 1 h$ instr_auipc $end
$var reg 1 i$ instr_jal $end
$var reg 1 j$ instr_jalr $end
$var reg 1 k$ instr_beq $end
$var reg 1 l$ instr_bne $end
$var reg 1 m$ instr_blt $end
$var reg 1 n$ instr_bge $end
$var reg 1 o$ instr_bltu $end
$var reg 1 p$ instr_bgeu $end
$var reg 1 q$ instr_lb $end
$var reg 1 r$ instr_lh $end
$var reg 1 s$ instr_lw $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ rvfi_valid $end
$var wire 32 v$ rvfi_insn [31:0] $end
$var wire 1 w$ mem_ready $end
$var wire 32 x$ mem_rdata [31:0] $end
$var wire 1 y$ reset $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ rvfi_valid $end
$var wire 32 |$ rvfi_insn [31:0] $end
$var wire 1 }$ spec_valid $end
$var wire 32 ~$ insn_padding [31:0] $end
$var wire 3 !% insn_funct3 [2:0] $end
$var wire 2 "% insn_opcode [1:0] $end
$upscope $end
$var wire 1 #% valid $end
$var wire 1 $% reset $end
$var wire 1 %% check $end
$var wire 1 &% rvfi_valid $end
$var wire 32 '% rvfi_insn [31:0] $end
$var wire 1 (% spec_valid $end
$var wire 1 )% clock $end
$upscope $end
$var wire 32 *% rvfi_insn [31:0] $end
$var reg 8 +% cycle_reg [7:0] $end
$var wire 8 ,% cycle [7:0] $end
$var wire 1 -% \:jasper_formal_reset $end
$var wire 1 .% reset $end
$var wire 1 /% rvfi_valid $end
$var wire 1 0% \:jasper_formal_clock $end
$var wire 1 1% clock $end
$upscope $end
$enddefinitions $end
#0
1!
0"
b00000010000000000100000000110011 #
b11111111111111111111111111111111 $
b00000000000000000000000000010001 %
0&
0'
b00000000000000000000000000000000 (
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
b00000000000000000000000000000000 O
0P
0Q
0R
1S
0T
b0000 U
0V
1W
0X
b00000010000000000100000000110011 Y
b11111111111111111111111111111111 Z
b00000000000000000000000000010001 [
0\
0]
b00000000000000000000000000000000 ^
0_
0`
0a
0b
0c
0d
1e
0f
b00000010000000000100000000110011 g
b11111111111111111111111111111111 h
b00000000000000000000000000010001 i
0j
b00000000000000000001000000000000 k
b0000000000000000000000000000000000000000000000000000000000000000 l
b0000000000000000000000000000000000000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b11111111111111111111111111111111 p
b00000000000000000000000000010001 q
b00000000000000000000000000000000 r
b11111 s
b11111111111111110000000000000011 t
b00000000000000000001000000000000 u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
1T!
0U!
1V!
b10001 W!
b11111 X!
b00000000000000001000000010000000 Y!
b00000000000000000000000000000000 Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
1l!
1m!
1n!
1o!
1p!
1q!
1r!
1s!
1t!
1u!
0v!
1w!
1x!
1y!
1z!
1{!
1|!
1}!
1~!
1!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
15"
16"
17"
18"
19"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
1C"
0D"
1E"
1F"
1G"
1H"
1I"
1J"
1K"
b00000000000000000000000000000000 L"
b01000000 M"
b00 N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
b00001 V"
b1111 W"
b00000000000000000000000000010000 X"
b11111111111111100000000000000000 Y"
b00000000000000000111111111111111 Z"
0["
0\"
1]"
1^"
0_"
b11111111111111111011111111111111 `"
b00000000000000001000000000010000 a"
b11111111111111111011111111111011 b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
1l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
1w"
0x"
0y"
0z"
b00000000000000000000000000000011 {"
0|"
b00000000000000000000000000000000 }"
b00000000000000000000000000000000 ~"
b00000000000000000000000000000000 !#
b00000000000000000000000000000000 "#
b00000000000000000000000000000000 ##
b00000000000000000000000000000000 $#
b11111111111111111111111111001010 %#
b00000000000000000000000000000000 &#
b00000000000000000000000000000000 '#
b00000000000000000000000000000000 (#
b00000000000000000000000000000000 )#
b00000000000000000000000000000000 *#
b00000000000000000000000000000000 +#
b00000000000000000000000000000000 ,#
b00000000000000000000000000000000 -#
b00000000000000001000000000010000 .#
b00000000000000000000000000000000 /#
b00000000000000000000000000000000 0#
b00000000000000000000000000000000 1#
b00000000000000000000000000000000 2#
b00000000000000000000000000000000 3#
b00000000000000000000000000000000 4#
b00000000000000000000000000000000 5#
b00000000000000000000000000000000 6#
b00000000000000000000000000000000 7#
b00000000000000000000000000000000 8#
b00000000000000000000000000000000 9#
b00000000000000000000000000000000 :#
b00000000000000000000000000000000 ;#
b11111111111111111011111111111011 <#
1=#
1>#
1?#
1@#
1A#
1B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
b00000000000000000000000000000000 W#
0X#
0Y#
0Z#
b00000000000000000000000000000000 [#
0\#
0]#
0^#
b00000000000000000000000000000000 _#
0`#
0a#
b00 b#
b11 c#
b00000000000000000000000000000000 d#
b00000000000000001001000100110011 e#
0f#
0g#
0h#
0i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
0!$
0"$
0#$
0$$
b00000000000000000000000000000000 %$
b00000000000000000000000000000000 &$
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
b0000000000000000 <$
b00000000000000000000000000000000 =$
b00000000000000000000000000000000 >$
b00000000000000000000000000000000 ?$
0@$
0A$
0B$
0C$
0D$
0E$
0F$
0G$
1H$
1I$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
b11111 ^$
b00000000000000000001000000000000 _$
0`$
0a$
0b$
b00000000000000001001000100110011 c$
b00000000000000001001000100110011 d$
0e$
0f$
0g$
0h$
1i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
1q$
0r$
0s$
1t$
0u$
b00000000000000000001000000000000 v$
0w$
b00000000000000000000000000000011 x$
0y$
1z$
0{$
b00000000000000000001000000000000 |$
0}$
b00000000000000000000000000000000 ~$
b000 !%
b00 "%
0#%
0$%
0%%
0&%
b00000000000000000001000000000000 '%
0(%
1)%
b00000000000000000001000000000000 *%
b00000001 +%
b00000001 ,%
0-%
0.%
0/%
10%
11%
#5
0S
0e
0t$
0z$
0)%
00%
01%
#10
1S
1e
b0000000000000000000000000000000000000000000000000000000000000001 l
b00000000010100000000000000000000 r
1U!
1v!
0C"
1R"
b11111 V"
0^"
b11111111111111111111111111111111 `"
0l"
1|"
0B#
b00 c#
b00000000000000000000000000000011 d#
1|#
b00000000000000000000000000010000 %$
1C$
1t$
1z$
1)%
b00000010 +%
b00000010 ,%
10%
11%
#15
0S
0e
0t$
0z$
0)%
00%
01%
#20
1S
1e
b0000000000000000000000000000000000000000000000000000000000000010 l
b00000000000000000000000000000000 r
1y"
1z"
b01100000000000101100000000001001 {"
0|"
b01 b#
b01100000000000101100000000001001 d#
1!$
b00000000000000000000000000010000 &$
b01100000000000101100000000001001 c$
b01100000000000101100000000001001 d$
1f$
1t$
1w$
b01100000000000101100000000001001 x$
1z$
1)%
b00000011 +%
b00000011 ,%
10%
11%
#25
0S
0e
0t$
0z$
0)%
00%
01%
#30
1S
1e
b0000000000000000000000000000000000000000000000000000000000000011 l
b01100000000000101100000000001001 t
1P!
0V!
b01000 W!
b00000 X!
b00000000000000000000000000000010 Z!
b11111111111111111111111111001010 a"
b00000000000000000000000000000000 b"
0y"
0z"
b00000000000000000000000000000000 {"
b00 b#
b00000000000000000000000000000000 d#
b00000000000000101000000100001001 e#
0|#
0!$
1:$
b0110000000000010 <$
1F$
0H$
0I$
b00000 ^$
1a$
b00000000000000101000000100001001 c$
b00000000000000101000000100001001 d$
0f$
0i$
1t$
0w$
b00000000000000000000000000000000 x$
1z$
1)%
b00000100 +%
b00000100 ,%
10%
11%
#35
0S
0e
0t$
0z$
0)%
00%
01%
#40
b00000000000000101000000100001001 #
1S
b00000000000000101000000100001001 Y
1e
b00000000000000101000000100001001 g
b0000000000000000000000000000000000000000000000000000000000000100 l
b0000000000000000000000000000000000000000000000000000000000000001 m
b00000000000000000000000000000010 o
b00000000000000001100000000001001 u
0P!
1Q!
0U!
b00000000000000000000000000000010 Y!
b00100000 M"
b00000 V"
b11111111111111111111111111111001 `"
0?#
0@#
1{#
b00000000000000000000000000000000 %$
14$
19$
b00000000000000000000000000000010 =$
0C$
1`$
0a$
1b$
b00000000000000000110000000000010 d$
1e$
1k$
0q$
1t$
1z$
1)%
b00000101 +%
b00000101 ,%
10%
11%
#45
0S
0e
0t$
0z$
0)%
00%
01%
#50
b11111111111111111111111111001010 $
b00000000000000000000000000000000 %
1S
b11111111111111111111111111001010 Z
b00000000000000000000000000000000 [
1e
b11111111111111111111111111001010 h
b00000000000000000000000000000000 i
b00000000000000001100000000001001 k
b0000000000000000000000000000000000000000000000000000000000000101 l
b11111111111111111111111111001010 p
b00000000000000000000000000000000 q
b00000 s
0Q!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
b00000000000000001100000000001001 L"
b00001000 M"
b11111111111111111111111111001010 X"
b11111111111111111111111111001010 Y"
b11111111111111111111111111001010 Z"
b00000000000000000000000000000000 `"
0=#
0>#
0A#
b01 b#
1|#
1!$
b00000000000000000000000000000000 &$
1($
04$
1J$
b00000000000000001100000000001001 _$
0`$
b00000000000000000000000000000000 c$
1f$
1t$
b00000000000000001100000000001001 v$
1z$
b00000000000000001100000000001001 |$
b110 !%
b01 "%
b00000000000000001100000000001001 '%
1)%
b00000000000000001100000000001001 *%
b00000110 +%
b00000110 ,%
10%
11%
#55
0S
0e
0t$
0z$
0)%
00%
01%
#60
1S
1e
b0000000000000000000000000000000000000000000000000000000000000110 l
b00000000000000000000000000000010 r
b11111 s
b00000000000000000110000000000010 t
1P!
b00000 W!
b00000000000000000000000000000000 Z!
b01000000 M"
b00000000000000000000000000000000 a"
b00 b#
b00000000000000000110000000000010 e#
0{#
0|#
0!$
09$
b0000000000000000 <$
0F$
1a$
b00000000000000000110000000000010 c$
0e$
0f$
1t$
1z$
1)%
b00000111 +%
b00000111 ,%
10%
11%
#65
0S
0e
0t$
0z$
0)%
00%
01%
#70
b00000000000000000110000000000010 #
1S
b00000000000000000110000000000010 Y
1e
b00000000000000000110000000000010 g
1j
b0000000000000000000000000000000000000000000000000000000000000111 l
b0000000000000000000000000000000000000000000000000000000000000010 m
b00000000000000000000000000000010 n
b00000000000000000000000000000100 o
b00000000000000000000000000000000 r
b00000000000000000110000000000010 u
0P!
1Q!
b00000000000000000000000000000000 Y!
b00100000 M"
1|"
1{#
0($
b00000000000000000000000000000100 =$
0J$
1]$
1`$
0a$
0k$
1t$
1u$
1z$
1{$
1#%
1&%
1)%
b00001000 +%
b00001000 ,%
1/%
10%
11%
#75
0S
0e
0t$
0z$
0)%
00%
01%
#80
