$date Mon Feb 25 19:11:30 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! \:X_0 $end
$var wire 1 " \:X_1 $end
$var wire 1 # \:X_2 $end
$var wire 1 $ \:X_5 $end
$var wire 1 % \:X_6 $end
$var wire 1 & \:X_7 $end
$var wire 1 ' \:X_8 $end
$var wire 1 ( \:X_9 $end
$var wire 1 ) \:X_10 $end
$var wire 1 * \:X_11 $end
$var wire 1 + \:X_12 $end
$var wire 1 , \:X_13 $end
$var wire 1 - \:X_14 $end
$var wire 1 . \:X_15 $end
$var wire 1 / \:X_16 $end
$var wire 1 0 \:X_17 $end
$var wire 1 1 \:X_18 $end
$var wire 1 2 \:X_19 $end
$var wire 1 3 \:X_20 $end
$var wire 1 4 \:X_21 $end
$var wire 1 5 \:X_22 $end
$var wire 1 6 \:X_23 $end
$var wire 1 7 \:X_24 $end
$var wire 1 8 \:X_25 $end
$var wire 1 9 \:X_26 $end
$var wire 1 : \:X_27 $end
$var wire 1 ; \:X_28 $end
$var wire 1 < \:X_29 $end
$var wire 1 = \:X_30 $end
$var wire 1 > \:X_31 $end
$var wire 1 ? resetn $end
$var wire 1 @ pcpi_valid $end
$var wire 32 A pcpi_insn [31:0] $end
$var wire 32 B pcpi_rs1 [31:0] $end
$var wire 32 C pcpi_rs2 [31:0] $end
$var wire 1 D instr_any_div_rem $end
$var reg 1 E pcpi_wr $end
$var reg 32 F pcpi_rd [31:0] $end
$var reg 1 G pcpi_wait $end
$var reg 1 H pcpi_ready $end
$var reg 1 I instr_div $end
$var reg 1 J instr_divu $end
$var reg 1 K instr_rem $end
$var reg 1 L instr_remu $end
$var reg 1 M pcpi_wait_q $end
$var wire 1 N start $end
$var reg 32 O quotient_msk [31:0] $end
$var reg 1 P running $end
$var wire 1 Q \:X_3 $end
$var wire 1 R \:X_4 $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T pcpi_insn_valid $end
$var wire 1 U resetn $end
$var wire 1 V pcpi_valid $end
$var wire 32 W pcpi_insn [31:0] $end
$var wire 32 X pcpi_rs1 [31:0] $end
$var wire 32 Y pcpi_rs2 [31:0] $end
$var wire 1 Z instr_any_mul $end
$var wire 1 [ pcpi_wr $end
$var wire 32 \ pcpi_rd [31:0] $end
$var wire 1 ] pcpi_wait $end
$var wire 1 ^ pcpi_ready $end
$var wire 1 _ instr_mul $end
$var wire 1 ` instr_mulh $end
$var wire 1 a instr_mulhsu $end
$var wire 1 b instr_mulhu $end
$var reg 4 c active [3:0] $end
$var wire 1 d \:X_3556 $end
$var wire 1 e clk $end
$upscope $end
$var reg 32 f \cpuregs[25] [31:0] $end
$var reg 32 g \cpuregs[26] [31:0] $end
$var reg 32 h \cpuregs[27] [31:0] $end
$var reg 32 i \cpuregs[28] [31:0] $end
$var reg 32 j \cpuregs[29] [31:0] $end
$var reg 32 k \cpuregs[30] [31:0] $end
$var reg 32 l \cpuregs[31] [31:0] $end
$var wire 1 m pcpi_mul_wr $end
$var wire 32 n pcpi_mul_rd [31:0] $end
$var wire 1 o pcpi_mul_wait $end
$var wire 1 p pcpi_mul_ready $end
$var wire 1 q pcpi_div_wr $end
$var wire 32 r pcpi_div_rd [31:0] $end
$var wire 1 s pcpi_div_wait $end
$var wire 1 t pcpi_div_ready $end
$var wire 1 u pcpi_int_wr $end
$var wire 32 v pcpi_int_rd [31:0] $end
$var wire 1 w pcpi_int_wait $end
$var wire 1 x pcpi_int_ready $end
$var wire 1 y \:X_492 $end
$var wire 32 z mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 { mem_rdata_latched [31:0] $end
$var wire 1 | mem_la_use_prefetched_high_word $end
$var wire 1 } mem_done $end
$var reg 1 ~ instr_lui $end
$var reg 1 !! instr_auipc $end
$var reg 1 "! instr_jal $end
$var reg 1 #! instr_jalr $end
$var reg 1 $! instr_beq $end
$var reg 1 %! instr_bne $end
$var reg 1 &! instr_blt $end
$var reg 1 '! instr_bge $end
$var reg 1 (! instr_bltu $end
$var reg 1 )! instr_bgeu $end
$var reg 1 *! instr_lb $end
$var reg 1 +! instr_lh $end
$var reg 1 ,! instr_lw $end
$var reg 1 -! instr_lbu $end
$var reg 1 .! instr_lhu $end
$var reg 1 /! instr_sb $end
$var reg 1 0! instr_sh $end
$var reg 32 1! \cpuregs[7] [31:0] $end
$var reg 32 2! \cpuregs[8] [31:0] $end
$var reg 32 3! \cpuregs[9] [31:0] $end
$var reg 32 4! \cpuregs[10] [31:0] $end
$var reg 32 5! \cpuregs[11] [31:0] $end
$var reg 32 6! \cpuregs[12] [31:0] $end
$var reg 32 7! \cpuregs[13] [31:0] $end
$var reg 32 8! \cpuregs[14] [31:0] $end
$var reg 32 9! \cpuregs[15] [31:0] $end
$var reg 32 :! \cpuregs[16] [31:0] $end
$var reg 32 ;! \cpuregs[17] [31:0] $end
$var reg 32 <! \cpuregs[18] [31:0] $end
$var reg 32 =! \cpuregs[19] [31:0] $end
$var reg 32 >! \cpuregs[20] [31:0] $end
$var reg 32 ?! \cpuregs[21] [31:0] $end
$var reg 32 @! \cpuregs[22] [31:0] $end
$var reg 32 A! \cpuregs[23] [31:0] $end
$var reg 32 B! \cpuregs[24] [31:0] $end
$var wire 1 C! \:X_410 $end
$var wire 1 D! \:X_411 $end
$var wire 1 E! \:X_412 $end
$var wire 1 F! \:X_413 $end
$var wire 1 G! \:X_414 $end
$var wire 1 H! \:X_415 $end
$var wire 1 I! \:X_416 $end
$var wire 1 J! \:X_417 $end
$var wire 1 K! \:X_418 $end
$var wire 1 L! \:X_419 $end
$var wire 1 M! \:X_420 $end
$var wire 1 N! \:X_252 $end
$var wire 1 O! \:X_253 $end
$var wire 1 P! \:X_254 $end
$var wire 1 Q! \:X_255 $end
$var wire 1 R! \:X_256 $end
$var wire 1 S! \:X_42 $end
$var wire 1 T! \:X_43 $end
$var wire 1 U! \:X_44 $end
$var wire 1 V! \:X_45 $end
$var wire 1 W! \:X_46 $end
$var wire 1 X! \:X_47 $end
$var wire 1 Y! \:X_48 $end
$var wire 1 Z! \:X_49 $end
$var wire 1 [! \:X_50 $end
$var wire 1 \! \:X_51 $end
$var wire 1 ]! \:X_52 $end
$var wire 1 ^! \:X_53 $end
$var wire 1 _! \:X_54 $end
$var wire 1 `! \:X_55 $end
$var wire 1 a! \:X_56 $end
$var wire 1 b! \:X_57 $end
$var wire 1 c! \:X_58 $end
$var wire 1 d! \:X_59 $end
$var wire 1 e! \:X_60 $end
$var wire 1 f! \:X_61 $end
$var wire 1 g! \:X_62 $end
$var wire 1 h! \:X_63 $end
$var reg 1 i! do_waitirq $end
$var wire 32 j! alu_out [31:0] $end
$var wire 1 k! \:X_357 $end
$var wire 1 l! \:X_358 $end
$var wire 1 m! \:X_359 $end
$var wire 1 n! \:X_360 $end
$var wire 1 o! \:X_361 $end
$var reg 1 p! instr_sw $end
$var reg 1 q! instr_addi $end
$var reg 1 r! instr_slti $end
$var reg 1 s! instr_sltiu $end
$var reg 1 t! instr_xori $end
$var reg 1 u! instr_ori $end
$var reg 1 v! instr_andi $end
$var reg 1 w! instr_slli $end
$var reg 1 x! instr_srli $end
$var reg 1 y! instr_srai $end
$var reg 1 z! instr_add $end
$var reg 1 {! instr_sub $end
$var reg 1 |! instr_sll $end
$var reg 1 }! instr_slt $end
$var reg 1 ~! instr_sltu $end
$var reg 1 !" instr_xor $end
$var reg 1 "" instr_srl $end
$var reg 1 #" instr_sra $end
$var reg 1 $" instr_or $end
$var reg 1 %" instr_and $end
$var reg 1 &" instr_rdcycle $end
$var reg 1 '" instr_rdcycleh $end
$var wire 1 (" \:X_220 $end
$var wire 1 )" \:X_221 $end
$var wire 1 *" \:X_222 $end
$var wire 1 +" \:X_223 $end
$var wire 1 ," \:X_224 $end
$var wire 1 -" \:X_225 $end
$var wire 1 ." \:X_226 $end
$var wire 1 /" \:X_227 $end
$var wire 1 0" mem_la_firstword $end
$var reg 1 1" prefetched_high_word $end
$var wire 1 2" clear_prefetched_high_word $end
$var reg 16 3" mem_16bit_buffer [15:0] $end
$var wire 32 4" next_pc [31:0] $end
$var reg 32 5" \cpuregs[0] [31:0] $end
$var reg 32 6" \cpuregs[1] [31:0] $end
$var reg 32 7" \cpuregs[2] [31:0] $end
$var reg 32 8" \cpuregs[3] [31:0] $end
$var reg 32 9" \cpuregs[4] [31:0] $end
$var reg 32 :" \cpuregs[5] [31:0] $end
$var reg 32 ;" \cpuregs[6] [31:0] $end
$var wire 1 <" \:X_386 $end
$var wire 1 =" \:X_387 $end
$var wire 1 >" \:X_388 $end
$var wire 1 ?" \:X_389 $end
$var wire 1 @" \:X_390 $end
$var wire 1 A" \:X_391 $end
$var wire 1 B" \:X_392 $end
$var wire 1 C" \:X_393 $end
$var wire 1 D" \:X_394 $end
$var wire 1 E" \:X_395 $end
$var wire 1 F" \:X_396 $end
$var wire 1 G" \:X_397 $end
$var wire 1 H" \:X_398 $end
$var wire 1 I" \:X_399 $end
$var wire 1 J" \:X_400 $end
$var wire 1 K" \:X_401 $end
$var wire 1 L" \:X_402 $end
$var wire 1 M" \:X_403 $end
$var wire 1 N" \:X_404 $end
$var wire 1 O" \:X_405 $end
$var wire 1 P" \:X_406 $end
$var wire 1 Q" \:X_407 $end
$var wire 1 R" \:X_408 $end
$var wire 1 S" \:X_409 $end
$var reg 32 T" cached_insn_opcode [31:0] $end
$var reg 8 U" cpu_state [7:0] $end
$var reg 2 V" irq_state [1:0] $end
$var reg 1 W" latched_store $end
$var reg 1 X" latched_stalu $end
$var reg 1 Y" latched_branch $end
$var reg 1 Z" latched_compr $end
$var reg 1 [" latched_is_lu $end
$var reg 1 \" latched_is_lh $end
$var reg 1 ]" latched_is_lb $end
$var reg 5 ^" latched_rd [4:0] $end
$var reg 4 _" pcpi_timeout_counter [3:0] $end
$var reg 32 `" decoded_imm_uj [31:0] $end
$var reg 1 a" decoder_trigger $end
$var reg 1 b" decoder_trigger_q $end
$var reg 1 c" decoder_pseudo_trigger $end
$var reg 1 d" decoder_pseudo_trigger_q $end
$var reg 1 e" compressed_instr $end
$var reg 1 f" rvfi_valid $end
$var reg 32 g" rvfi_insn [31:0] $end
$var reg 2 h" mem_state [1:0] $end
$var reg 2 i" mem_wordsize [1:0] $end
$var wire 32 j" mem_rdata_word [31:0] $end
$var reg 32 k" mem_rdata_q [31:0] $end
$var reg 1 l" mem_do_prefetch $end
$var reg 1 m" mem_do_rinst $end
$var reg 1 n" mem_do_rdata $end
$var reg 1 o" mem_do_wdata $end
$var wire 1 p" mem_xfer $end
$var reg 1 q" mem_la_secondword $end
$var reg 32 r" alu_out_q [31:0] $end
$var wire 1 s" alu_out_0 $end
$var wire 32 t" alu_add_sub [31:0] $end
$var wire 32 u" alu_shl [31:0] $end
$var wire 32 v" alu_shr [31:0] $end
$var reg 1 w" mem_la_firstword_reg $end
$var reg 1 x" last_mem_valid $end
$var wire 1 y" mem_ready $end
$var wire 32 z" mem_rdata [31:0] $end
$var wire 1 {" mem_la_read $end
$var reg 1 |" pcpi_valid $end
$var reg 32 }" pcpi_insn [31:0] $end
$var wire 32 ~" pcpi_rs1 [31:0] $end
$var wire 32 !# pcpi_rs2 [31:0] $end
$var wire 1 "# \:X_140 $end
$var wire 1 ## \:X_141 $end
$var wire 1 $# \:X_142 $end
$var wire 1 %# \:X_143 $end
$var wire 1 &# \:X_144 $end
$var wire 1 '# \:X_145 $end
$var wire 1 (# \:X_146 $end
$var wire 1 )# \:X_147 $end
$var wire 1 *# \:X_148 $end
$var wire 1 +# \:X_149 $end
$var wire 1 ,# \:X_150 $end
$var wire 1 -# \:X_151 $end
$var wire 1 .# \:X_152 $end
$var wire 1 /# \:X_153 $end
$var wire 1 0# \:X_154 $end
$var wire 1 1# \:X_155 $end
$var wire 1 2# \:X_156 $end
$var wire 1 3# \:X_157 $end
$var wire 1 4# \:X_158 $end
$var wire 1 5# \:X_159 $end
$var wire 1 6# \:X_160 $end
$var wire 1 7# \:X_362 $end
$var wire 1 8# \:X_363 $end
$var wire 1 9# \:X_364 $end
$var wire 1 :# \:X_365 $end
$var wire 1 ;# \:X_366 $end
$var wire 1 <# \:X_367 $end
$var wire 1 =# \:X_368 $end
$var wire 1 ># \:X_369 $end
$var wire 1 ?# \:X_370 $end
$var wire 1 @# \:X_371 $end
$var wire 1 A# \:X_372 $end
$var wire 1 B# \:X_373 $end
$var wire 1 C# \:X_374 $end
$var wire 1 D# \:X_375 $end
$var wire 1 E# \:X_376 $end
$var wire 1 F# \:X_377 $end
$var wire 1 G# \:X_378 $end
$var wire 1 H# \:X_379 $end
$var wire 1 I# \:X_380 $end
$var wire 1 J# \:X_381 $end
$var wire 1 K# \:X_382 $end
$var wire 1 L# \:X_383 $end
$var wire 1 M# \:X_384 $end
$var wire 1 N# \:X_385 $end
$var wire 1 O# \:X_228 $end
$var wire 1 P# \:X_229 $end
$var wire 1 Q# \:X_230 $end
$var wire 1 R# \:X_231 $end
$var wire 1 S# \:X_232 $end
$var wire 1 T# \:X_233 $end
$var wire 1 U# \:X_234 $end
$var wire 1 V# \:X_235 $end
$var wire 1 W# \:X_236 $end
$var wire 1 X# \:X_237 $end
$var wire 1 Y# \:X_238 $end
$var wire 1 Z# \:X_239 $end
$var wire 1 [# \:X_240 $end
$var wire 1 \# \:X_241 $end
$var wire 1 ]# \:X_242 $end
$var wire 1 ^# \:X_243 $end
$var wire 1 _# \:X_244 $end
$var wire 1 `# \:X_245 $end
$var wire 1 a# \:X_246 $end
$var wire 1 b# \:X_247 $end
$var wire 1 c# \:X_248 $end
$var wire 1 d# \:X_249 $end
$var wire 1 e# \:X_250 $end
$var wire 1 f# \:X_251 $end
$var wire 1 g# \:X_64 $end
$var wire 1 h# \:X_466 $end
$var wire 1 i# \:X_465 $end
$var wire 1 j# \:X_464 $end
$var wire 1 k# \:X_463 $end
$var wire 1 l# \:X_462 $end
$var wire 1 m# \:X_461 $end
$var reg 1 n# is_sltiu_bltu_sltu $end
$var reg 1 o# is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 p# is_lbu_lhu_lw $end
$var reg 1 q# is_alu_reg_imm $end
$var reg 1 r# is_alu_reg_reg $end
$var reg 1 s# is_compare $end
$var wire 1 t# is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var wire 1 u# resetn $end
$var reg 1 v# trap $end
$var reg 1 w# mem_valid $end
$var wire 1 x# \:X_129 $end
$var wire 1 y# \:X_130 $end
$var wire 1 z# \:X_131 $end
$var wire 1 {# \:X_132 $end
$var wire 1 |# \:X_133 $end
$var wire 1 }# \:X_134 $end
$var wire 1 ~# \:X_135 $end
$var wire 1 !$ \:X_136 $end
$var wire 1 "$ \:X_137 $end
$var wire 1 #$ \:X_138 $end
$var wire 1 $$ \:X_139 $end
$var reg 1 %$ instr_rdinstr $end
$var reg 1 &$ instr_rdinstrh $end
$var reg 1 '$ instr_ecall_ebreak $end
$var reg 1 ($ instr_getq $end
$var reg 1 )$ instr_setq $end
$var reg 1 *$ instr_retirq $end
$var reg 1 +$ instr_maskirq $end
$var reg 1 ,$ instr_waitirq $end
$var reg 1 -$ instr_timer $end
$var wire 1 .$ instr_trap $end
$var reg 5 /$ decoded_rd [4:0] $end
$var reg 5 0$ decoded_rs1 [4:0] $end
$var reg 5 1$ decoded_rs2 [4:0] $end
$var reg 32 2$ decoded_imm [31:0] $end
$var reg 1 3$ is_lui_auipc_jal $end
$var reg 1 4$ is_lb_lh_lw_lbu_lhu $end
$var reg 1 5$ is_slli_srli_srai $end
$var reg 1 6$ is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 7$ is_sb_sh_sw $end
$var reg 1 8$ is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 9$ is_slti_blt_slt $end
$var reg 64 :$ count_cycle [63:0] $end
$var reg 64 ;$ count_instr [63:0] $end
$var reg 32 <$ reg_pc [31:0] $end
$var reg 32 =$ reg_next_pc [31:0] $end
$var reg 32 >$ reg_op1 [31:0] $end
$var reg 32 ?$ reg_op2 [31:0] $end
$var reg 32 @$ reg_out [31:0] $end
$var reg 5 A$ reg_sh [4:0] $end
$var reg 32 B$ next_insn_opcode [31:0] $end
$var wire 32 C$ dbg_insn_opcode [31:0] $end
$var reg 32 D$ q_insn_opcode [31:0] $end
$var reg 1 E$ dbg_next $end
$var wire 1 F$ launch_next_insn $end
$var reg 1 G$ dbg_valid_insn $end
$var reg 1 H$ pcpi_timeout $end
$var wire 1 I$ \:X_491 $end
$var wire 1 J$ \:X_490 $end
$var wire 1 K$ \:X_489 $end
$var wire 1 L$ \:X_488 $end
$var wire 1 M$ \:X_487 $end
$var wire 1 N$ \:X_486 $end
$var wire 1 O$ \:X_485 $end
$var wire 1 P$ \:X_484 $end
$var wire 1 Q$ \:X_483 $end
$var wire 1 R$ \:X_482 $end
$var wire 1 S$ \:X_481 $end
$var wire 1 T$ \:X_480 $end
$var wire 1 U$ \:X_479 $end
$var wire 1 V$ \:X_478 $end
$var wire 1 W$ \:X_477 $end
$var wire 1 X$ \:X_476 $end
$var wire 1 Y$ \:X_475 $end
$var wire 1 Z$ \:X_474 $end
$var wire 1 [$ \:X_473 $end
$var wire 1 \$ \:X_472 $end
$var wire 1 ]$ \:X_471 $end
$var wire 1 ^$ \:X_470 $end
$var wire 1 _$ \:X_469 $end
$var wire 1 `$ \:X_468 $end
$var wire 1 a$ \:X_467 $end
$var wire 1 b$ alu_eq $end
$var wire 1 c$ alu_ltu $end
$var wire 1 d$ alu_lts $end
$var reg 1 e$ clear_prefetched_high_word_q $end
$var wire 1 f$ cpuregs_write $end
$var wire 32 g$ cpuregs_wrdata [31:0] $end
$var wire 32 h$ cpuregs_rs1 [31:0] $end
$var wire 32 i$ cpuregs_rs2 [31:0] $end
$var wire 1 j$ \:X_32 $end
$var wire 1 k$ \:X_33 $end
$var wire 1 l$ \:X_34 $end
$var wire 1 m$ \:X_35 $end
$var wire 1 n$ \:X_36 $end
$var wire 1 o$ \:X_37 $end
$var wire 1 p$ \:X_38 $end
$var wire 1 q$ \:X_39 $end
$var wire 1 r$ \:X_40 $end
$var wire 1 s$ \:X_41 $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ mem_ready $end
$var wire 32 v$ mem_rdata [31:0] $end
$var wire 32 w$ rvfi_insn [31:0] $end
$var wire 1 x$ rvfi_valid $end
$var wire 1 y$ reset $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ rvfi_valid $end
$var wire 32 |$ rvfi_insn [31:0] $end
$var wire 1 }$ spec_valid $end
$var wire 32 ~$ insn_padding [31:0] $end
$var wire 7 !% insn_funct7 [6:0] $end
$var wire 3 "% insn_funct3 [2:0] $end
$var wire 7 #% insn_opcode [6:0] $end
$upscope $end
$var wire 1 $% valid $end
$var wire 1 %% spec_valid $end
$var wire 1 &% reset $end
$var wire 1 '% check $end
$var wire 1 (% rvfi_valid $end
$var wire 32 )% rvfi_insn [31:0] $end
$var wire 1 *% clock $end
$upscope $end
$var wire 1 +% reset $end
$var wire 1 ,% rvfi_valid $end
$var wire 32 -% rvfi_insn [31:0] $end
$var reg 8 .% cycle_reg [7:0] $end
$var wire 8 /% cycle [7:0] $end
$var wire 1 0% \:jasper_formal_reset $end
$var wire 1 1% clock $end
$var wire 1 2% \:jasper_formal_clock $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
1?
0@
b00000010000000000100000000110011 A
b11111111111111111111111111111111 B
b00000000000000000000000000000000 C
0D
0E
b00000000000000000000000000000000 F
0G
0H
0I
0J
0K
0L
0M
0N
b00000000000000000000000000000000 O
0P
0Q
0R
1S
0T
1U
0V
b00000010000000000100000000110011 W
b11111111111111111111111111111111 X
b00000000000000000000000000000000 Y
0Z
0[
b00000000000000000000000000000000 \
0]
0^
0_
0`
0a
0b
b0000 c
0d
1e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
0m
b00000000000000000000000000000000 n
0o
0p
0q
b00000000000000000000000000000000 r
0s
0t
0u
b00000000000000000000000000000000 v
0w
0x
0y
b00000000000000000000000001100011 z
b00000000000000000000000001100011 {
0|
0}
0~
0!!
1"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
1*!
0+!
0,!
0-!
0.!
0/!
00!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000000000000000000000000000000 ;!
b00000000000000000000000000000000 <!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
b00000000000000000000000000000000 A!
b00000000000000000000000000000000 B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
1L!
0M!
0N!
0O!
0P!
0Q!
1R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
b00000000000000000000000000000000 j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
1("
1)"
1*"
1+"
1,"
0-"
0."
0/"
00"
01"
02"
b0000000000000000 3"
b00000000000000000000000000000000 4"
b00000000000000000000000000000000 5"
b00000000000000000000000000000000 6"
b00000000000000000000000000000000 7"
b00000000000000000000000000000000 8"
b00000000000000000000000000000000 9"
b00000000000000000000000000000000 :"
b00000000000000000000000000000000 ;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
b00000000000000000000000000000000 T"
b01000000 U"
b00 V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
b00010 ^"
b1111 _"
b00000000000000000000000000000000 `"
0a"
0b"
0c"
0d"
1e"
0f"
b00000001111111111001000000000000 g"
b00 h"
b00 i"
b11101001111111000001000000000000 j"
b00000000000000000000000001100011 k"
0l"
0m"
0n"
0o"
0p"
0q"
b00000000000000000000000000000000 r"
0s"
b11111111111111111111111111111111 t"
b11111111111111111111111111111111 u"
b11111111111111111111111111111111 v"
0w"
0x"
0y"
b11101001111111000001000000000000 z"
0{"
0|"
b00000010000000000100000000110011 }"
b11111111111111111111111111111111 ~"
b00000000000000000000000000000000 !#
1"#
1##
1$#
1%#
1&#
1'#
1(#
1)#
1*#
1+#
1,#
0-#
1.#
1/#
10#
11#
02#
13#
14#
15#
16#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
1q#
1r#
0s#
1t#
1u#
0v#
0w#
1x#
1y#
1z#
1{#
1|#
1}#
1~#
1!$
1"$
1#$
1$$
0%$
1&$
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
b11111 /$
b11111 0$
b11111 1$
b00000000000000000000000000000011 2$
03$
14$
05$
16$
17$
08$
09$
b0000000000000000000000000000000000000000000000000000000000000000 :$
b0000000000000000000000000000000000000000000000000000000000000000 ;$
b00000000000000000000000000000000 <$
b00000000000000000000000000000000 =$
b11111111111111111111111111111111 >$
b00000000000000000000000000000000 ?$
b00000000000000000000000000000000 @$
b11111 A$
b11111111111111110000000000000011 B$
b00000001111111111001000000000000 C$
b00000001111111111001000000000000 D$
0E$
0F$
0G$
0H$
0I$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
1d$
1e$
0f$
b11111111111111111111110111101111 g$
b00000000000000000000000000000000 h$
b00000000000000000000000000000000 i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
1t$
0u$
b11101001111111000001000000000000 v$
b00000001111111111001000000000000 w$
0x$
0y$
1z$
0{$
b00000001111111111001000000000000 |$
0}$
b00000000000000000000000000000000 ~$
b0000000 !%
b001 "%
b0000000 #%
0$%
0%%
0&%
0'%
0(%
b00000001111111111001000000000000 )%
1*%
0+%
0,%
b00000001111111111001000000000000 -%
b00000001 .%
b00000001 /%
00%
11%
12%
#5
0S
0e
0t$
0z$
0*%
01%
02%
#10
1S
1e
1M!
0R!
b11111111111111111111111111111111 j!
1Z"
b11111 ^"
b00000000000000000000000000000011 j"
1m"
b00000000000000000000000000000011 z"
1{"
1-#
12#
13$
18$
b0000000000000000000000000000000000000000000000000000000000000001 :$
b00000000000000000000000000000001 @$
0e$
b11111111111111111111111111111111 g$
1t$
b00000000000000000000000000000011 v$
1z$
1*%
b00000010 .%
b00000010 /%
11%
12%
#15
0S
0e
0t$
0z$
0*%
01%
02%
#20
1S
1e
b00000000000000000000000001110011 z
b00000000000000000000000001110011 {
1}
b01 h"
b00000000000000000000000001110011 j"
1p"
b11111111111111111111111111111111 r"
1y"
b00000000000000000000000001110011 z"
0{"
1w#
b0000000000000000000000000000000000000000000000000000000000000010 :$
b00000000000000000000000000000000 @$
1t$
1u$
b00000000000000000000000001110011 v$
1z$
1*%
b00000011 .%
b00000011 /%
11%
12%
#25
0S
0e
0t$
0z$
0*%
01%
02%
#30
1S
1e
0}
0"!
1@"
1A"
1a"
0e"
b00 h"
b00000000000000000000000000000011 j"
b00000000000000000000000001110011 k"
0m"
0p"
0y"
b00000000000000000000000000000011 z"
1g#
0q#
0r#
0w#
b00000 /$
b00000 0$
b00000 1$
04$
07$
b0000000000000000000000000000000000000000000000000000000000000011 :$
b00000000000000000000000001110011 B$
1F$
1t$
0u$
b00000000000000000000000000000011 v$
1z$
1*%
b00000100 .%
b00000100 /%
11%
12%
#35
0S
0e
0t$
0z$
0*%
01%
02%
#40
b00000000000000000000000001110011 A
1S
b00000000000000000000000001110011 W
1e
0*!
0L!
0M!
b00000000000000000000000000000000 j!
b00000000000000000000000000000100 4"
0@"
0A"
b00100000 U"
0Z"
b00000 ^"
0a"
1b"
1l"
1{"
b00000000000000000000000001110011 }"
04#
05#
0g#
0t#
0&$
1'$
1.$
b00000000000000000000000000000001 2$
03$
06$
08$
b0000000000000000000000000000000000000000000000000000000000000100 :$
b0000000000000000000000000000000000000000000000000000000000000001 ;$
b00000000000000000000000000000100 =$
b00000000000000000000000001110011 C$
1E$
0F$
1G$
b11111111111111111111111111111001 g$
1t$
1z$
1*%
b00000101 .%
b00000101 /%
11%
12%
#45
0S
0e
0t$
0z$
0*%
01%
02%
#50
b00000000000000000000000000000000 B
1S
b00000000000000000000000000000000 X
1e
b00000000000000000011000100000000 z
b00000000000000000011000100000000 {
b00000000000000000000000001110011 T"
b10000000 U"
0b"
b00000000000000000000000001110011 g"
b01 h"
b00000000000000000011000100000000 j"
1p"
b00000000000000000000000000000000 r"
b00000000000000000000000000000000 t"
b00000000000000000000000000000000 u"
b00000000000000000000000000000000 v"
1y"
b00000000000000000011000100000000 z"
0{"
b00000000000000000000000000000000 ~"
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
06#
1w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
0!$
0"$
0#$
0$$
b0000000000000000000000000000000000000000000000000000000000000101 :$
b00000000000000000000000000000000 >$
b00000 A$
b00000000000000000000000001110011 D$
0E$
1b$
0d$
b00000000000000000000000000000000 g$
1t$
1u$
b00000000000000000011000100000000 v$
b00000000000000000000000001110011 w$
1z$
b00000000000000000000000001110011 |$
b000 "%
b1110011 #%
b00000000000000000000000001110011 )%
1*%
b00000000000000000000000001110011 -%
b00000110 .%
b00000110 /%
11%
12%
#55
0S
0e
0t$
0z$
0*%
01%
02%
#60
1S
1e
11"
b11 h"
b00000000000000000000000000000000 j"
b00000000000000000011000100000000 k"
0p"
0y"
b00000000000000000000000000000000 z"
1v#
0w#
b0000000000000000000000000000000000000000000000000000000000000110 :$
b11111 A$
b00000000000000000011000100000000 B$
1t$
0u$
b00000000000000000000000000000000 v$
1z$
1*%
b00000111 .%
b00000111 /%
11%
12%
#65
0S
0e
0t$
0z$
0*%
01%
02%
#70
1S
1e
01"
1f"
b0000000000000000000000000000000000000000000000000000000000000111 :$
0G$
1t$
1x$
1z$
1{$
1$%
1(%
1*%
1,%
b00001000 .%
b00001000 /%
11%
12%
#75
0S
0e
0t$
0z$
0*%
01%
02%
#80
