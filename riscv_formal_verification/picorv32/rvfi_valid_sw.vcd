$date Mon Feb 25 18:46:15 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var reg 32 ! quotient_msk [31:0] $end
$var reg 1 " running $end
$var wire 1 # \:X_3 $end
$var wire 1 $ \:X_4 $end
$var wire 1 % \:X_0 $end
$var wire 1 & \:X_1 $end
$var wire 1 ' resetn $end
$var wire 1 ( pcpi_valid $end
$var wire 32 ) pcpi_insn [31:0] $end
$var wire 32 * pcpi_rs1 [31:0] $end
$var wire 32 + pcpi_rs2 [31:0] $end
$var wire 1 , instr_any_div_rem $end
$var reg 1 - pcpi_wr $end
$var reg 32 . pcpi_rd [31:0] $end
$var reg 1 / pcpi_wait $end
$var reg 1 0 pcpi_ready $end
$var reg 1 1 instr_div $end
$var reg 1 2 instr_divu $end
$var reg 1 3 instr_rem $end
$var reg 1 4 instr_remu $end
$var reg 1 5 pcpi_wait_q $end
$var wire 1 6 start $end
$var wire 1 7 \:X_2 $end
$var wire 1 8 \:X_5 $end
$var wire 1 9 \:X_6 $end
$var wire 1 : \:X_7 $end
$var wire 1 ; \:X_8 $end
$var wire 1 < \:X_9 $end
$var wire 1 = \:X_10 $end
$var wire 1 > \:X_11 $end
$var wire 1 ? \:X_12 $end
$var wire 1 @ \:X_13 $end
$var wire 1 A \:X_14 $end
$var wire 1 B \:X_15 $end
$var wire 1 C \:X_16 $end
$var wire 1 D \:X_17 $end
$var wire 1 E \:X_18 $end
$var wire 1 F \:X_19 $end
$var wire 1 G \:X_20 $end
$var wire 1 H \:X_21 $end
$var wire 1 I \:X_22 $end
$var wire 1 J \:X_23 $end
$var wire 1 K \:X_24 $end
$var wire 1 L \:X_25 $end
$var wire 1 M \:X_26 $end
$var wire 1 N \:X_27 $end
$var wire 1 O \:X_28 $end
$var wire 1 P \:X_29 $end
$var wire 1 Q \:X_30 $end
$var wire 1 R \:X_31 $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var reg 4 T active [3:0] $end
$var wire 1 U pcpi_insn_valid $end
$var wire 1 V \:X_3556 $end
$var wire 1 W resetn $end
$var wire 1 X pcpi_valid $end
$var wire 32 Y pcpi_insn [31:0] $end
$var wire 32 Z pcpi_rs1 [31:0] $end
$var wire 32 [ pcpi_rs2 [31:0] $end
$var wire 1 \ instr_any_mul $end
$var wire 1 ] pcpi_wr $end
$var wire 32 ^ pcpi_rd [31:0] $end
$var wire 1 _ pcpi_wait $end
$var wire 1 ` pcpi_ready $end
$var wire 1 a instr_mul $end
$var wire 1 b instr_mulh $end
$var wire 1 c instr_mulhsu $end
$var wire 1 d instr_mulhu $end
$var wire 1 e clk $end
$upscope $end
$var reg 32 f \cpuregs[0] [31:0] $end
$var reg 32 g \cpuregs[1] [31:0] $end
$var reg 32 h \cpuregs[2] [31:0] $end
$var reg 32 i \cpuregs[3] [31:0] $end
$var reg 32 j \cpuregs[4] [31:0] $end
$var reg 32 k \cpuregs[5] [31:0] $end
$var reg 32 l \cpuregs[6] [31:0] $end
$var reg 32 m \cpuregs[7] [31:0] $end
$var reg 32 n \cpuregs[8] [31:0] $end
$var reg 32 o \cpuregs[9] [31:0] $end
$var reg 32 p \cpuregs[10] [31:0] $end
$var reg 32 q \cpuregs[11] [31:0] $end
$var reg 32 r \cpuregs[12] [31:0] $end
$var reg 32 s \cpuregs[13] [31:0] $end
$var reg 32 t \cpuregs[14] [31:0] $end
$var reg 32 u \cpuregs[15] [31:0] $end
$var reg 32 v \cpuregs[16] [31:0] $end
$var reg 1 w pcpi_timeout $end
$var reg 1 x do_waitirq $end
$var wire 32 y alu_out [31:0] $end
$var reg 32 z alu_out_q [31:0] $end
$var wire 1 { \:X_370 $end
$var wire 1 | \:X_371 $end
$var wire 1 } \:X_372 $end
$var wire 1 ~ \:X_373 $end
$var wire 1 !! \:X_374 $end
$var wire 1 "! \:X_375 $end
$var wire 1 #! \:X_376 $end
$var wire 1 $! \:X_377 $end
$var wire 1 %! \:X_378 $end
$var wire 1 &! \:X_379 $end
$var wire 1 '! \:X_380 $end
$var wire 1 (! \:X_381 $end
$var wire 1 )! \:X_382 $end
$var wire 1 *! \:X_383 $end
$var wire 1 +! \:X_384 $end
$var wire 1 ,! \:X_385 $end
$var wire 1 -! \:X_386 $end
$var wire 1 .! \:X_387 $end
$var wire 1 /! \:X_388 $end
$var wire 1 0! \:X_389 $end
$var wire 1 1! \:X_390 $end
$var wire 1 2! \:X_391 $end
$var wire 1 3! \:X_392 $end
$var wire 1 4! \:X_393 $end
$var wire 1 5! \:X_394 $end
$var wire 1 6! \:X_395 $end
$var wire 1 7! \:X_396 $end
$var wire 1 8! \:X_491 $end
$var wire 1 9! \:X_490 $end
$var wire 1 :! \:X_489 $end
$var wire 1 ;! \:X_488 $end
$var wire 1 <! \:X_487 $end
$var wire 1 =! \:X_486 $end
$var wire 1 >! \:X_485 $end
$var wire 1 ?! \:X_484 $end
$var wire 1 @! \:X_483 $end
$var wire 1 A! \:X_482 $end
$var wire 1 B! \:X_481 $end
$var wire 1 C! \:X_480 $end
$var wire 1 D! \:X_479 $end
$var wire 1 E! \:X_478 $end
$var wire 1 F! \:X_477 $end
$var wire 1 G! \:X_476 $end
$var wire 1 H! \:X_475 $end
$var wire 1 I! \:X_474 $end
$var wire 1 J! \:X_473 $end
$var wire 1 K! \:X_472 $end
$var wire 1 L! \:X_471 $end
$var wire 1 M! \:X_470 $end
$var wire 1 N! \:X_469 $end
$var wire 1 O! \:X_468 $end
$var wire 1 P! \:X_467 $end
$var wire 1 Q! \:X_466 $end
$var wire 1 R! \:X_465 $end
$var wire 1 S! \:X_357 $end
$var wire 1 T! \:X_358 $end
$var wire 1 U! \:X_359 $end
$var wire 1 V! \:X_360 $end
$var wire 1 W! \:X_361 $end
$var wire 1 X! \:X_362 $end
$var wire 1 Y! \:X_363 $end
$var wire 1 Z! \:X_364 $end
$var wire 1 [! \:X_365 $end
$var wire 1 \! \:X_366 $end
$var wire 1 ]! \:X_367 $end
$var wire 1 ^! \:X_368 $end
$var wire 1 _! \:X_369 $end
$var wire 1 `! \:X_51 $end
$var wire 1 a! \:X_52 $end
$var wire 1 b! \:X_53 $end
$var wire 1 c! \:X_54 $end
$var wire 1 d! \:X_55 $end
$var wire 1 e! \:X_56 $end
$var wire 1 f! \:X_57 $end
$var wire 1 g! \:X_58 $end
$var wire 1 h! \:X_59 $end
$var wire 1 i! \:X_60 $end
$var wire 1 j! \:X_61 $end
$var wire 1 k! \:X_62 $end
$var wire 1 l! \:X_63 $end
$var reg 32 m! decoded_imm_uj [31:0] $end
$var reg 1 n! decoder_trigger $end
$var reg 1 o! decoder_trigger_q $end
$var reg 1 p! decoder_pseudo_trigger $end
$var reg 1 q! decoder_pseudo_trigger_q $end
$var reg 1 r! compressed_instr $end
$var reg 32 s! \cpuregs[17] [31:0] $end
$var reg 32 t! \cpuregs[18] [31:0] $end
$var reg 32 u! \cpuregs[19] [31:0] $end
$var reg 32 v! \cpuregs[20] [31:0] $end
$var reg 32 w! \cpuregs[21] [31:0] $end
$var reg 32 x! \cpuregs[22] [31:0] $end
$var reg 32 y! \cpuregs[23] [31:0] $end
$var reg 32 z! \cpuregs[24] [31:0] $end
$var reg 32 {! \cpuregs[25] [31:0] $end
$var reg 32 |! \cpuregs[26] [31:0] $end
$var reg 32 }! \cpuregs[27] [31:0] $end
$var reg 32 ~! \cpuregs[28] [31:0] $end
$var reg 32 !" \cpuregs[29] [31:0] $end
$var reg 32 "" \cpuregs[30] [31:0] $end
$var reg 32 #" \cpuregs[31] [31:0] $end
$var wire 1 $" pcpi_mul_wr $end
$var wire 32 %" pcpi_mul_rd [31:0] $end
$var wire 1 &" pcpi_mul_wait $end
$var wire 1 '" pcpi_mul_ready $end
$var wire 1 (" \:X_492 $end
$var wire 1 )" \:X_464 $end
$var wire 1 *" \:X_463 $end
$var wire 1 +" \:X_462 $end
$var wire 1 ," \:X_461 $end
$var wire 1 -" \:X_397 $end
$var wire 1 ." \:X_398 $end
$var wire 1 /" \:X_399 $end
$var wire 1 0" \:X_400 $end
$var wire 1 1" \:X_401 $end
$var wire 1 2" \:X_402 $end
$var wire 1 3" \:X_403 $end
$var wire 1 4" \:X_404 $end
$var wire 1 5" \:X_405 $end
$var wire 1 6" \:X_406 $end
$var wire 1 7" \:X_407 $end
$var wire 1 8" \:X_408 $end
$var wire 1 9" \:X_409 $end
$var wire 1 :" \:X_410 $end
$var wire 1 ;" \:X_411 $end
$var wire 1 <" \:X_412 $end
$var wire 1 =" \:X_413 $end
$var wire 1 >" \:X_414 $end
$var wire 1 ?" \:X_415 $end
$var wire 1 @" \:X_416 $end
$var wire 1 A" \:X_417 $end
$var wire 1 B" \:X_418 $end
$var wire 1 C" \:X_419 $end
$var wire 1 D" \:X_420 $end
$var wire 1 E" \:X_242 $end
$var wire 1 F" \:X_243 $end
$var wire 1 G" \:X_244 $end
$var wire 1 H" \:X_245 $end
$var wire 1 I" \:X_246 $end
$var wire 1 J" \:X_247 $end
$var wire 1 K" \:X_248 $end
$var wire 1 L" \:X_249 $end
$var wire 1 M" \:X_250 $end
$var wire 1 N" \:X_251 $end
$var wire 1 O" \:X_252 $end
$var wire 1 P" \:X_253 $end
$var wire 1 Q" \:X_254 $end
$var wire 1 R" \:X_255 $end
$var wire 1 S" \:X_256 $end
$var wire 32 T" cpuregs_rs2 [31:0] $end
$var wire 1 U" \:X_32 $end
$var wire 1 V" \:X_33 $end
$var wire 1 W" \:X_34 $end
$var wire 1 X" \:X_35 $end
$var wire 1 Y" \:X_36 $end
$var wire 1 Z" \:X_37 $end
$var wire 1 [" \:X_38 $end
$var wire 1 \" \:X_39 $end
$var wire 1 ]" \:X_40 $end
$var wire 1 ^" \:X_41 $end
$var wire 1 _" \:X_42 $end
$var wire 1 `" \:X_43 $end
$var wire 1 a" \:X_44 $end
$var wire 1 b" \:X_45 $end
$var wire 1 c" \:X_46 $end
$var wire 1 d" \:X_47 $end
$var wire 1 e" \:X_48 $end
$var wire 1 f" \:X_49 $end
$var wire 1 g" \:X_50 $end
$var wire 32 h" alu_shr [31:0] $end
$var wire 1 i" alu_eq $end
$var wire 1 j" alu_ltu $end
$var wire 1 k" alu_lts $end
$var reg 1 l" clear_prefetched_high_word_q $end
$var wire 1 m" cpuregs_write $end
$var wire 32 n" cpuregs_wrdata [31:0] $end
$var wire 32 o" cpuregs_rs1 [31:0] $end
$var wire 1 p" mem_la_use_prefetched_high_word $end
$var wire 1 q" mem_done $end
$var reg 1 r" instr_lui $end
$var reg 1 s" instr_auipc $end
$var reg 1 t" instr_jal $end
$var reg 1 u" instr_jalr $end
$var reg 1 v" instr_beq $end
$var reg 1 w" instr_bne $end
$var reg 1 x" instr_blt $end
$var reg 1 y" instr_bge $end
$var reg 1 z" instr_bltu $end
$var reg 1 {" instr_bgeu $end
$var reg 1 |" instr_lb $end
$var reg 1 }" instr_lh $end
$var wire 1 ~" pcpi_div_wr $end
$var wire 32 !# pcpi_div_rd [31:0] $end
$var wire 1 "# pcpi_div_wait $end
$var wire 1 ## pcpi_div_ready $end
$var wire 1 $# pcpi_int_wr $end
$var wire 32 %# pcpi_int_rd [31:0] $end
$var wire 1 &# pcpi_int_wait $end
$var wire 1 '# pcpi_int_ready $end
$var reg 2 (# mem_state [1:0] $end
$var reg 2 )# mem_wordsize [1:0] $end
$var wire 32 *# mem_rdata_word [31:0] $end
$var reg 32 +# mem_rdata_q [31:0] $end
$var reg 1 ,# mem_do_prefetch $end
$var reg 1 -# mem_do_rinst $end
$var reg 1 .# mem_do_rdata $end
$var reg 1 /# mem_do_wdata $end
$var wire 1 0# mem_xfer $end
$var reg 1 1# mem_la_secondword $end
$var reg 1 2# prefetched_high_word $end
$var wire 1 3# clear_prefetched_high_word $end
$var reg 16 4# mem_16bit_buffer [15:0] $end
$var wire 32 5# mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 6# mem_rdata_latched [31:0] $end
$var reg 32 7# q_insn_opcode [31:0] $end
$var reg 1 8# dbg_next $end
$var wire 1 9# launch_next_insn $end
$var reg 1 :# dbg_valid_insn $end
$var reg 32 ;# cached_insn_opcode [31:0] $end
$var reg 1 <# is_sltiu_bltu_sltu $end
$var reg 1 =# is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 ># is_lbu_lhu_lw $end
$var reg 1 ?# is_alu_reg_imm $end
$var reg 1 @# is_alu_reg_reg $end
$var reg 1 A# is_compare $end
$var wire 1 B# is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var reg 1 C# instr_and $end
$var reg 1 D# instr_rdcycle $end
$var reg 1 E# instr_rdcycleh $end
$var reg 1 F# instr_rdinstr $end
$var reg 1 G# instr_rdinstrh $end
$var reg 1 H# instr_ecall_ebreak $end
$var reg 1 I# instr_getq $end
$var reg 1 J# instr_setq $end
$var reg 1 K# instr_retirq $end
$var reg 1 L# instr_maskirq $end
$var reg 1 M# instr_waitirq $end
$var reg 1 N# instr_timer $end
$var wire 1 O# instr_trap $end
$var reg 5 P# decoded_rd [4:0] $end
$var reg 5 Q# decoded_rs1 [4:0] $end
$var reg 5 R# decoded_rs2 [4:0] $end
$var reg 32 S# decoded_imm [31:0] $end
$var reg 1 T# is_lui_auipc_jal $end
$var reg 1 U# is_lb_lh_lw_lbu_lhu $end
$var reg 1 V# is_slli_srli_srai $end
$var reg 1 W# is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 X# is_sb_sh_sw $end
$var reg 1 Y# is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 Z# is_slti_blt_slt $end
$var wire 1 [# resetn $end
$var reg 1 \# trap $end
$var reg 1 ]# mem_valid $end
$var wire 1 ^# mem_ready $end
$var wire 1 _# \:X_64 $end
$var reg 1 `# instr_lw $end
$var reg 1 a# instr_lbu $end
$var reg 1 b# instr_lhu $end
$var reg 1 c# instr_sb $end
$var reg 1 d# instr_sh $end
$var reg 1 e# instr_sw $end
$var reg 1 f# instr_addi $end
$var reg 1 g# instr_slti $end
$var reg 1 h# instr_sltiu $end
$var reg 1 i# instr_xori $end
$var reg 1 j# instr_ori $end
$var reg 1 k# instr_andi $end
$var reg 1 l# instr_slli $end
$var reg 1 m# instr_srli $end
$var reg 1 n# instr_srai $end
$var reg 1 o# instr_add $end
$var reg 1 p# instr_sub $end
$var reg 1 q# instr_sll $end
$var reg 1 r# instr_slt $end
$var reg 1 s# instr_sltu $end
$var reg 1 t# instr_xor $end
$var reg 1 u# instr_srl $end
$var reg 1 v# instr_sra $end
$var reg 1 w# instr_or $end
$var wire 32 x# mem_rdata [31:0] $end
$var wire 1 y# mem_la_read $end
$var reg 1 z# pcpi_valid $end
$var reg 32 {# pcpi_insn [31:0] $end
$var wire 32 |# pcpi_rs1 [31:0] $end
$var wire 32 }# pcpi_rs2 [31:0] $end
$var reg 1 ~# rvfi_valid $end
$var reg 32 !$ rvfi_insn [31:0] $end
$var reg 64 "$ count_cycle [63:0] $end
$var reg 64 #$ count_instr [63:0] $end
$var wire 1 $$ \:X_129 $end
$var wire 1 %$ \:X_130 $end
$var wire 1 &$ \:X_131 $end
$var wire 1 '$ \:X_132 $end
$var reg 32 ($ reg_pc [31:0] $end
$var reg 32 )$ reg_next_pc [31:0] $end
$var reg 32 *$ reg_op1 [31:0] $end
$var reg 32 +$ reg_op2 [31:0] $end
$var reg 32 ,$ reg_out [31:0] $end
$var reg 5 -$ reg_sh [4:0] $end
$var reg 32 .$ next_insn_opcode [31:0] $end
$var wire 32 /$ dbg_insn_opcode [31:0] $end
$var reg 1 0$ mem_la_firstword_reg $end
$var reg 1 1$ last_mem_valid $end
$var wire 1 2$ mem_la_firstword $end
$var wire 32 3$ next_pc [31:0] $end
$var wire 1 4$ \:X_220 $end
$var wire 1 5$ \:X_221 $end
$var wire 1 6$ \:X_222 $end
$var wire 1 7$ \:X_223 $end
$var wire 1 8$ \:X_224 $end
$var wire 1 9$ \:X_225 $end
$var wire 1 :$ \:X_226 $end
$var wire 1 ;$ \:X_227 $end
$var wire 1 <$ \:X_228 $end
$var wire 1 =$ \:X_229 $end
$var wire 1 >$ \:X_230 $end
$var wire 1 ?$ \:X_231 $end
$var wire 1 @$ \:X_232 $end
$var wire 1 A$ \:X_233 $end
$var wire 1 B$ \:X_234 $end
$var wire 1 C$ \:X_235 $end
$var wire 1 D$ \:X_236 $end
$var wire 1 E$ \:X_237 $end
$var wire 1 F$ \:X_238 $end
$var wire 1 G$ \:X_239 $end
$var wire 1 H$ \:X_240 $end
$var wire 1 I$ \:X_241 $end
$var reg 8 J$ cpu_state [7:0] $end
$var reg 2 K$ irq_state [1:0] $end
$var reg 1 L$ latched_store $end
$var reg 1 M$ latched_stalu $end
$var reg 1 N$ latched_branch $end
$var reg 1 O$ latched_compr $end
$var reg 1 P$ latched_is_lu $end
$var reg 1 Q$ latched_is_lh $end
$var reg 1 R$ latched_is_lb $end
$var reg 5 S$ latched_rd [4:0] $end
$var reg 4 T$ pcpi_timeout_counter [3:0] $end
$var wire 1 U$ alu_out_0 $end
$var wire 32 V$ alu_add_sub [31:0] $end
$var wire 32 W$ alu_shl [31:0] $end
$var wire 1 X$ \:X_133 $end
$var wire 1 Y$ \:X_134 $end
$var wire 1 Z$ \:X_135 $end
$var wire 1 [$ \:X_136 $end
$var wire 1 \$ \:X_137 $end
$var wire 1 ]$ \:X_138 $end
$var wire 1 ^$ \:X_139 $end
$var wire 1 _$ \:X_140 $end
$var wire 1 `$ \:X_141 $end
$var wire 1 a$ \:X_142 $end
$var wire 1 b$ \:X_143 $end
$var wire 1 c$ \:X_144 $end
$var wire 1 d$ \:X_145 $end
$var wire 1 e$ \:X_146 $end
$var wire 1 f$ \:X_147 $end
$var wire 1 g$ \:X_148 $end
$var wire 1 h$ \:X_149 $end
$var wire 1 i$ \:X_150 $end
$var wire 1 j$ \:X_151 $end
$var wire 1 k$ \:X_152 $end
$var wire 1 l$ \:X_153 $end
$var wire 1 m$ \:X_154 $end
$var wire 1 n$ \:X_155 $end
$var wire 1 o$ \:X_156 $end
$var wire 1 p$ \:X_157 $end
$var wire 1 q$ \:X_158 $end
$var wire 1 r$ \:X_159 $end
$var wire 1 s$ \:X_160 $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ reset $end
$var wire 1 v$ rvfi_valid $end
$var wire 32 w$ mem_rdata [31:0] $end
$var wire 32 x$ rvfi_insn [31:0] $end
$var wire 1 y$ mem_ready $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ spec_valid $end
$var wire 32 |$ insn_padding [31:0] $end
$var wire 3 }$ insn_funct3 [2:0] $end
$var wire 7 ~$ insn_opcode [6:0] $end
$var wire 1 !% rvfi_valid $end
$var wire 32 "% rvfi_insn [31:0] $end
$upscope $end
$var wire 1 #% spec_valid $end
$var wire 1 $% valid $end
$var wire 1 %% reset $end
$var wire 1 &% check $end
$var wire 1 '% rvfi_valid $end
$var wire 32 (% rvfi_insn [31:0] $end
$var wire 1 )% clock $end
$upscope $end
$var wire 32 *% rvfi_insn [31:0] $end
$var reg 8 +% cycle_reg [7:0] $end
$var wire 8 ,% cycle [7:0] $end
$var wire 1 -% \:jasper_formal_reset $end
$var wire 1 .% reset $end
$var wire 1 /% rvfi_valid $end
$var wire 1 0% \:jasper_formal_clock $end
$var wire 1 1% clock $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000000000000000 !
0"
0#
0$
0%
0&
1'
0(
b00000010000000000100000000110011 )
b11111111111111111111110000010011 *
b00000000000000000000001111110101 +
0,
0-
b00000000000000000000000000000000 .
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
1S
b0000 T
0U
0V
1W
0X
b00000010000000000100000000110011 Y
b11111111111111111111110000010011 Z
b00000000000000000000001111110101 [
0\
0]
b00000000000000000000000000000000 ^
0_
0`
0a
0b
0c
0d
1e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
0w
0x
b11111111111111111111111111111111 y
b00000000000000000000000000000000 z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
b00100000010000000000001010000000 m!
0n!
0o!
0p!
0q!
0r!
b00000000000000000000000000000000 s!
b00000000000000000000000000000000 t!
b00000000000000000000000000000000 u!
b00000000000000000000000000000000 v!
b00000000000000000000000000000000 w!
b00000000000000000000000000000000 x!
b00000000000000000000000000000000 y!
b00000000000000000000000000000000 z!
b00000000000000000000000000000000 {!
b00000000000000000000000000000000 |!
b00000000000000000000000000000000 }!
b00000000000000000000000000000000 ~!
b00000000000000000000000000000000 !"
b00000000000000000000000000000000 ""
b00000000000000000000000000000000 #"
0$"
b00000000000000000000000000000000 %"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
1I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
b00000000000000000000000000000000 T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
b11111111111111111111111111111111 h"
0i"
0j"
1k"
1l"
0m"
b11111111111111111111111111101111 n"
b00000000000000000000000000000000 o"
0p"
0q"
0r"
0s"
1t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
b00000000000000000000000000000000 !#
0"#
0##
0$#
b00000000000000000000000000000000 %#
0&#
0'#
b00 (#
b11 )#
b00000000000000000000000000000000 *#
b00100000000000000000000000000011 +#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
b0000000000000000 4#
b00100000000000000000000000000011 5#
b00100000000000000000000000000011 6#
b10000000000000011000110000001011 7#
08#
09#
0:#
b00000000000000000000000000000000 ;#
0<#
0=#
0>#
0?#
1@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
b11111 P#
b10010 Q#
b00000 R#
b00000000000000000000001111101111 S#
0T#
0U#
1V#
0W#
1X#
1Y#
0Z#
1[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
1l#
0m#
1n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
b00000000000000000000000000000000 x#
0y#
0z#
b00000010000000000100000000110011 {#
b11111111111111111111110000010011 |#
b00000000000000000000001111110101 }#
0~#
b10000000000000011000110000001011 !$
b0000000000000000000000000000000000000000000000000000000000000000 "$
b0000000000000000000000000000000000000000000000000000000000000000 #$
1$$
1%$
1&$
1'$
b00000000000000000000000000000000 ($
b00000000000000000000000000000000 )$
b11111111111111111111110000010011 *$
b00000000000000000000001111110101 +$
b00000000000000000000000000000000 ,$
b11111 -$
b00000000000000000000000000000000 .$
b10000000000000011000110000001011 /$
00$
01$
02$
b00000000000000000000000000000000 3$
14$
15$
16$
17$
18$
09$
0:$
0;$
0<$
0=$
0>$
0?$
0@$
0A$
0B$
0C$
0D$
0E$
0F$
0G$
0H$
0I$
b01000000 J$
b00 K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
b00011 S$
b1111 T$
0U$
b00000000000000000000000000001000 V$
b10000010011000000000000000000000 W$
1X$
1Y$
1Z$
1[$
1\$
1]$
1^$
1_$
1`$
1a$
1b$
1c$
1d$
1e$
1f$
1g$
1h$
1i$
1j$
1k$
1l$
1m$
1n$
0o$
1p$
1q$
1r$
1s$
1t$
0u$
0v$
b00000000000000000000000000000000 w$
b10000000000000011000110000001011 x$
0y$
1z$
0{$
b00000000000000000000000000000000 |$
b000 }$
b0001011 ~$
0!%
b10000000000000011000110000001011 "%
0#%
0$%
0%%
0&%
0'%
b10000000000000011000110000001011 (%
1)%
b10000000000000011000110000001011 *%
b00000001 +%
b00000001 ,%
0-%
0.%
0/%
10%
11%
#5
0S
0e
0t$
0z$
0)%
00%
01%
#10
1S
1e
b11111111111111111111111111111111 z
0I"
0l"
b11111111111111111111111111111111 n"
b00 )#
b00000000000000000000000000000011 *#
1-#
1T#
b00000000000000000000000000000011 x#
1y#
b0000000000000000000000000000000000000000000000000000000000000001 "$
b00000000000000000000010000000000 ,$
b11111 S$
1o$
1t$
b00000000000000000000000000000011 w$
1z$
1)%
b00000010 +%
b00000010 ,%
10%
11%
#15
0S
0e
0t$
0z$
0)%
00%
01%
#20
1S
1e
b11111111110111111111111111111111 n"
1q"
b01 (#
b00000010000000001010000110100001 *#
10#
b00000010000000001010000110100001 5#
b00000010000000001010000110100001 6#
1]#
1^#
b00000010000000001010000110100001 x#
0y#
b0000000000000000000000000000000000000000000000000000000000000010 "$
b00000000000000000000000000000000 ,$
0^$
1t$
b00000010000000001010000110100001 w$
1y$
1z$
1)%
b00000011 +%
b00000011 ,%
10%
11%
#25
0S
0e
0t$
0z$
0)%
00%
01%
#30
1S
1e
b00000000000000000000010001001000 m!
1n!
1r!
1K"
b11111111111111111111111111111111 n"
0q"
b00 (#
b00000000000000000000000000000000 *#
b00000010000000001010000110100001 +#
0-#
00#
12#
b0000001000000000 4#
19#
0@#
b00000 P#
b00000 Q#
0X#
0]#
b00000000000000000000000000000000 x#
b0000000000000000000000000000000000000000000000000000000000000011 "$
b00000010000000001010000110100001 .$
1^$
1t$
b00000000000000000000000000000000 w$
1z$
1)%
b00000100 +%
b00000100 ,%
10%
11%
#35
0S
0e
0t$
0z$
0)%
00%
01%
#40
b00000010000000001010000110100001 )
1S
b00000010000000001010000110100001 Y
1e
b00000000000000000000000000000000 y
0n!
1o!
0K"
b00000000000000000000011111111111 h"
1m"
b00000000000000000000000000000010 n"
1-#
13#
18#
09#
1:#
b00000000000000000000010001001000 S#
0V#
0Y#
0^#
0l#
0n#
1y#
b00000010000000001010000110100001 {#
b0000000000000000000000000000000000000000000000000000000000000100 "$
b0000000000000000000000000000000000000000000000000000000000000001 #$
0$$
0%$
0&$
0'$
b00000000000000000000010001001000 )$
b00000000000000000000000100000000 ,$
b00000000000000001010000110100001 /$
b00000000000000000000010001001000 3$
1N$
1O$
b00000 S$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
1t$
0y$
1z$
1)%
b00000101 +%
b00000101 ,%
10%
11%
#45
0S
0e
0t$
0z$
0)%
00%
01%
#50
1S
1e
b00000000000000000000000000001000 y
b00000000000000000000000000000000 z
0o!
1l"
0m"
b00000000000000000000000000000000 n"
1q"
b01 (#
b00000000000000001000010001111111 *#
10#
02#
03#
b00000000000000001000010001111111 5#
b00000000000000001000010001111111 6#
b00000000000000001010000110100001 7#
08#
b00000000000000001010000110100001 ;#
1Y#
1]#
1^#
b00000000000000001000010001111111 x#
0y#
b00000000000000001010000110100001 !$
b0000000000000000000000000000000000000000000000000000000000000101 "$
b00000000000000000000010001001000 ($
b00000000000000000000000000000000 ,$
0N$
1t$
b00000000000000001000010001111111 w$
b00000000000000001010000110100001 x$
1y$
1z$
b010 }$
b0100001 ~$
b00000000000000001010000110100001 "%
b00000000000000001010000110100001 (%
1)%
b00000000000000001010000110100001 *%
b00000110 +%
b00000110 ,%
10%
11%
#55
0S
0e
0t$
0z$
0)%
00%
01%
#60
1S
1e
b00000000000000000000000000001000 z
b00000000000000001000000000000000 m!
1n!
0r!
0l"
0q"
0t"
b00 (#
b00000000000000001000010001111111 +#
0-#
00#
19#
1O#
b01000 P#
b00001 Q#
0]#
b0000000000000000000000000000000000000000000000000000000000000110 "$
b00000000000000001000010001111111 .$
1t$
1z$
1)%
b00000111 +%
b00000111 ,%
10%
11%
#65
0S
0e
0t$
0z$
0)%
00%
01%
#70
b00000000000000001000010001111111 )
1S
b00000000000000001000010001111111 Y
1e
b00000000000000000000000000000000 y
0n!
1o!
1,#
18#
09#
b00000000000000000000000000000000 S#
0T#
0Y#
1y#
b00000000000000001000010001111111 {#
1~#
b0000000000000000000000000000000000000000000000000000000000000111 "$
b0000000000000000000000000000000000000000000000000000000000000010 #$
b00000000000000000000010001001100 )$
b00000000000000001000010001111111 /$
b00000000000000000000010001001100 3$
b00100000 J$
0O$
b01000 S$
1t$
1v$
1z$
1!%
1$%
1'%
1)%
b00001000 +%
b00001000 ,%
1/%
10%
11%
#75
0S
0e
0t$
0z$
0)%
00%
01%
#80
