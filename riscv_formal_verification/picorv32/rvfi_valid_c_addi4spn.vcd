$date Tue Feb 26 14:26:08 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! \:X_11 $end
$var wire 1 " \:X_12 $end
$var wire 1 # \:X_13 $end
$var wire 1 $ \:X_14 $end
$var wire 1 % \:X_15 $end
$var wire 1 & \:X_16 $end
$var wire 1 ' \:X_17 $end
$var wire 1 ( \:X_18 $end
$var wire 1 ) \:X_19 $end
$var wire 1 * \:X_20 $end
$var wire 1 + \:X_21 $end
$var wire 1 , \:X_22 $end
$var wire 1 - \:X_23 $end
$var wire 1 . \:X_24 $end
$var wire 1 / \:X_25 $end
$var wire 1 0 \:X_26 $end
$var wire 1 1 \:X_27 $end
$var wire 1 2 \:X_28 $end
$var wire 1 3 \:X_29 $end
$var wire 1 4 \:X_30 $end
$var wire 1 5 \:X_31 $end
$var wire 1 6 \:X_0 $end
$var wire 1 7 \:X_1 $end
$var wire 1 8 \:X_2 $end
$var wire 1 9 \:X_5 $end
$var wire 1 : \:X_6 $end
$var wire 1 ; \:X_7 $end
$var wire 1 < \:X_8 $end
$var wire 1 = \:X_9 $end
$var wire 1 > \:X_10 $end
$var reg 1 ? instr_div $end
$var reg 1 @ instr_divu $end
$var reg 1 A instr_rem $end
$var reg 1 B instr_remu $end
$var reg 1 C pcpi_wait_q $end
$var wire 1 D start $end
$var reg 32 E quotient_msk [31:0] $end
$var reg 1 F running $end
$var wire 1 G \:X_3 $end
$var wire 1 H \:X_4 $end
$var wire 1 I resetn $end
$var wire 1 J pcpi_valid $end
$var wire 32 K pcpi_insn [31:0] $end
$var wire 32 L pcpi_rs1 [31:0] $end
$var wire 32 M pcpi_rs2 [31:0] $end
$var wire 1 N instr_any_div_rem $end
$var reg 1 O pcpi_wr $end
$var reg 32 P pcpi_rd [31:0] $end
$var reg 1 Q pcpi_wait $end
$var reg 1 R pcpi_ready $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T pcpi_insn_valid $end
$var wire 1 U resetn $end
$var wire 1 V pcpi_valid $end
$var wire 32 W pcpi_insn [31:0] $end
$var wire 32 X pcpi_rs1 [31:0] $end
$var wire 32 Y pcpi_rs2 [31:0] $end
$var wire 1 Z instr_any_mul $end
$var wire 1 [ pcpi_wr $end
$var wire 32 \ pcpi_rd [31:0] $end
$var wire 1 ] pcpi_wait $end
$var wire 1 ^ pcpi_ready $end
$var wire 1 _ instr_mul $end
$var wire 1 ` instr_mulh $end
$var wire 1 a instr_mulhsu $end
$var wire 1 b instr_mulhu $end
$var reg 4 c active [3:0] $end
$var wire 1 d \:X_3556 $end
$var wire 1 e clk $end
$upscope $end
$var reg 1 f mem_la_firstword_reg $end
$var reg 1 g last_mem_valid $end
$var wire 1 h mem_la_firstword $end
$var reg 32 i \cpuregs[0] [31:0] $end
$var reg 32 j \cpuregs[1] [31:0] $end
$var reg 32 k \cpuregs[2] [31:0] $end
$var reg 32 l \cpuregs[3] [31:0] $end
$var reg 32 m \cpuregs[4] [31:0] $end
$var reg 32 n \cpuregs[5] [31:0] $end
$var reg 32 o \cpuregs[6] [31:0] $end
$var reg 32 p \cpuregs[7] [31:0] $end
$var wire 1 q \:X_382 $end
$var wire 1 r \:X_383 $end
$var wire 1 s \:X_384 $end
$var wire 1 t \:X_385 $end
$var wire 1 u \:X_386 $end
$var wire 1 v \:X_387 $end
$var wire 1 w \:X_388 $end
$var wire 1 x \:X_389 $end
$var wire 1 y \:X_390 $end
$var wire 1 z \:X_391 $end
$var wire 1 { \:X_392 $end
$var wire 1 | \:X_393 $end
$var wire 1 } \:X_394 $end
$var wire 1 ~ \:X_395 $end
$var wire 1 !! \:X_396 $end
$var wire 1 "! \:X_397 $end
$var wire 1 #! \:X_398 $end
$var wire 1 $! \:X_399 $end
$var wire 1 %! \:X_400 $end
$var wire 1 &! \:X_401 $end
$var wire 1 '! \:X_402 $end
$var reg 1 (! instr_srai $end
$var reg 1 )! instr_add $end
$var reg 1 *! instr_sub $end
$var reg 1 +! instr_sll $end
$var reg 1 ,! instr_slt $end
$var reg 1 -! instr_sltu $end
$var reg 1 .! instr_xor $end
$var reg 1 /! instr_srl $end
$var reg 1 0! instr_sra $end
$var reg 1 1! instr_or $end
$var reg 1 2! instr_and $end
$var reg 1 3! instr_rdcycle $end
$var reg 1 4! instr_rdcycleh $end
$var reg 1 5! instr_rdinstr $end
$var reg 1 6! instr_rdinstrh $end
$var reg 1 7! instr_ecall_ebreak $end
$var reg 1 8! instr_getq $end
$var reg 1 9! instr_setq $end
$var reg 1 :! instr_retirq $end
$var reg 1 ;! instr_maskirq $end
$var wire 1 <! \:X_220 $end
$var wire 1 =! \:X_221 $end
$var wire 1 >! \:X_222 $end
$var wire 1 ?! \:X_223 $end
$var wire 1 @! \:X_224 $end
$var wire 1 A! \:X_225 $end
$var wire 1 B! \:X_226 $end
$var wire 1 C! \:X_227 $end
$var wire 1 D! \:X_228 $end
$var wire 1 E! \:X_229 $end
$var wire 1 F! \:X_230 $end
$var wire 1 G! \:X_231 $end
$var wire 1 H! resetn $end
$var reg 1 I! trap $end
$var reg 1 J! mem_valid $end
$var wire 1 K! mem_ready $end
$var wire 32 L! mem_rdata [31:0] $end
$var wire 1 M! mem_la_read $end
$var reg 5 N! latched_rd [4:0] $end
$var reg 4 O! pcpi_timeout_counter [3:0] $end
$var wire 32 P! alu_shl [31:0] $end
$var wire 32 Q! alu_shr [31:0] $end
$var wire 1 R! alu_eq $end
$var wire 1 S! alu_ltu $end
$var wire 1 T! alu_lts $end
$var reg 1 U! clear_prefetched_high_word_q $end
$var wire 1 V! cpuregs_write $end
$var wire 32 W! cpuregs_wrdata [31:0] $end
$var wire 32 X! cpuregs_rs1 [31:0] $end
$var wire 32 Y! cpuregs_rs2 [31:0] $end
$var wire 1 Z! \:X_32 $end
$var wire 1 [! \:X_357 $end
$var wire 1 \! \:X_358 $end
$var wire 1 ]! \:X_359 $end
$var wire 1 ^! \:X_360 $end
$var reg 1 _! instr_blt $end
$var reg 1 `! instr_bge $end
$var reg 1 a! instr_bltu $end
$var reg 1 b! instr_bgeu $end
$var reg 1 c! instr_lb $end
$var reg 1 d! instr_lh $end
$var reg 1 e! instr_lw $end
$var reg 1 f! instr_lbu $end
$var reg 1 g! instr_lhu $end
$var reg 1 h! instr_sb $end
$var reg 1 i! instr_sh $end
$var reg 1 j! instr_sw $end
$var reg 1 k! instr_addi $end
$var reg 1 l! instr_slti $end
$var reg 1 m! instr_sltiu $end
$var reg 1 n! instr_xori $end
$var reg 1 o! instr_ori $end
$var reg 1 p! instr_andi $end
$var reg 1 q! instr_slli $end
$var reg 1 r! instr_srli $end
$var reg 64 s! count_instr [63:0] $end
$var reg 32 t! reg_pc [31:0] $end
$var reg 32 u! reg_next_pc [31:0] $end
$var reg 32 v! reg_op1 [31:0] $end
$var reg 32 w! reg_op2 [31:0] $end
$var reg 32 x! reg_out [31:0] $end
$var reg 5 y! reg_sh [4:0] $end
$var reg 32 z! next_insn_opcode [31:0] $end
$var wire 32 {! dbg_insn_opcode [31:0] $end
$var wire 32 |! next_pc [31:0] $end
$var reg 32 }! \cpuregs[24] [31:0] $end
$var reg 32 ~! \cpuregs[25] [31:0] $end
$var reg 32 !" \cpuregs[26] [31:0] $end
$var reg 32 "" \cpuregs[27] [31:0] $end
$var reg 32 #" \cpuregs[28] [31:0] $end
$var reg 32 $" \cpuregs[29] [31:0] $end
$var reg 32 %" \cpuregs[30] [31:0] $end
$var reg 32 &" \cpuregs[31] [31:0] $end
$var wire 1 '" pcpi_mul_wr $end
$var wire 32 (" pcpi_mul_rd [31:0] $end
$var wire 1 )" pcpi_mul_wait $end
$var wire 1 *" pcpi_mul_ready $end
$var wire 1 +" pcpi_div_wr $end
$var wire 32 ," pcpi_div_rd [31:0] $end
$var wire 1 -" pcpi_div_wait $end
$var wire 1 ." pcpi_div_ready $end
$var reg 1 /" pcpi_timeout $end
$var wire 1 0" \:X_129 $end
$var wire 1 1" \:X_130 $end
$var wire 1 2" \:X_131 $end
$var wire 1 3" \:X_132 $end
$var wire 1 4" \:X_133 $end
$var wire 1 5" \:X_134 $end
$var wire 1 6" \:X_135 $end
$var wire 1 7" \:X_136 $end
$var wire 1 8" \:X_137 $end
$var wire 1 9" \:X_138 $end
$var wire 1 :" \:X_139 $end
$var wire 1 ;" \:X_140 $end
$var wire 1 <" \:X_141 $end
$var wire 1 =" \:X_142 $end
$var wire 1 >" \:X_143 $end
$var wire 1 ?" \:X_361 $end
$var wire 1 @" \:X_362 $end
$var wire 1 A" \:X_363 $end
$var wire 1 B" \:X_364 $end
$var wire 1 C" \:X_365 $end
$var wire 1 D" \:X_366 $end
$var wire 1 E" \:X_367 $end
$var wire 1 F" \:X_368 $end
$var wire 1 G" \:X_369 $end
$var wire 1 H" \:X_370 $end
$var wire 1 I" \:X_371 $end
$var wire 1 J" \:X_372 $end
$var wire 1 K" \:X_373 $end
$var wire 1 L" \:X_374 $end
$var wire 1 M" \:X_375 $end
$var wire 1 N" \:X_376 $end
$var wire 1 O" \:X_377 $end
$var wire 1 P" \:X_378 $end
$var wire 1 Q" \:X_379 $end
$var wire 1 R" \:X_380 $end
$var wire 1 S" \:X_381 $end
$var wire 1 T" \:X_492 $end
$var wire 1 U" \:X_491 $end
$var wire 1 V" \:X_490 $end
$var wire 1 W" \:X_489 $end
$var wire 1 X" \:X_488 $end
$var wire 1 Y" \:X_487 $end
$var wire 1 Z" \:X_486 $end
$var wire 1 [" \:X_485 $end
$var wire 1 \" \:X_484 $end
$var wire 1 ]" \:X_483 $end
$var wire 1 ^" \:X_482 $end
$var wire 1 _" \:X_481 $end
$var wire 1 `" \:X_480 $end
$var wire 1 a" \:X_64 $end
$var reg 1 b" pcpi_valid $end
$var reg 32 c" pcpi_insn [31:0] $end
$var wire 32 d" pcpi_rs1 [31:0] $end
$var wire 32 e" pcpi_rs2 [31:0] $end
$var reg 1 f" rvfi_valid $end
$var reg 32 g" rvfi_insn [31:0] $end
$var reg 1 h" compressed_instr $end
$var reg 1 i" is_lui_auipc_jal $end
$var reg 1 j" is_lb_lh_lw_lbu_lhu $end
$var reg 1 k" is_slli_srli_srai $end
$var reg 1 l" is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 m" is_sb_sh_sw $end
$var wire 1 n" \:X_52 $end
$var wire 1 o" \:X_53 $end
$var wire 1 p" \:X_54 $end
$var wire 1 q" \:X_55 $end
$var wire 1 r" \:X_56 $end
$var wire 1 s" \:X_57 $end
$var wire 1 t" \:X_58 $end
$var wire 1 u" \:X_59 $end
$var wire 1 v" \:X_60 $end
$var wire 1 w" \:X_61 $end
$var wire 1 x" \:X_62 $end
$var wire 1 y" \:X_63 $end
$var wire 1 z" \:X_479 $end
$var wire 1 {" \:X_478 $end
$var wire 1 |" \:X_477 $end
$var wire 1 }" \:X_476 $end
$var wire 1 ~" \:X_475 $end
$var wire 1 !# \:X_474 $end
$var wire 1 "# \:X_473 $end
$var wire 1 ## \:X_472 $end
$var wire 1 $# \:X_471 $end
$var wire 1 %# \:X_470 $end
$var wire 1 &# \:X_469 $end
$var wire 1 '# \:X_468 $end
$var wire 1 (# \:X_467 $end
$var wire 1 )# \:X_466 $end
$var wire 1 *# \:X_465 $end
$var wire 1 +# \:X_464 $end
$var wire 1 ,# \:X_463 $end
$var wire 1 -# \:X_462 $end
$var wire 1 .# \:X_461 $end
$var wire 1 /# \:X_33 $end
$var wire 1 0# \:X_34 $end
$var wire 1 1# \:X_35 $end
$var wire 1 2# \:X_36 $end
$var wire 1 3# \:X_37 $end
$var wire 1 4# \:X_38 $end
$var wire 1 5# \:X_39 $end
$var wire 1 6# \:X_40 $end
$var wire 1 7# \:X_41 $end
$var wire 1 8# \:X_42 $end
$var wire 1 9# \:X_43 $end
$var wire 1 :# \:X_44 $end
$var wire 1 ;# \:X_45 $end
$var wire 1 <# \:X_46 $end
$var wire 1 =# \:X_47 $end
$var wire 1 ># \:X_48 $end
$var wire 1 ?# \:X_49 $end
$var wire 1 @# \:X_50 $end
$var wire 1 A# \:X_51 $end
$var reg 32 B# decoded_imm_uj [31:0] $end
$var reg 1 C# decoder_trigger $end
$var reg 1 D# decoder_trigger_q $end
$var reg 1 E# decoder_pseudo_trigger $end
$var reg 1 F# decoder_pseudo_trigger_q $end
$var reg 32 G# \cpuregs[8] [31:0] $end
$var reg 32 H# \cpuregs[9] [31:0] $end
$var reg 32 I# \cpuregs[10] [31:0] $end
$var reg 32 J# \cpuregs[11] [31:0] $end
$var reg 32 K# \cpuregs[12] [31:0] $end
$var reg 32 L# \cpuregs[13] [31:0] $end
$var reg 32 M# \cpuregs[14] [31:0] $end
$var reg 32 N# \cpuregs[15] [31:0] $end
$var reg 32 O# \cpuregs[16] [31:0] $end
$var reg 32 P# \cpuregs[17] [31:0] $end
$var reg 32 Q# \cpuregs[18] [31:0] $end
$var reg 32 R# \cpuregs[19] [31:0] $end
$var reg 32 S# \cpuregs[20] [31:0] $end
$var reg 32 T# \cpuregs[21] [31:0] $end
$var reg 32 U# \cpuregs[22] [31:0] $end
$var reg 32 V# \cpuregs[23] [31:0] $end
$var wire 1 W# \:X_232 $end
$var wire 1 X# \:X_233 $end
$var wire 1 Y# \:X_234 $end
$var wire 1 Z# \:X_235 $end
$var wire 1 [# \:X_236 $end
$var wire 1 \# \:X_237 $end
$var wire 1 ]# \:X_238 $end
$var wire 1 ^# \:X_239 $end
$var wire 1 _# \:X_240 $end
$var wire 1 `# \:X_241 $end
$var wire 1 a# \:X_242 $end
$var wire 1 b# \:X_243 $end
$var wire 1 c# \:X_244 $end
$var wire 1 d# \:X_245 $end
$var wire 1 e# \:X_246 $end
$var wire 1 f# \:X_247 $end
$var wire 1 g# \:X_248 $end
$var wire 1 h# \:X_249 $end
$var wire 1 i# \:X_250 $end
$var wire 1 j# \:X_251 $end
$var wire 1 k# \:X_252 $end
$var wire 1 l# \:X_144 $end
$var wire 1 m# \:X_145 $end
$var wire 1 n# \:X_146 $end
$var wire 1 o# \:X_147 $end
$var wire 1 p# \:X_148 $end
$var wire 1 q# \:X_149 $end
$var wire 1 r# \:X_150 $end
$var wire 1 s# \:X_151 $end
$var wire 1 t# \:X_152 $end
$var wire 1 u# \:X_153 $end
$var wire 1 v# \:X_154 $end
$var wire 1 w# \:X_155 $end
$var wire 1 x# \:X_156 $end
$var wire 1 y# \:X_157 $end
$var wire 1 z# \:X_158 $end
$var wire 1 {# \:X_159 $end
$var wire 1 |# \:X_160 $end
$var reg 64 }# count_cycle [63:0] $end
$var reg 1 ~# do_waitirq $end
$var wire 32 !$ alu_out [31:0] $end
$var reg 32 "$ alu_out_q [31:0] $end
$var wire 1 #$ alu_out_0 $end
$var wire 32 $$ alu_add_sub [31:0] $end
$var wire 32 %$ mem_rdata_latched [31:0] $end
$var wire 1 &$ mem_la_use_prefetched_high_word $end
$var wire 1 '$ mem_done $end
$var reg 1 ($ instr_lui $end
$var reg 1 )$ instr_auipc $end
$var reg 1 *$ instr_jal $end
$var reg 1 +$ instr_jalr $end
$var reg 1 ,$ instr_beq $end
$var reg 1 -$ instr_bne $end
$var wire 1 .$ \:X_403 $end
$var wire 1 /$ \:X_404 $end
$var wire 1 0$ \:X_405 $end
$var wire 1 1$ \:X_406 $end
$var wire 1 2$ \:X_407 $end
$var wire 1 3$ \:X_408 $end
$var wire 1 4$ \:X_409 $end
$var wire 1 5$ \:X_410 $end
$var wire 1 6$ \:X_411 $end
$var wire 1 7$ \:X_412 $end
$var wire 1 8$ \:X_413 $end
$var wire 1 9$ \:X_414 $end
$var wire 1 :$ \:X_415 $end
$var wire 1 ;$ \:X_416 $end
$var wire 1 <$ \:X_417 $end
$var wire 1 =$ \:X_418 $end
$var wire 1 >$ \:X_419 $end
$var wire 1 ?$ \:X_420 $end
$var wire 1 @$ pcpi_int_wr $end
$var wire 32 A$ pcpi_int_rd [31:0] $end
$var wire 1 B$ pcpi_int_wait $end
$var wire 1 C$ pcpi_int_ready $end
$var reg 2 D$ mem_state [1:0] $end
$var reg 2 E$ mem_wordsize [1:0] $end
$var wire 32 F$ mem_rdata_word [31:0] $end
$var reg 32 G$ mem_rdata_q [31:0] $end
$var reg 1 H$ mem_do_prefetch $end
$var reg 1 I$ mem_do_rinst $end
$var reg 1 J$ mem_do_rdata $end
$var reg 1 K$ mem_do_wdata $end
$var wire 1 L$ mem_xfer $end
$var reg 1 M$ mem_la_secondword $end
$var reg 1 N$ prefetched_high_word $end
$var wire 1 O$ clear_prefetched_high_word $end
$var reg 16 P$ mem_16bit_buffer [15:0] $end
$var wire 32 Q$ mem_rdata_latched_noshuffle [31:0] $end
$var reg 32 R$ q_insn_opcode [31:0] $end
$var reg 1 S$ dbg_next $end
$var wire 1 T$ launch_next_insn $end
$var reg 1 U$ dbg_valid_insn $end
$var reg 32 V$ cached_insn_opcode [31:0] $end
$var reg 8 W$ cpu_state [7:0] $end
$var reg 2 X$ irq_state [1:0] $end
$var reg 1 Y$ latched_store $end
$var reg 1 Z$ latched_stalu $end
$var reg 1 [$ latched_branch $end
$var reg 1 \$ latched_compr $end
$var reg 1 ]$ latched_is_lu $end
$var reg 1 ^$ latched_is_lh $end
$var reg 1 _$ latched_is_lb $end
$var wire 1 `$ \:X_253 $end
$var wire 1 a$ \:X_254 $end
$var wire 1 b$ \:X_255 $end
$var wire 1 c$ \:X_256 $end
$var reg 1 d$ instr_waitirq $end
$var reg 1 e$ instr_timer $end
$var wire 1 f$ instr_trap $end
$var reg 5 g$ decoded_rd [4:0] $end
$var reg 5 h$ decoded_rs1 [4:0] $end
$var reg 5 i$ decoded_rs2 [4:0] $end
$var reg 32 j$ decoded_imm [31:0] $end
$var reg 1 k$ is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 l$ is_slti_blt_slt $end
$var reg 1 m$ is_sltiu_bltu_sltu $end
$var reg 1 n$ is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 o$ is_lbu_lhu_lw $end
$var reg 1 p$ is_alu_reg_imm $end
$var reg 1 q$ is_alu_reg_reg $end
$var reg 1 r$ is_compare $end
$var wire 1 s$ is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ reset $end
$var wire 1 v$ rvfi_valid $end
$var wire 32 w$ rvfi_insn [31:0] $end
$var wire 1 x$ mem_ready $end
$var wire 32 y$ mem_rdata [31:0] $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ rvfi_valid $end
$var wire 32 |$ rvfi_insn [31:0] $end
$var wire 1 }$ spec_valid $end
$var wire 32 ~$ insn_padding [31:0] $end
$var wire 32 !% insn_imm [31:0] $end
$var wire 3 "% insn_funct3 [2:0] $end
$var wire 2 #% insn_opcode [1:0] $end
$upscope $end
$var wire 1 $% reset $end
$var wire 1 %% valid $end
$var wire 1 &% check $end
$var wire 1 '% rvfi_valid $end
$var wire 32 (% rvfi_insn [31:0] $end
$var wire 1 )% spec_valid $end
$var wire 1 *% clock $end
$upscope $end
$var reg 8 +% cycle_reg [7:0] $end
$var wire 8 ,% cycle [7:0] $end
$var wire 1 -% \:jasper_formal_reset $end
$var wire 32 .% rvfi_insn [31:0] $end
$var wire 1 /% reset $end
$var wire 1 0% rvfi_valid $end
$var wire 1 1% clock $end
$var wire 1 2% \:jasper_formal_clock $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
b00000000000000000000000000000000 E
0F
0G
0H
1I
0J
b00000010000000000100000000110011 K
b11111111111111111111111111111110 L
b00000000000000000000000000000011 M
0N
0O
b00000000000000000000000000000000 P
0Q
0R
1S
0T
1U
0V
b00000010000000000100000000110011 W
b11111111111111111111111111111110 X
b00000000000000000000000000000011 Y
0Z
0[
b00000000000000000000000000000000 \
0]
0^
0_
0`
0a
0b
b0000 c
0d
1e
0f
0g
0h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
1<!
1=!
1>!
1?!
1@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
1H!
0I!
0J!
0K!
b00000000000000000000000000000011 L!
0M!
b00111 N!
b1111 O!
b11111111111111111111111111110000 P!
b00011111111111111111111111111111 Q!
0R!
0S!
1T!
1U!
0V!
b11111111111101111111111111111111 W!
b00000000000000000000000000000000 X!
b00010000000000000000000000000000 Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
1q!
0r!
b0000000000000000000000000000000000000000000000000000000000000000 s!
b00000000000000000000000000000000 t!
b00000000000000000000000000000000 u!
b11111111111111111111111111111110 v!
b00000000000000000000000000000011 w!
b00000000000000000000000000000000 x!
b11111 y!
b00011111111111110000000000000011 z!
b00000100000000000000000000001011 {!
b00000000000000000000000000000000 |!
b00000000000000000000000000000000 }!
b00000000000000000000000000000000 ~!
b00000000000000000000000000000000 !"
b00000000000000000000000000000000 ""
b00000000000000000000000000000000 #"
b00000000000000000000000000000000 $"
b00000000000000000000000000000000 %"
b00000000000000000000000000000000 &"
0'"
b00000000000000000000000000000000 ("
0)"
0*"
0+"
b00000000000000000000000000000000 ,"
0-"
0."
0/"
10"
11"
12"
13"
14"
15"
16"
17"
18"
19"
1:"
1;"
0<"
1="
1>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
b00000010000000000100000000110011 c"
b11111111111111111111111111111110 d"
b00000000000000000000000000000011 e"
0f"
b00000100000000000000000000001011 g"
1h"
0i"
1j"
1k"
1l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
b00000000000000000000000000000000 B#
0C#
0D#
0E#
0F#
b00000000000000000000000000000000 G#
b00000000000000000000000000000000 H#
b00000000000000000000000000000000 I#
b00000000000000000000000000000000 J#
b00000000000000000000000000000000 K#
b00000000000000000000000000000000 L#
b00000000000000000000000000000000 M#
b00000000000000000000000000000000 N#
b00000000000000000000000000000000 O#
b00000000000000000000000000000000 P#
b00000000000000000000000000000000 Q#
b00000000000000000000000000000000 R#
b00000000000000000000000000000000 S#
b00010000000000000000000000000000 T#
b00000000000000000000000000000000 U#
b00000000000000000000000000000000 V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
1l#
1m#
1n#
1o#
1p#
1q#
1r#
1s#
1t#
1u#
1v#
1w#
1x#
1y#
1z#
1{#
1|#
b0000000000000000000000000000000000000000000000000000000000000000 }#
0~#
b11111111111111111111111111110000 !$
b00000000000000000000000000000000 "$
0#$
b00000000000000000000000000000001 $$
b01000000000000001001110001100000 %$
0&$
0'$
0($
0)$
1*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
08$
09$
0:$
1;$
0<$
1=$
0>$
0?$
0@$
b00000000000000000000000000000000 A$
0B$
0C$
b00 D$
b00 E$
b00000000000000000000000000000011 F$
b01000000000000001001110001100000 G$
0H$
0I$
0J$
0K$
0L$
0M$
0N$
0O$
b0000000000000000 P$
b01000000000000001001110001100000 Q$
b00000100000000000000000000001011 R$
0S$
0T$
0U$
b00000000000000000000000000000000 V$
b01000000 W$
b00 X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
b11111 g$
b11111 h$
b10101 i$
b00000000000000000000000000000011 j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
1t$
0u$
0v$
b00000100000000000000000000001011 w$
0x$
b00000000000000000000000000000011 y$
1z$
0{$
b00000100000000000000000000001011 |$
0}$
b00000000000000000000010000000000 ~$
b00000000000000000000000000000000 !%
b000 "%
b11 #%
0$%
0%%
0&%
0'%
b00000100000000000000000000001011 (%
0)%
1*%
b00000001 +%
b00000001 ,%
0-%
b00000100000000000000000000001011 .%
0/%
00%
11%
12%
#5
0S
0e
0t$
0z$
0*%
01%
02%
#10
1S
1e
1M!
b11111 N!
0U!
b11111111111111111111111111111111 W!
1<"
1i"
b0000000000000000000000000000000000000000000000000000000000000001 }#
b11111111111111111111111111110001 !$
b11111111111111111111111111110000 "$
1?$
1I$
1\$
1k$
1t$
1z$
1*%
b00000010 +%
b00000010 ,%
11%
12%
#15
0S
0e
0t$
0z$
0*%
01%
02%
#20
1S
1e
1J!
1K!
b00000010010000111010000000001001 L!
0M!
b0000000000000000000000000000000000000000000000000000000000000010 }#
b11111111111111111111111111110001 "$
b00000010010000111010000000001001 %$
1'$
b01 D$
b00000010010000111010000000001001 F$
1L$
b00000010010000111010000000001001 Q$
1t$
1x$
b00000010010000111010000000001001 y$
1z$
1*%
b00000011 +%
b00000011 ,%
11%
12%
#25
0S
0e
0t$
0z$
0*%
01%
02%
#30
1S
1e
0J!
b00000000000000000000000000000000 L!
b00000000000000000000000000000000 Y!
b00000010010000111010000000001001 z!
0j"
b00000000000000000000000000000010 B#
1C#
b0000000000000000000000000000000000000000000000000000000000000011 }#
0'$
0;$
0=$
0?$
b00 D$
b00000000000000000000000000000000 F$
b00000010010000111010000000001001 G$
0I$
0L$
1N$
b0000001001000011 P$
1T$
b00000 g$
b00000 h$
b00000 i$
1t$
b00000000000000000000000000000000 y$
1z$
1*%
b00000100 +%
b00000100 ,%
11%
12%
#35
0S
0e
0t$
0z$
0*%
01%
02%
#40
b00000010010000111010000000001001 K
1S
b00000010010000111010000000001001 W
1e
1h
0K!
1M!
b00000 N!
1V!
b00000000000000000000000000000010 W!
0q!
b0000000000000000000000000000000000000000000000000000000000000001 s!
b00000000000000000000000000000010 u!
b00000000000000001010000000001001 {!
b00000000000000000000000000000010 |!
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
b00000010010000111010000000001001 c"
0k"
0l"
0C#
1D#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
b0000000000000000000000000000000000000000000000000000000000000100 }#
b00000000000000000000000000000000 !$
b00000000000000000000001001000011 %$
1I$
1O$
1S$
0T$
1U$
1[$
b00000000000000000000000000000010 j$
0k$
1t$
0x$
1z$
1*%
b00000101 +%
b00000101 ,%
11%
12%
#45
0S
0e
0t$
0z$
0*%
01%
02%
#50
1S
1e
1f
1J!
1K!
b00110001000000000000000000000011 L!
0M!
1U!
0V!
b00000000000000000000000000000000 W!
b00000000000000000000000000000010 t!
b00000000000000001010000000001001 g"
0D#
b0000000000000000000000000000000000000000000000000000000000000101 }#
b00000000000000000000000000000001 !$
b00000000000000000000000000000000 "$
b00000000000000000011000100000000 %$
1'$
b01 D$
b00110001000000000000000000000011 F$
1L$
0N$
0O$
b00110001000000000000000000000011 Q$
b00000000000000001010000000001001 R$
0S$
b00000000000000001010000000001001 V$
0[$
1k$
1t$
b00000000000000001010000000001001 w$
1x$
b00110001000000000000000000000011 y$
1z$
b00000000000000001010000000001001 |$
b00000000000000000000000000000000 ~$
b101 "%
b01 #%
b00000000000000001010000000001001 (%
1*%
b00000110 +%
b00000110 ,%
b00000000000000001010000000001001 .%
11%
12%
#55
0S
0e
0t$
0z$
0*%
01%
02%
#60
1S
1e
0h
0J!
b00000000000000000000000000000000 L!
0U!
b00000000000000000011000100000000 z!
b11111111111111111111110000000000 B#
1C#
b0000000000000000000000000000000000000000000000000000000000000110 }#
b00000000000000000000000000000001 "$
0'$
0*$
b00 D$
b00000000000000000000000000000000 F$
b00000000000000000011000100000000 G$
0I$
0L$
b00000000000000000011000100000000 Q$
1T$
1f$
1t$
b00000000000000000000000000000000 y$
1z$
1*%
b00000111 +%
b00000111 ,%
11%
12%
#65
0S
0e
0t$
0z$
0*%
01%
02%
#70
b00000000000000000011000100000000 K
1S
b00000000000000000011000100000000 W
1e
0f
1M!
b0000000000000000000000000000000000000000000000000000000000000010 s!
b00000000000000000000000000000100 u!
b00000000000000000011000100000000 {!
b00000000000000000000000000000100 |!
b00000000000000000011000100000000 c"
1f"
0i"
0C#
1D#
b0000000000000000000000000000000000000000000000000000000000000111 }#
b00000000000000000000000000000000 !$
1H$
1S$
0T$
b00100000 W$
b00000000000000000000000000000000 j$
0k$
1t$
1v$
1z$
1{$
1%%
1'%
1*%
b00001000 +%
b00001000 ,%
10%
11%
12%
#75
0S
0e
0t$
0z$
0*%
01%
02%
#80
