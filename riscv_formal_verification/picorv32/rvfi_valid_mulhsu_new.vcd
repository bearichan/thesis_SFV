$date Tue Feb 26 11:38:53 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! \:X_23 $end
$var wire 1 " \:X_24 $end
$var wire 1 # \:X_25 $end
$var wire 1 $ \:X_26 $end
$var wire 1 % \:X_27 $end
$var wire 1 & \:X_28 $end
$var wire 1 ' \:X_29 $end
$var wire 1 ( \:X_30 $end
$var wire 1 ) \:X_31 $end
$var wire 1 * \:X_0 $end
$var wire 1 + \:X_1 $end
$var wire 1 , \:X_2 $end
$var wire 1 - \:X_5 $end
$var wire 1 . \:X_6 $end
$var wire 1 / \:X_7 $end
$var wire 1 0 \:X_8 $end
$var wire 1 1 \:X_9 $end
$var wire 1 2 \:X_10 $end
$var wire 1 3 \:X_11 $end
$var wire 1 4 \:X_12 $end
$var wire 1 5 \:X_13 $end
$var wire 1 6 \:X_14 $end
$var wire 1 7 \:X_15 $end
$var wire 1 8 \:X_16 $end
$var wire 1 9 \:X_17 $end
$var wire 1 : \:X_18 $end
$var wire 1 ; \:X_19 $end
$var wire 1 < \:X_20 $end
$var wire 1 = \:X_21 $end
$var wire 1 > \:X_22 $end
$var wire 1 ? resetn $end
$var wire 1 @ pcpi_valid $end
$var wire 32 A pcpi_insn [31:0] $end
$var wire 32 B pcpi_rs1 [31:0] $end
$var wire 32 C pcpi_rs2 [31:0] $end
$var wire 1 D instr_any_div_rem $end
$var reg 1 E pcpi_wr $end
$var reg 32 F pcpi_rd [31:0] $end
$var reg 1 G pcpi_wait $end
$var reg 1 H pcpi_ready $end
$var reg 1 I instr_div $end
$var reg 1 J instr_divu $end
$var reg 1 K instr_rem $end
$var reg 1 L instr_remu $end
$var reg 1 M pcpi_wait_q $end
$var wire 1 N start $end
$var reg 32 O quotient_msk [31:0] $end
$var reg 1 P running $end
$var wire 1 Q \:X_3 $end
$var wire 1 R \:X_4 $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T \:X_3556 $end
$var wire 1 U resetn $end
$var wire 1 V pcpi_valid $end
$var wire 32 W pcpi_insn [31:0] $end
$var wire 32 X pcpi_rs1 [31:0] $end
$var wire 32 Y pcpi_rs2 [31:0] $end
$var wire 1 Z instr_any_mul $end
$var wire 1 [ pcpi_wr $end
$var wire 32 \ pcpi_rd [31:0] $end
$var wire 1 ] pcpi_wait $end
$var wire 1 ^ pcpi_ready $end
$var wire 1 _ instr_mul $end
$var wire 1 ` instr_mulh $end
$var wire 1 a instr_mulhsu $end
$var wire 1 b instr_mulhu $end
$var reg 4 c active [3:0] $end
$var wire 1 d pcpi_insn_valid $end
$var wire 1 e clk $end
$upscope $end
$var reg 32 f q_insn_opcode [31:0] $end
$var reg 1 g dbg_next $end
$var wire 1 h launch_next_insn $end
$var reg 1 i dbg_valid_insn $end
$var reg 32 j cached_insn_opcode [31:0] $end
$var reg 8 k cpu_state [7:0] $end
$var reg 2 l irq_state [1:0] $end
$var wire 1 m resetn $end
$var reg 1 n trap $end
$var reg 1 o mem_valid $end
$var wire 1 p mem_ready $end
$var wire 32 q mem_rdata [31:0] $end
$var wire 1 r mem_la_read $end
$var reg 1 s mem_la_firstword_reg $end
$var reg 1 t last_mem_valid $end
$var wire 1 u mem_la_firstword $end
$var reg 1 v prefetched_high_word $end
$var wire 32 w next_pc [31:0] $end
$var reg 32 x \cpuregs[0] [31:0] $end
$var reg 32 y \cpuregs[1] [31:0] $end
$var reg 32 z \cpuregs[2] [31:0] $end
$var reg 1 { pcpi_valid $end
$var reg 32 | pcpi_insn [31:0] $end
$var wire 32 } pcpi_rs1 [31:0] $end
$var wire 32 ~ pcpi_rs2 [31:0] $end
$var reg 1 !! rvfi_valid $end
$var reg 32 "! rvfi_insn [31:0] $end
$var reg 1 #! decoder_trigger_q $end
$var reg 1 $! decoder_pseudo_trigger $end
$var reg 1 %! decoder_pseudo_trigger_q $end
$var reg 1 &! compressed_instr $end
$var reg 1 '! is_lui_auipc_jal $end
$var reg 1 (! is_slti_blt_slt $end
$var reg 1 )! is_sltiu_bltu_sltu $end
$var reg 1 *! is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 +! is_lbu_lhu_lw $end
$var reg 1 ,! is_alu_reg_imm $end
$var reg 1 -! is_alu_reg_reg $end
$var reg 1 .! is_compare $end
$var wire 1 /! is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var wire 32 0! pcpi_mul_rd [31:0] $end
$var wire 1 1! pcpi_mul_wait $end
$var wire 1 2! pcpi_mul_ready $end
$var wire 1 3! pcpi_div_wr $end
$var wire 32 4! pcpi_div_rd [31:0] $end
$var wire 1 5! pcpi_div_wait $end
$var wire 1 6! pcpi_div_ready $end
$var wire 1 7! pcpi_int_wr $end
$var wire 32 8! pcpi_int_rd [31:0] $end
$var wire 1 9! pcpi_int_wait $end
$var wire 1 :! pcpi_int_ready $end
$var reg 2 ;! mem_state [1:0] $end
$var reg 2 <! mem_wordsize [1:0] $end
$var wire 32 =! mem_rdata_word [31:0] $end
$var reg 32 >! mem_rdata_q [31:0] $end
$var reg 1 ?! mem_do_prefetch $end
$var reg 1 @! mem_do_rinst $end
$var reg 1 A! mem_do_rdata $end
$var wire 1 B! \:X_220 $end
$var wire 1 C! \:X_221 $end
$var wire 1 D! \:X_222 $end
$var wire 1 E! \:X_223 $end
$var wire 1 F! \:X_224 $end
$var wire 1 G! \:X_225 $end
$var wire 1 H! \:X_226 $end
$var wire 1 I! \:X_227 $end
$var wire 1 J! \:X_228 $end
$var wire 1 K! \:X_229 $end
$var wire 1 L! \:X_230 $end
$var wire 1 M! \:X_231 $end
$var wire 1 N! \:X_232 $end
$var wire 1 O! \:X_233 $end
$var wire 1 P! \:X_234 $end
$var wire 1 Q! \:X_235 $end
$var wire 1 R! \:X_59 $end
$var wire 1 S! \:X_60 $end
$var wire 1 T! \:X_61 $end
$var wire 1 U! \:X_62 $end
$var wire 1 V! \:X_63 $end
$var wire 1 W! \:X_64 $end
$var reg 1 X! latched_store $end
$var reg 1 Y! latched_stalu $end
$var reg 1 Z! latched_branch $end
$var reg 1 [! latched_compr $end
$var reg 1 \! latched_is_lu $end
$var reg 1 ]! latched_is_lh $end
$var reg 1 ^! latched_is_lb $end
$var reg 5 _! latched_rd [4:0] $end
$var reg 4 `! pcpi_timeout_counter [3:0] $end
$var reg 1 a! do_waitirq $end
$var wire 32 b! alu_out [31:0] $end
$var reg 32 c! alu_out_q [31:0] $end
$var reg 1 d! instr_sw $end
$var reg 1 e! instr_addi $end
$var reg 1 f! instr_slti $end
$var reg 1 g! instr_sltiu $end
$var reg 1 h! instr_xori $end
$var reg 1 i! instr_ori $end
$var reg 1 j! instr_andi $end
$var reg 1 k! instr_slli $end
$var reg 1 l! instr_srli $end
$var reg 1 m! instr_srai $end
$var reg 1 n! instr_add $end
$var reg 1 o! instr_sub $end
$var reg 1 p! instr_sll $end
$var reg 1 q! instr_slt $end
$var reg 1 r! instr_sltu $end
$var reg 1 s! instr_xor $end
$var reg 1 t! instr_srl $end
$var reg 1 u! instr_sra $end
$var reg 1 v! instr_or $end
$var wire 1 w! \:X_471 $end
$var wire 1 x! \:X_470 $end
$var wire 1 y! \:X_469 $end
$var wire 1 z! \:X_468 $end
$var wire 1 {! \:X_467 $end
$var wire 1 |! \:X_466 $end
$var wire 1 }! \:X_465 $end
$var wire 1 ~! \:X_464 $end
$var wire 1 !" \:X_463 $end
$var wire 1 "" \:X_462 $end
$var wire 1 #" \:X_461 $end
$var wire 1 $" mem_done $end
$var reg 1 %" instr_lui $end
$var reg 1 &" instr_auipc $end
$var reg 1 '" instr_jal $end
$var reg 1 (" instr_jalr $end
$var reg 1 )" instr_beq $end
$var reg 1 *" instr_bne $end
$var reg 1 +" instr_blt $end
$var reg 1 ," instr_bge $end
$var reg 1 -" instr_bltu $end
$var reg 1 ." instr_bgeu $end
$var reg 1 /" instr_lb $end
$var reg 1 0" instr_lh $end
$var reg 1 1" instr_lw $end
$var reg 1 2" instr_lbu $end
$var reg 1 3" instr_lhu $end
$var reg 1 4" instr_sb $end
$var reg 1 5" instr_sh $end
$var wire 1 6" \:X_236 $end
$var wire 1 7" \:X_237 $end
$var wire 1 8" \:X_238 $end
$var wire 1 9" \:X_239 $end
$var wire 1 :" \:X_240 $end
$var wire 1 ;" \:X_241 $end
$var wire 1 <" \:X_242 $end
$var wire 1 =" \:X_243 $end
$var wire 1 >" \:X_244 $end
$var wire 1 ?" \:X_245 $end
$var wire 1 @" \:X_246 $end
$var wire 1 A" \:X_247 $end
$var wire 1 B" \:X_248 $end
$var wire 1 C" \:X_249 $end
$var wire 1 D" \:X_250 $end
$var wire 1 E" \:X_251 $end
$var wire 1 F" \:X_252 $end
$var wire 1 G" \:X_253 $end
$var wire 1 H" \:X_254 $end
$var wire 1 I" \:X_255 $end
$var wire 1 J" \:X_256 $end
$var wire 1 K" \:X_40 $end
$var wire 1 L" \:X_41 $end
$var wire 1 M" \:X_42 $end
$var wire 1 N" \:X_43 $end
$var wire 1 O" \:X_44 $end
$var wire 1 P" \:X_45 $end
$var wire 1 Q" \:X_46 $end
$var wire 1 R" \:X_47 $end
$var wire 1 S" \:X_48 $end
$var wire 1 T" \:X_49 $end
$var wire 1 U" \:X_50 $end
$var wire 1 V" \:X_51 $end
$var wire 1 W" \:X_52 $end
$var wire 1 X" \:X_53 $end
$var wire 1 Y" \:X_54 $end
$var wire 1 Z" \:X_55 $end
$var wire 1 [" \:X_56 $end
$var wire 1 \" \:X_57 $end
$var wire 1 ]" \:X_58 $end
$var wire 1 ^" \:X_365 $end
$var wire 1 _" \:X_366 $end
$var wire 1 `" \:X_367 $end
$var wire 1 a" \:X_368 $end
$var wire 1 b" \:X_369 $end
$var wire 1 c" \:X_370 $end
$var wire 1 d" \:X_371 $end
$var wire 1 e" \:X_372 $end
$var wire 1 f" \:X_373 $end
$var wire 1 g" \:X_374 $end
$var wire 1 h" \:X_375 $end
$var wire 1 i" \:X_376 $end
$var wire 1 j" \:X_377 $end
$var wire 1 k" \:X_378 $end
$var wire 1 l" \:X_379 $end
$var wire 1 m" \:X_380 $end
$var wire 1 n" \:X_381 $end
$var wire 1 o" \:X_382 $end
$var wire 1 p" \:X_383 $end
$var wire 1 q" \:X_384 $end
$var wire 1 r" \:X_385 $end
$var wire 1 s" \:X_492 $end
$var wire 1 t" \:X_491 $end
$var wire 1 u" \:X_490 $end
$var wire 1 v" \:X_489 $end
$var wire 1 w" \:X_488 $end
$var wire 1 x" \:X_487 $end
$var wire 1 y" \:X_486 $end
$var wire 1 z" \:X_485 $end
$var wire 1 {" \:X_484 $end
$var wire 1 |" \:X_483 $end
$var wire 1 }" \:X_482 $end
$var wire 1 ~" \:X_481 $end
$var wire 1 !# \:X_480 $end
$var wire 1 "# \:X_479 $end
$var wire 1 ## \:X_478 $end
$var wire 1 $# \:X_477 $end
$var wire 1 %# \:X_476 $end
$var wire 1 &# \:X_475 $end
$var wire 1 '# \:X_474 $end
$var wire 1 (# \:X_473 $end
$var wire 1 )# \:X_472 $end
$var wire 1 *# \:X_386 $end
$var wire 1 +# \:X_387 $end
$var wire 1 ,# \:X_388 $end
$var wire 1 -# \:X_389 $end
$var wire 1 .# \:X_390 $end
$var wire 1 /# \:X_391 $end
$var wire 1 0# \:X_392 $end
$var wire 1 1# \:X_393 $end
$var wire 1 2# \:X_394 $end
$var wire 1 3# \:X_395 $end
$var wire 1 4# \:X_396 $end
$var wire 1 5# \:X_397 $end
$var wire 1 6# \:X_398 $end
$var wire 1 7# \:X_399 $end
$var wire 1 8# \:X_400 $end
$var wire 1 9# \:X_401 $end
$var wire 1 :# \:X_402 $end
$var wire 1 ;# \:X_403 $end
$var wire 1 <# \:X_404 $end
$var wire 1 =# \:X_405 $end
$var wire 1 ># \:X_406 $end
$var reg 32 ?# \cpuregs[3] [31:0] $end
$var reg 32 @# \cpuregs[4] [31:0] $end
$var reg 32 A# \cpuregs[5] [31:0] $end
$var reg 32 B# \cpuregs[6] [31:0] $end
$var reg 32 C# \cpuregs[7] [31:0] $end
$var reg 32 D# \cpuregs[8] [31:0] $end
$var reg 32 E# \cpuregs[9] [31:0] $end
$var reg 32 F# \cpuregs[10] [31:0] $end
$var reg 32 G# \cpuregs[11] [31:0] $end
$var reg 32 H# \cpuregs[12] [31:0] $end
$var reg 32 I# \cpuregs[13] [31:0] $end
$var reg 32 J# \cpuregs[14] [31:0] $end
$var reg 32 K# \cpuregs[15] [31:0] $end
$var reg 32 L# \cpuregs[16] [31:0] $end
$var reg 32 M# \cpuregs[17] [31:0] $end
$var reg 1 N# pcpi_timeout $end
$var reg 1 O# mem_do_wdata $end
$var wire 1 P# mem_xfer $end
$var reg 1 Q# mem_la_secondword $end
$var wire 1 R# alu_out_0 $end
$var wire 32 S# alu_add_sub [31:0] $end
$var wire 32 T# alu_shl [31:0] $end
$var wire 32 U# alu_shr [31:0] $end
$var wire 1 V# alu_eq $end
$var wire 1 W# alu_ltu $end
$var wire 1 X# clear_prefetched_high_word $end
$var reg 16 Y# mem_16bit_buffer [15:0] $end
$var wire 32 Z# mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 [# mem_rdata_latched [31:0] $end
$var wire 1 \# mem_la_use_prefetched_high_word $end
$var reg 32 ]# \cpuregs[18] [31:0] $end
$var reg 32 ^# \cpuregs[19] [31:0] $end
$var reg 32 _# \cpuregs[20] [31:0] $end
$var reg 32 `# \cpuregs[21] [31:0] $end
$var reg 32 a# \cpuregs[22] [31:0] $end
$var reg 32 b# \cpuregs[23] [31:0] $end
$var reg 32 c# \cpuregs[24] [31:0] $end
$var reg 32 d# \cpuregs[25] [31:0] $end
$var reg 32 e# \cpuregs[26] [31:0] $end
$var reg 32 f# \cpuregs[27] [31:0] $end
$var reg 32 g# \cpuregs[28] [31:0] $end
$var reg 32 h# \cpuregs[29] [31:0] $end
$var reg 32 i# \cpuregs[30] [31:0] $end
$var reg 32 j# \cpuregs[31] [31:0] $end
$var wire 1 k# pcpi_mul_wr $end
$var reg 1 l# instr_and $end
$var reg 1 m# instr_rdcycle $end
$var reg 1 n# instr_rdcycleh $end
$var reg 1 o# instr_rdinstr $end
$var reg 1 p# instr_rdinstrh $end
$var reg 1 q# instr_ecall_ebreak $end
$var reg 1 r# instr_getq $end
$var reg 1 s# instr_setq $end
$var reg 1 t# instr_retirq $end
$var reg 1 u# instr_maskirq $end
$var reg 1 v# instr_waitirq $end
$var reg 1 w# instr_timer $end
$var wire 1 x# instr_trap $end
$var reg 5 y# decoded_rd [4:0] $end
$var reg 5 z# decoded_rs1 [4:0] $end
$var reg 5 {# decoded_rs2 [4:0] $end
$var reg 32 |# decoded_imm [31:0] $end
$var reg 32 }# decoded_imm_uj [31:0] $end
$var reg 1 ~# decoder_trigger $end
$var wire 1 !$ \:X_129 $end
$var wire 1 "$ \:X_130 $end
$var wire 1 #$ \:X_131 $end
$var wire 1 $$ \:X_132 $end
$var wire 1 %$ \:X_133 $end
$var wire 1 &$ \:X_134 $end
$var wire 1 '$ \:X_135 $end
$var wire 1 ($ \:X_136 $end
$var wire 1 )$ \:X_137 $end
$var wire 1 *$ \:X_138 $end
$var wire 1 +$ \:X_139 $end
$var wire 1 ,$ \:X_140 $end
$var wire 1 -$ \:X_141 $end
$var wire 1 .$ \:X_142 $end
$var wire 1 /$ \:X_143 $end
$var wire 1 0$ \:X_144 $end
$var wire 1 1$ \:X_145 $end
$var wire 1 2$ \:X_146 $end
$var wire 1 3$ \:X_407 $end
$var wire 1 4$ \:X_408 $end
$var wire 1 5$ \:X_409 $end
$var wire 1 6$ \:X_410 $end
$var wire 1 7$ \:X_411 $end
$var wire 1 8$ \:X_412 $end
$var wire 1 9$ \:X_413 $end
$var wire 1 :$ \:X_414 $end
$var wire 1 ;$ \:X_415 $end
$var wire 1 <$ \:X_416 $end
$var wire 1 =$ \:X_417 $end
$var wire 1 >$ \:X_418 $end
$var wire 1 ?$ \:X_419 $end
$var wire 1 @$ \:X_420 $end
$var wire 1 A$ alu_lts $end
$var reg 1 B$ clear_prefetched_high_word_q $end
$var wire 1 C$ cpuregs_write $end
$var wire 32 D$ cpuregs_wrdata [31:0] $end
$var wire 32 E$ cpuregs_rs1 [31:0] $end
$var wire 32 F$ cpuregs_rs2 [31:0] $end
$var wire 1 G$ \:X_32 $end
$var wire 1 H$ \:X_33 $end
$var wire 1 I$ \:X_34 $end
$var wire 1 J$ \:X_35 $end
$var wire 1 K$ \:X_36 $end
$var wire 1 L$ \:X_37 $end
$var wire 1 M$ \:X_38 $end
$var wire 1 N$ \:X_39 $end
$var wire 1 O$ \:X_357 $end
$var wire 1 P$ \:X_358 $end
$var wire 1 Q$ \:X_359 $end
$var wire 1 R$ \:X_360 $end
$var wire 1 S$ \:X_361 $end
$var wire 1 T$ \:X_362 $end
$var wire 1 U$ \:X_363 $end
$var wire 1 V$ \:X_364 $end
$var reg 1 W$ is_lb_lh_lw_lbu_lhu $end
$var reg 1 X$ is_slli_srli_srai $end
$var reg 1 Y$ is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 Z$ is_sb_sh_sw $end
$var reg 1 [$ is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 64 \$ count_cycle [63:0] $end
$var reg 64 ]$ count_instr [63:0] $end
$var reg 32 ^$ reg_pc [31:0] $end
$var reg 32 _$ reg_next_pc [31:0] $end
$var reg 32 `$ reg_op1 [31:0] $end
$var reg 32 a$ reg_op2 [31:0] $end
$var reg 32 b$ reg_out [31:0] $end
$var reg 5 c$ reg_sh [4:0] $end
$var reg 32 d$ next_insn_opcode [31:0] $end
$var wire 32 e$ dbg_insn_opcode [31:0] $end
$var wire 1 f$ \:X_147 $end
$var wire 1 g$ \:X_148 $end
$var wire 1 h$ \:X_149 $end
$var wire 1 i$ \:X_150 $end
$var wire 1 j$ \:X_151 $end
$var wire 1 k$ \:X_152 $end
$var wire 1 l$ \:X_153 $end
$var wire 1 m$ \:X_154 $end
$var wire 1 n$ \:X_155 $end
$var wire 1 o$ \:X_156 $end
$var wire 1 p$ \:X_157 $end
$var wire 1 q$ \:X_158 $end
$var wire 1 r$ \:X_159 $end
$var wire 1 s$ \:X_160 $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ reset $end
$var wire 1 v$ mem_ready $end
$var wire 32 w$ mem_rdata [31:0] $end
$var wire 1 x$ rvfi_valid $end
$var wire 32 y$ rvfi_insn [31:0] $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 32 {$ insn_padding [31:0] $end
$var wire 7 |$ insn_funct7 [6:0] $end
$var wire 3 }$ insn_funct3 [2:0] $end
$var wire 7 ~$ insn_opcode [6:0] $end
$var wire 1 !% rvfi_valid $end
$var wire 32 "% rvfi_insn [31:0] $end
$var wire 1 #% spec_valid $end
$upscope $end
$var wire 1 $% reset $end
$var wire 1 %% check $end
$var wire 1 &% rvfi_valid $end
$var wire 32 '% rvfi_insn [31:0] $end
$var wire 1 (% spec_valid $end
$var wire 1 )% valid $end
$var wire 1 *% clock $end
$upscope $end
$var wire 1 +% reset $end
$var wire 1 ,% rvfi_valid $end
$var reg 8 -% cycle_reg [7:0] $end
$var wire 1 .% \:jasper_formal_reset $end
$var wire 32 /% rvfi_insn [31:0] $end
$var wire 8 0% cycle [7:0] $end
$var wire 1 1% clock $end
$var wire 1 2% \:jasper_formal_clock $end
$upscope $end
$enddefinitions $end
#0
11%
1+%
b00000000 0%
#5
01%
#10
11%
b00000001 -%
#15
01%
#20
11%
#25
01%
#30
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
1?
0@
b00000010000000000100000000110011 A
b11111111111111111111111111111111 B
b00000000000000000000000000000000 C
0D
0E
b00000000000000000000000000000000 F
0G
0H
0I
0J
0K
0L
0M
0N
b00000000000000000000000000000000 O
0P
0Q
0R
1S
0T
1U
0V
b00000010000000000100000000110011 W
b11111111111111111111111111111111 X
b00000000000000000000000000000000 Y
0Z
0[
b00000000000000000000000000000000 \
0]
0^
0_
0`
0a
0b
b0000 c
0d
1e
b00000001111111111010000000000000 f
0g
0h
0i
b00000000000000000000000000000000 j
b01000000 k
b00 l
1m
0n
0o
0p
b11101001111111000001000000000000 q
0r
0s
0t
0u
0v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
0{
b00000010000000000100000000110011 |
b11111111111111111111111111111111 }
b00000000000000000000000000000000 ~
0!!
b00000001111111111010000000000000 "!
0#!
0$!
0%!
1&!
0'!
0(!
0)!
0*!
0+!
1,!
1-!
0.!
1/!
b00000000000000000000000000000000 0!
01!
02!
03!
b00000000000000000000000000000000 4!
05!
06!
07!
b00000000000000000000000000000000 8!
09!
0:!
b00 ;!
b00 <!
b11101001111111000001000000000000 =!
b00000000000000000000000001100011 >!
0?!
0@!
0A!
1B!
1C!
1D!
1E!
1F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
b00010 _!
b1111 `!
0a!
b00000000000000000000000000000000 b!
b00000000000000000000000000000000 c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
1'"
0("
0)"
0*"
0+"
0,"
0-"
0."
1/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
1J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
b00000000000000000000000000000000 ?#
b00000000000000000000000000000000 @#
b00000000000000000000000000000000 A#
b00000000000000000000000000000000 B#
b00000000000000000000000000000000 C#
b00000000000000000000000000000000 D#
b00000000000000000000000000000000 E#
b00000000000000000000000000000000 F#
b00000000000000000000000000000000 G#
b00000000000000000000000000000000 H#
b00000000000000000000000000000000 I#
b00000000000000000000000000000000 J#
b00000000000000000000000000000000 K#
b00000000000000000000000000000000 L#
b00000000000000000000000000000000 M#
0N#
0O#
0P#
0Q#
0R#
b11111111111111111111111111111111 S#
b11111111111111111111111111111111 T#
b11111111111111111111111111111111 U#
0V#
0W#
0X#
b0000000000000000 Y#
b00000000000000000000000001100011 Z#
b00000000000000000000000001100011 [#
0\#
b00000000000000000000000000000000 ]#
b00000000000000000000000000000000 ^#
b00000000000000000000000000000000 _#
b00000000000000000000000000000000 `#
b00000000000000000000000000000000 a#
b00000000000000000000000000000000 b#
b00000000000000000000000000000000 c#
b00000000000000000000000000000000 d#
b00000000000000000000000000000000 e#
b00000000000000000000000000000000 f#
b00000000000000000000000000000000 g#
b00000000000000000000000000000000 h#
b00000000000000000000000000000000 i#
b00000000000000000000000000000000 j#
0k#
0l#
0m#
0n#
0o#
1p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
b11111 y#
b11111 z#
b11111 {#
b00000000000000000000000000000011 |#
b00000000000000000000000000000000 }#
0~#
1!$
1"$
1#$
1$$
1%$
1&$
1'$
1($
1)$
1*$
1+$
1,$
1-$
1.$
1/$
10$
11$
12$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
0<$
0=$
0>$
1?$
0@$
1A$
1B$
0C$
b11111111111111111111110111101111 D$
b00000000000000000000000000000000 E$
b00000000000000000000000000000000 F$
0G$
0H$
0I$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
1W$
0X$
1Y$
1Z$
0[$
b0000000000000000000000000000000000000000000000000000000000000000 \$
b0000000000000000000000000000000000000000000000000000000000000000 ]$
b00000000000000000000000000000000 ^$
b00000000000000000000000000000000 _$
b11111111111111111111111111111111 `$
b00000000000000000000000000000000 a$
b00000000000000000000000000000000 b$
b11111 c$
b11111111111111110000000000000011 d$
b00000001111111111010000000000000 e$
1f$
1g$
1h$
1i$
0j$
1k$
1l$
1m$
1n$
0o$
1p$
1q$
1r$
1s$
1t$
0u$
0v$
b11101001111111000001000000000000 w$
0x$
b00000001111111111010000000000000 y$
1z$
b00000000000000000000000000000000 {$
b0000000 |$
b010 }$
b0000000 ~$
0!%
b00000001111111111010000000000000 "%
0#%
0$%
0%%
0&%
b00000001111111111010000000000000 '%
0(%
0)%
1*%
0+%
0,%
b00000001 -%
0.%
b00000001111111111010000000000000 /%
b00000001 0%
11%
12%
#35
0S
0e
0t$
0z$
0*%
01%
02%
#40
1S
1e
b00000000000000000000000000000011 q
1r
1'!
b00000000000000000000000000000011 =!
1@!
1[!
b11111 _!
b11111111111111111111111111111111 b!
0J"
1@$
0B$
b11111111111111111111111111111111 D$
1[$
b0000000000000000000000000000000000000000000000000000000000000001 \$
b00000000000000000000000000000001 b$
1j$
1o$
1t$
b00000000000000000000000000000011 w$
1z$
1*%
b00000010 -%
b00000010 0%
11%
12%
#45
0S
0e
0t$
0z$
0*%
01%
02%
#50
1S
1e
1o
1p
b00000000000000000000000001110011 q
0r
b01 ;!
b00000000000000000000000001110011 =!
b11111111111111111111111111111111 c!
1$"
1P#
b00000000000000000000000001110011 Z#
b00000000000000000000000001110011 [#
b0000000000000000000000000000000000000000000000000000000000000010 \$
b00000000000000000000000000000000 b$
1t$
1v$
b00000000000000000000000001110011 w$
1z$
1*%
b00000011 -%
b00000011 0%
11%
12%
#55
0S
0e
0t$
0z$
0*%
01%
02%
#60
1S
1e
1h
0o
0p
b00000000000000000000000000000011 q
0&!
0,!
0-!
b00 ;!
b00000000000000000000000000000011 =!
b00000000000000000000000001110011 >!
0@!
1W!
0$"
0'"
1.#
1/#
0P#
b00000 y#
b00000 z#
b00000 {#
1~#
0W$
0Z$
b0000000000000000000000000000000000000000000000000000000000000011 \$
b00000000000000000000000001110011 d$
1t$
0v$
b00000000000000000000000000000011 w$
1z$
1*%
b00000100 -%
b00000100 0%
11%
12%
#65
0S
0e
0t$
0z$
0*%
01%
02%
#70
b00000000000000000000000001110011 A
1S
b00000000000000000000000001110011 W
1e
1g
0h
1i
b00100000 k
1r
b00000000000000000000000000000100 w
b00000000000000000000000001110011 |
1#!
0'!
0/!
1?!
0W!
0[!
b00000 _!
b00000000000000000000000000000000 b!
0/"
0.#
0/#
0p#
1q#
1x#
b00000000000000000000000000000001 |#
0~#
0?$
0@$
b11111111111111111111111111111001 D$
0Y$
0[$
b0000000000000000000000000000000000000000000000000000000000000100 \$
b0000000000000000000000000000000000000000000000000000000000000001 ]$
b00000000000000000000000000000100 _$
b00000000000000000000000001110011 e$
0q$
0r$
1t$
1z$
1*%
b00000101 -%
b00000101 0%
11%
12%
#75
0S
0e
0t$
0z$
0*%
01%
02%
#80
b00000000000000000000000000000000 B
1S
b00000000000000000000000000000000 X
1e
b00000000000000000000000001110011 f
0g
b00000000000000000000000001110011 j
b10000000 k
1o
1p
b00000000000000000011000100000000 q
0r
b00000000000000000000000000000000 }
b00000000000000000000000001110011 "!
0#!
b01 ;!
b00000000000000000011000100000000 =!
b00000000000000000000000000000000 c!
1P#
b00000000000000000000000000000000 S#
b00000000000000000000000000000000 T#
b00000000000000000000000000000000 U#
1V#
b00000000000000000011000100000000 Z#
b00000000000000000011000100000000 [#
0!$
0"$
0#$
0$$
0%$
0&$
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
0A$
b00000000000000000000000000000000 D$
b0000000000000000000000000000000000000000000000000000000000000101 \$
b00000000000000000000000000000000 `$
b00000 c$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0s$
1t$
1v$
b00000000000000000011000100000000 w$
b00000000000000000000000001110011 y$
1z$
b000 }$
b1110011 ~$
b00000000000000000000000001110011 "%
b00000000000000000000000001110011 '%
1*%
b00000110 -%
b00000000000000000000000001110011 /%
b00000110 0%
11%
12%
#85
0S
0e
0t$
0z$
0*%
01%
02%
#90
1S
1e
1n
0o
0p
b00000000000000000000000000000000 q
1v
b11 ;!
b00000000000000000000000000000000 =!
b00000000000000000011000100000000 >!
0P#
b0000000000000000000000000000000000000000000000000000000000000110 \$
b11111 c$
b00000000000000000011000100000000 d$
1t$
0v$
b00000000000000000000000000000000 w$
1z$
1*%
b00000111 -%
b00000111 0%
11%
12%
#95
0S
0e
0t$
0z$
0*%
01%
02%
#100
1S
1e
0i
0v
1!!
b0000000000000000000000000000000000000000000000000000000000000111 \$
1t$
1x$
1z$
1!%
1&%
1)%
1*%
1,%
b00001000 -%
b00001000 0%
11%
12%
#105
0S
0e
0t$
0z$
0*%
01%
02%
#110
