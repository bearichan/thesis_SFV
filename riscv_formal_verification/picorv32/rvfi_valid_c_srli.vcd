$date Tue Feb 26 19:06:17 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! \:X_0 $end
$var wire 1 " \:X_1 $end
$var wire 1 # \:X_2 $end
$var wire 1 $ \:X_5 $end
$var wire 1 % \:X_6 $end
$var wire 1 & \:X_7 $end
$var wire 1 ' \:X_8 $end
$var wire 1 ( \:X_9 $end
$var wire 1 ) \:X_10 $end
$var wire 1 * \:X_11 $end
$var wire 1 + \:X_12 $end
$var wire 1 , \:X_13 $end
$var wire 1 - \:X_14 $end
$var wire 1 . \:X_15 $end
$var wire 1 / \:X_16 $end
$var wire 1 0 \:X_17 $end
$var wire 1 1 \:X_18 $end
$var wire 1 2 \:X_19 $end
$var wire 1 3 \:X_20 $end
$var wire 1 4 \:X_21 $end
$var wire 1 5 \:X_22 $end
$var wire 1 6 \:X_23 $end
$var wire 1 7 \:X_24 $end
$var wire 1 8 \:X_25 $end
$var wire 1 9 \:X_26 $end
$var wire 1 : \:X_27 $end
$var wire 1 ; \:X_28 $end
$var wire 1 < \:X_29 $end
$var wire 1 = \:X_30 $end
$var wire 1 > \:X_31 $end
$var reg 32 ? quotient_msk [31:0] $end
$var reg 1 @ running $end
$var wire 1 A \:X_3 $end
$var wire 1 B \:X_4 $end
$var wire 1 C resetn $end
$var wire 1 D pcpi_valid $end
$var wire 32 E pcpi_insn [31:0] $end
$var wire 32 F pcpi_rs1 [31:0] $end
$var wire 32 G pcpi_rs2 [31:0] $end
$var wire 1 H instr_any_div_rem $end
$var reg 1 I pcpi_wr $end
$var reg 32 J pcpi_rd [31:0] $end
$var reg 1 K pcpi_wait $end
$var reg 1 L pcpi_ready $end
$var reg 1 M instr_div $end
$var reg 1 N instr_divu $end
$var reg 1 O instr_rem $end
$var reg 1 P instr_remu $end
$var reg 1 Q pcpi_wait_q $end
$var wire 1 R start $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T \:X_3556 $end
$var wire 1 U resetn $end
$var wire 1 V pcpi_valid $end
$var wire 32 W pcpi_insn [31:0] $end
$var wire 32 X pcpi_rs1 [31:0] $end
$var wire 32 Y pcpi_rs2 [31:0] $end
$var wire 1 Z instr_any_mul $end
$var wire 1 [ pcpi_wr $end
$var wire 32 \ pcpi_rd [31:0] $end
$var wire 1 ] pcpi_wait $end
$var wire 1 ^ pcpi_ready $end
$var wire 1 _ instr_mul $end
$var wire 1 ` instr_mulh $end
$var wire 1 a instr_mulhsu $end
$var wire 1 b instr_mulhu $end
$var reg 4 c active [3:0] $end
$var wire 1 d pcpi_insn_valid $end
$var wire 1 e clk $end
$upscope $end
$var wire 1 f \:X_399 $end
$var wire 1 g \:X_400 $end
$var wire 1 h \:X_401 $end
$var wire 1 i \:X_402 $end
$var wire 1 j \:X_403 $end
$var wire 1 k \:X_404 $end
$var wire 1 l \:X_405 $end
$var wire 1 m \:X_406 $end
$var wire 1 n \:X_407 $end
$var wire 1 o \:X_408 $end
$var wire 1 p \:X_409 $end
$var wire 1 q \:X_410 $end
$var wire 1 r \:X_411 $end
$var wire 1 s \:X_412 $end
$var wire 1 t \:X_413 $end
$var wire 1 u \:X_414 $end
$var wire 1 v \:X_415 $end
$var wire 1 w \:X_416 $end
$var wire 1 x \:X_417 $end
$var wire 1 y pcpi_div_ready $end
$var wire 1 z pcpi_int_wr $end
$var wire 32 { pcpi_int_rd [31:0] $end
$var wire 1 | pcpi_int_wait $end
$var wire 1 } pcpi_int_ready $end
$var reg 2 ~ mem_state [1:0] $end
$var reg 2 !! mem_wordsize [1:0] $end
$var wire 32 "! mem_rdata_word [31:0] $end
$var reg 32 #! mem_rdata_q [31:0] $end
$var reg 1 $! mem_do_prefetch $end
$var reg 1 %! mem_do_rinst $end
$var reg 1 &! mem_do_rdata $end
$var reg 1 '! mem_do_wdata $end
$var wire 1 (! mem_xfer $end
$var reg 1 )! mem_la_secondword $end
$var reg 32 *! \cpuregs[11] [31:0] $end
$var reg 32 +! \cpuregs[12] [31:0] $end
$var reg 32 ,! \cpuregs[13] [31:0] $end
$var reg 32 -! \cpuregs[14] [31:0] $end
$var reg 32 .! \cpuregs[15] [31:0] $end
$var reg 32 /! \cpuregs[16] [31:0] $end
$var reg 32 0! \cpuregs[17] [31:0] $end
$var reg 32 1! \cpuregs[18] [31:0] $end
$var reg 32 2! \cpuregs[19] [31:0] $end
$var reg 32 3! \cpuregs[20] [31:0] $end
$var reg 32 4! \cpuregs[21] [31:0] $end
$var reg 32 5! \cpuregs[22] [31:0] $end
$var reg 32 6! \cpuregs[23] [31:0] $end
$var reg 32 7! \cpuregs[24] [31:0] $end
$var wire 1 8! \:X_220 $end
$var wire 1 9! \:X_221 $end
$var wire 1 :! \:X_222 $end
$var wire 1 ;! \:X_223 $end
$var wire 1 <! \:X_224 $end
$var wire 1 =! \:X_225 $end
$var wire 1 >! \:X_226 $end
$var wire 1 ?! \:X_227 $end
$var wire 1 @! \:X_228 $end
$var wire 1 A! \:X_229 $end
$var wire 1 B! \:X_230 $end
$var wire 1 C! \:X_231 $end
$var wire 32 D! dbg_insn_opcode [31:0] $end
$var reg 1 E! mem_la_firstword_reg $end
$var reg 1 F! last_mem_valid $end
$var wire 1 G! mem_la_firstword $end
$var wire 32 H! next_pc [31:0] $end
$var wire 1 I! \:X_357 $end
$var wire 1 J! \:X_358 $end
$var wire 1 K! \:X_359 $end
$var wire 1 L! \:X_360 $end
$var reg 5 M! decoded_rs1 [4:0] $end
$var reg 5 N! decoded_rs2 [4:0] $end
$var reg 32 O! decoded_imm [31:0] $end
$var reg 1 P! is_sb_sh_sw $end
$var reg 1 Q! is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 R! is_slti_blt_slt $end
$var reg 1 S! is_sltiu_bltu_sltu $end
$var reg 1 T! is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 U! is_lbu_lhu_lw $end
$var reg 1 V! is_alu_reg_imm $end
$var reg 1 W! is_alu_reg_reg $end
$var reg 1 X! is_compare $end
$var wire 1 Y! is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var wire 1 Z! \:X_361 $end
$var wire 1 [! \:X_362 $end
$var wire 1 \! \:X_363 $end
$var wire 1 ]! \:X_364 $end
$var wire 1 ^! \:X_365 $end
$var wire 1 _! \:X_366 $end
$var wire 1 `! \:X_367 $end
$var wire 1 a! \:X_368 $end
$var wire 1 b! \:X_369 $end
$var wire 1 c! \:X_370 $end
$var wire 1 d! \:X_371 $end
$var wire 1 e! \:X_372 $end
$var wire 1 f! \:X_373 $end
$var wire 1 g! \:X_374 $end
$var wire 1 h! \:X_375 $end
$var wire 1 i! \:X_376 $end
$var wire 1 j! \:X_377 $end
$var wire 1 k! \:X_378 $end
$var wire 1 l! \:X_379 $end
$var wire 1 m! \:X_160 $end
$var wire 1 n! \:X_478 $end
$var wire 1 o! \:X_477 $end
$var wire 1 p! \:X_476 $end
$var wire 1 q! \:X_475 $end
$var wire 1 r! \:X_474 $end
$var wire 1 s! \:X_473 $end
$var wire 1 t! \:X_472 $end
$var wire 1 u! \:X_471 $end
$var wire 1 v! \:X_470 $end
$var wire 1 w! \:X_469 $end
$var wire 1 x! \:X_468 $end
$var wire 1 y! \:X_467 $end
$var wire 1 z! \:X_466 $end
$var wire 1 {! \:X_465 $end
$var wire 1 |! \:X_464 $end
$var wire 1 }! \:X_463 $end
$var wire 1 ~! \:X_462 $end
$var wire 1 !" \:X_461 $end
$var reg 1 "" decoder_pseudo_trigger $end
$var reg 1 #" decoder_pseudo_trigger_q $end
$var reg 1 $" compressed_instr $end
$var reg 1 %" is_lui_auipc_jal $end
$var reg 1 &" is_lb_lh_lw_lbu_lhu $end
$var reg 1 '" is_slli_srli_srai $end
$var reg 1 (" is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var wire 1 )" \:X_232 $end
$var wire 1 *" \:X_233 $end
$var wire 1 +" \:X_234 $end
$var wire 1 ," \:X_235 $end
$var wire 1 -" \:X_236 $end
$var wire 1 ." \:X_237 $end
$var wire 1 /" \:X_238 $end
$var wire 1 0" \:X_239 $end
$var wire 1 1" \:X_240 $end
$var wire 1 2" \:X_241 $end
$var wire 1 3" \:X_242 $end
$var wire 1 4" \:X_243 $end
$var wire 1 5" \:X_244 $end
$var wire 1 6" \:X_245 $end
$var wire 1 7" \:X_246 $end
$var wire 1 8" \:X_247 $end
$var wire 1 9" \:X_248 $end
$var wire 1 :" \:X_249 $end
$var wire 1 ;" \:X_250 $end
$var wire 1 <" \:X_492 $end
$var wire 1 =" \:X_491 $end
$var wire 1 >" \:X_490 $end
$var wire 1 ?" \:X_489 $end
$var wire 1 @" \:X_488 $end
$var wire 1 A" \:X_487 $end
$var wire 1 B" \:X_486 $end
$var wire 1 C" \:X_485 $end
$var wire 1 D" \:X_484 $end
$var wire 1 E" \:X_483 $end
$var wire 1 F" \:X_482 $end
$var wire 1 G" \:X_481 $end
$var wire 1 H" \:X_480 $end
$var wire 1 I" \:X_479 $end
$var reg 1 J" dbg_valid_insn $end
$var reg 32 K" cached_insn_opcode [31:0] $end
$var reg 8 L" cpu_state [7:0] $end
$var reg 2 M" irq_state [1:0] $end
$var reg 1 N" latched_store $end
$var reg 1 O" latched_stalu $end
$var reg 32 P" decoded_imm_uj [31:0] $end
$var reg 1 Q" decoder_trigger $end
$var reg 1 R" decoder_trigger_q $end
$var wire 1 S" \:X_40 $end
$var wire 1 T" \:X_41 $end
$var wire 1 U" \:X_42 $end
$var wire 1 V" \:X_43 $end
$var wire 1 W" \:X_44 $end
$var wire 1 X" \:X_45 $end
$var wire 1 Y" \:X_46 $end
$var wire 1 Z" \:X_47 $end
$var wire 1 [" \:X_48 $end
$var wire 1 \" \:X_49 $end
$var wire 1 ]" \:X_50 $end
$var wire 1 ^" \:X_51 $end
$var wire 1 _" \:X_52 $end
$var wire 1 `" \:X_53 $end
$var wire 1 a" \:X_54 $end
$var wire 1 b" \:X_55 $end
$var wire 1 c" \:X_56 $end
$var wire 1 d" \:X_418 $end
$var wire 1 e" \:X_419 $end
$var wire 1 f" \:X_420 $end
$var wire 32 g" alu_add_sub [31:0] $end
$var wire 32 h" alu_shl [31:0] $end
$var wire 32 i" alu_shr [31:0] $end
$var wire 1 j" alu_eq $end
$var wire 1 k" alu_ltu $end
$var wire 1 l" alu_lts $end
$var reg 1 m" clear_prefetched_high_word_q $end
$var reg 1 n" prefetched_high_word $end
$var wire 1 o" clear_prefetched_high_word $end
$var reg 16 p" mem_16bit_buffer [15:0] $end
$var wire 32 q" mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 r" mem_rdata_latched [31:0] $end
$var wire 1 s" mem_la_use_prefetched_high_word $end
$var reg 1 t" instr_sh $end
$var reg 1 u" instr_sw $end
$var reg 1 v" instr_addi $end
$var reg 1 w" instr_slti $end
$var reg 1 x" instr_sltiu $end
$var reg 1 y" instr_xori $end
$var reg 1 z" instr_ori $end
$var reg 1 {" instr_andi $end
$var reg 1 |" instr_slli $end
$var reg 1 }" instr_srli $end
$var reg 1 ~" instr_srai $end
$var reg 1 !# instr_add $end
$var reg 1 "# instr_sub $end
$var reg 1 ## instr_sll $end
$var reg 1 $# instr_slt $end
$var reg 1 %# instr_sltu $end
$var reg 1 &# instr_xor $end
$var reg 64 '# count_cycle [63:0] $end
$var reg 64 (# count_instr [63:0] $end
$var reg 32 )# reg_pc [31:0] $end
$var reg 32 *# reg_next_pc [31:0] $end
$var reg 32 +# reg_op1 [31:0] $end
$var reg 32 ,# reg_op2 [31:0] $end
$var reg 32 -# reg_out [31:0] $end
$var reg 5 .# reg_sh [4:0] $end
$var reg 32 /# next_insn_opcode [31:0] $end
$var wire 1 0# resetn $end
$var reg 1 1# trap $end
$var reg 1 2# mem_valid $end
$var wire 1 3# mem_ready $end
$var wire 32 4# mem_rdata [31:0] $end
$var wire 1 5# mem_la_read $end
$var reg 1 6# pcpi_valid $end
$var reg 32 7# pcpi_insn [31:0] $end
$var wire 32 8# pcpi_rs1 [31:0] $end
$var wire 32 9# pcpi_rs2 [31:0] $end
$var reg 1 :# rvfi_valid $end
$var reg 32 ;# rvfi_insn [31:0] $end
$var reg 1 <# latched_branch $end
$var reg 1 =# latched_compr $end
$var reg 1 ># latched_is_lu $end
$var reg 1 ?# latched_is_lh $end
$var reg 1 @# latched_is_lb $end
$var reg 5 A# latched_rd [4:0] $end
$var reg 4 B# pcpi_timeout_counter [3:0] $end
$var reg 1 C# pcpi_timeout $end
$var reg 1 D# do_waitirq $end
$var wire 32 E# alu_out [31:0] $end
$var reg 32 F# alu_out_q [31:0] $end
$var wire 1 G# alu_out_0 $end
$var wire 1 H# \:X_141 $end
$var wire 1 I# \:X_142 $end
$var wire 1 J# \:X_143 $end
$var wire 1 K# \:X_144 $end
$var wire 1 L# \:X_145 $end
$var wire 1 M# \:X_146 $end
$var wire 1 N# \:X_147 $end
$var wire 1 O# \:X_148 $end
$var wire 1 P# \:X_149 $end
$var wire 1 Q# \:X_150 $end
$var wire 1 R# \:X_151 $end
$var wire 1 S# \:X_152 $end
$var wire 1 T# \:X_153 $end
$var wire 1 U# \:X_154 $end
$var wire 1 V# \:X_155 $end
$var wire 1 W# \:X_156 $end
$var wire 1 X# \:X_157 $end
$var wire 1 Y# \:X_158 $end
$var wire 1 Z# \:X_159 $end
$var reg 1 [# instr_srl $end
$var reg 1 \# instr_sra $end
$var reg 1 ]# instr_or $end
$var reg 1 ^# instr_and $end
$var reg 1 _# instr_rdcycle $end
$var reg 1 `# instr_rdcycleh $end
$var reg 1 a# instr_rdinstr $end
$var reg 1 b# instr_rdinstrh $end
$var reg 1 c# instr_ecall_ebreak $end
$var reg 1 d# instr_getq $end
$var reg 1 e# instr_setq $end
$var reg 1 f# instr_retirq $end
$var reg 1 g# instr_maskirq $end
$var reg 1 h# instr_waitirq $end
$var reg 1 i# instr_timer $end
$var wire 1 j# instr_trap $end
$var reg 5 k# decoded_rd [4:0] $end
$var wire 1 l# \:X_64 $end
$var wire 1 m# \:X_57 $end
$var wire 1 n# \:X_58 $end
$var wire 1 o# \:X_59 $end
$var wire 1 p# \:X_60 $end
$var wire 1 q# \:X_61 $end
$var wire 1 r# \:X_62 $end
$var wire 1 s# \:X_63 $end
$var wire 1 t# \:X_251 $end
$var wire 1 u# \:X_252 $end
$var wire 1 v# \:X_253 $end
$var wire 1 w# \:X_254 $end
$var wire 1 x# \:X_255 $end
$var wire 1 y# \:X_256 $end
$var reg 32 z# \cpuregs[25] [31:0] $end
$var reg 32 {# \cpuregs[26] [31:0] $end
$var reg 32 |# \cpuregs[27] [31:0] $end
$var reg 32 }# \cpuregs[28] [31:0] $end
$var reg 32 ~# \cpuregs[29] [31:0] $end
$var reg 32 !$ \cpuregs[30] [31:0] $end
$var reg 32 "$ \cpuregs[31] [31:0] $end
$var wire 1 #$ pcpi_mul_wr $end
$var wire 32 $$ pcpi_mul_rd [31:0] $end
$var wire 1 %$ pcpi_mul_wait $end
$var wire 1 &$ pcpi_mul_ready $end
$var wire 1 '$ pcpi_div_wr $end
$var wire 32 ($ pcpi_div_rd [31:0] $end
$var wire 1 )$ pcpi_div_wait $end
$var wire 1 *$ \:X_380 $end
$var wire 1 +$ \:X_381 $end
$var wire 1 ,$ \:X_382 $end
$var wire 1 -$ \:X_383 $end
$var wire 1 .$ \:X_384 $end
$var wire 1 /$ \:X_385 $end
$var wire 1 0$ \:X_386 $end
$var wire 1 1$ \:X_387 $end
$var wire 1 2$ \:X_388 $end
$var wire 1 3$ \:X_389 $end
$var wire 1 4$ \:X_390 $end
$var wire 1 5$ \:X_391 $end
$var wire 1 6$ \:X_392 $end
$var wire 1 7$ \:X_393 $end
$var wire 1 8$ \:X_394 $end
$var wire 1 9$ \:X_395 $end
$var wire 1 :$ \:X_396 $end
$var wire 1 ;$ \:X_397 $end
$var wire 1 <$ \:X_398 $end
$var reg 32 =$ q_insn_opcode [31:0] $end
$var reg 1 >$ dbg_next $end
$var wire 1 ?$ launch_next_insn $end
$var reg 32 @$ \cpuregs[0] [31:0] $end
$var reg 32 A$ \cpuregs[1] [31:0] $end
$var reg 32 B$ \cpuregs[2] [31:0] $end
$var reg 32 C$ \cpuregs[3] [31:0] $end
$var reg 32 D$ \cpuregs[4] [31:0] $end
$var reg 32 E$ \cpuregs[5] [31:0] $end
$var reg 32 F$ \cpuregs[6] [31:0] $end
$var reg 32 G$ \cpuregs[7] [31:0] $end
$var reg 32 H$ \cpuregs[8] [31:0] $end
$var reg 32 I$ \cpuregs[9] [31:0] $end
$var reg 32 J$ \cpuregs[10] [31:0] $end
$var wire 1 K$ cpuregs_write $end
$var wire 32 L$ cpuregs_wrdata [31:0] $end
$var wire 32 M$ cpuregs_rs1 [31:0] $end
$var wire 32 N$ cpuregs_rs2 [31:0] $end
$var wire 1 O$ \:X_32 $end
$var wire 1 P$ \:X_33 $end
$var wire 1 Q$ \:X_34 $end
$var wire 1 R$ \:X_35 $end
$var wire 1 S$ \:X_36 $end
$var wire 1 T$ \:X_37 $end
$var wire 1 U$ \:X_38 $end
$var wire 1 V$ \:X_39 $end
$var wire 1 W$ \:X_129 $end
$var wire 1 X$ \:X_130 $end
$var wire 1 Y$ \:X_131 $end
$var wire 1 Z$ \:X_132 $end
$var wire 1 [$ \:X_133 $end
$var wire 1 \$ \:X_134 $end
$var wire 1 ]$ \:X_135 $end
$var wire 1 ^$ \:X_136 $end
$var wire 1 _$ \:X_137 $end
$var wire 1 `$ \:X_138 $end
$var wire 1 a$ \:X_139 $end
$var wire 1 b$ \:X_140 $end
$var wire 1 c$ mem_done $end
$var reg 1 d$ instr_lui $end
$var reg 1 e$ instr_auipc $end
$var reg 1 f$ instr_jal $end
$var reg 1 g$ instr_jalr $end
$var reg 1 h$ instr_beq $end
$var reg 1 i$ instr_bne $end
$var reg 1 j$ instr_blt $end
$var reg 1 k$ instr_bge $end
$var reg 1 l$ instr_bltu $end
$var reg 1 m$ instr_bgeu $end
$var reg 1 n$ instr_lb $end
$var reg 1 o$ instr_lh $end
$var reg 1 p$ instr_lw $end
$var reg 1 q$ instr_lbu $end
$var reg 1 r$ instr_lhu $end
$var reg 1 s$ instr_sb $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ mem_ready $end
$var wire 32 v$ mem_rdata [31:0] $end
$var wire 1 w$ reset $end
$var wire 1 x$ rvfi_valid $end
$var wire 32 y$ rvfi_insn [31:0] $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ spec_valid $end
$var wire 32 |$ insn_padding [31:0] $end
$var wire 1 }$ rvfi_valid $end
$var wire 32 ~$ rvfi_insn [31:0] $end
$var wire 6 !% insn_shamt [5:0] $end
$var wire 3 "% insn_funct3 [2:0] $end
$var wire 2 #% insn_funct2 [1:0] $end
$var wire 2 $% insn_opcode [1:0] $end
$upscope $end
$var wire 1 %% valid $end
$var wire 1 &% reset $end
$var wire 1 '% check $end
$var wire 1 (% rvfi_valid $end
$var wire 32 )% rvfi_insn [31:0] $end
$var wire 1 *% spec_valid $end
$var wire 1 +% clock $end
$upscope $end
$var wire 32 ,% rvfi_insn [31:0] $end
$var wire 1 -% reset $end
$var wire 1 .% rvfi_valid $end
$var reg 8 /% cycle_reg [7:0] $end
$var wire 8 0% cycle [7:0] $end
$var wire 1 1% \:jasper_formal_reset $end
$var wire 1 2% clock $end
$var wire 1 3% \:jasper_formal_clock $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
b00000000000000000000000000000000 ?
0@
0A
0B
1C
0D
b00000010000000000100000000110011 E
b11111111111111111111111111111110 F
b00000000000000000000000000000011 G
0H
0I
b00000000000000000000000000000000 J
0K
0L
0M
0N
0O
0P
0Q
0R
1S
0T
1U
0V
b00000010000000000100000000110011 W
b11111111111111111111111111111110 X
b00000000000000000000000000000011 Y
0Z
0[
b00000000000000000000000000000000 \
0]
0^
0_
0`
0a
0b
b0000 c
0d
1e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
b00000000000000000000000000000000 {
0|
0}
b00 ~
b01 !!
b00000000000000000000000000000000 "!
b00000000000000001000000000110011 #!
0$!
0%!
0&!
0'!
0(!
0)!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
18!
19!
1:!
1;!
1<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
b10000100000000000001000000001011 D!
0E!
0F!
0G!
b00000000000000000000000000000000 H!
0I!
0J!
0K!
0L!
b00001 M!
b10011 N!
b00000000000000010000000000000001 O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
1W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
1m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
b00000000000000000000000000000000 K"
b01000000 L"
b00 M"
0N"
0O"
b00000000000000000000000000000000 P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
b00000000000000000000000000000001 g"
b11111111111111111111111111110000 h"
b00011111111111111111111111111111 i"
0j"
0k"
1l"
1m"
0n"
0o"
b0000000000000000 p"
b00000000000000001000000000110011 q"
b00000000000000001000000000110011 r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
b0000000000000000000000000000000000000000000000000000000000000000 '#
b0000000000000000000000000000000000000000000000000000000000000000 (#
b00000000000000000000000000000000 )#
b00000000000000000000000000000000 *#
b11111111111111111111111111111110 +#
b00000000000000000000000000000011 ,#
b00000000000000000000000000000000 -#
b11111 .#
b11111111111111110000000000000011 /#
10#
01#
02#
03#
b00000000000000000000000000000011 4#
05#
06#
b00000010000000000100000000110011 7#
b11111111111111111111111111111110 8#
b00000000000000000000000000000011 9#
0:#
b10000100000000000001000000001011 ;#
0<#
0=#
0>#
0?#
0@#
b00001 A#
b1111 B#
0C#
0D#
b00000000000000000000000000000000 E#
b00000000000000000000000000000000 F#
0G#
1H#
1I#
1J#
1K#
1L#
1M#
1N#
1O#
1P#
1Q#
1R#
1S#
1T#
1U#
1V#
1W#
1X#
1Y#
1Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
1c#
0d#
0e#
0f#
0g#
0h#
0i#
1j#
b11111 k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
b00000000000000000000000000000000 z#
b00000000000000000000000000000000 {#
b00000000000000000000000000000000 |#
b00000000000000000000000000000000 }#
b00000000000000000000000000000000 ~#
b00000000000000000000000000000000 !$
b00000000000000000000000000000000 "$
0#$
b00000000000000000000000000000000 $$
0%$
0&$
0'$
b00000000000000000000000000000000 ($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
0<$
b10000100000000000001000000001011 =$
0>$
0?$
b00000000000000000000000000000000 @$
b00010000000000000000000000000000 A$
b00000000000000000000000000000000 B$
b00000000000000000000000000000000 C$
b00000000000000000000000000000000 D$
b00000000000000000000000000000000 E$
b00000000000000000000000000000000 F$
b00000000000000000000000000000000 G$
b00000000000000000000000000000000 H$
b00000000000000000000000000000000 I$
b00000000000000000000000000000000 J$
0K$
b11111111111111111111111111111111 L$
b00010000000000000000000000000000 M$
b00000000000000000000000000000000 N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
1W$
1X$
1Y$
1Z$
1[$
1\$
1]$
1^$
1_$
1`$
1a$
1b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
1t$
0u$
b00000000000000000000000000000011 v$
0w$
0x$
b10000100000000000001000000001011 y$
1z$
0{$
b00000000000000001000010000000000 |$
0}$
b10000100000000000001000000001011 ~$
b100010 !%
b000 "%
b00 #%
b11 $%
0%%
0&%
0'%
0(%
b10000100000000000001000000001011 )%
0*%
1+%
b10000100000000000001000000001011 ,%
0-%
0.%
b00000001 /%
b00000001 0%
01%
12%
13%
#5
0S
0e
0t$
0z$
0+%
02%
03%
#10
1S
1e
b00 !!
b00000000000000000000000000000011 "!
1%!
0m"
b0000000000000000000000000000000000000000000000000000000000000001 '#
15#
b11111 A#
1t$
1z$
1+%
b00000010 /%
b00000010 0%
12%
13%
#15
0S
0e
0t$
0z$
0+%
02%
03%
#20
1S
1e
b01 ~
b00000010010000111010000000001001 "!
1(!
b00000010010000111010000000001001 q"
b00000010010000111010000000001001 r"
b0000000000000000000000000000000000000000000000000000000000000010 '#
12#
13#
b00000010010000111010000000001001 4#
05#
1c$
1t$
1u$
b00000010010000111010000000001001 v$
1z$
1+%
b00000011 /%
b00000011 0%
12%
13%
#25
0S
0e
0t$
0z$
0+%
02%
03%
#30
1S
1e
b00 ~
b00000000000000000000000000000000 "!
b00000010010000111010000000001001 #!
0%!
0(!
b00000 M!
b00000 N!
0W!
1$"
b00000000000000000000000000000010 P"
1Q"
1n"
b0000001001000011 p"
b0000000000000000000000000000000000000000000000000000000000000011 '#
b00000010010000111010000000001001 /#
02#
b00000000000000000000000000000000 4#
0j#
b00000 k#
1?$
b00000000000000000000000000000000 M$
0c$
1f$
1t$
b00000000000000000000000000000000 v$
1z$
1+%
b00000100 /%
b00000100 0%
12%
13%
#35
0S
0e
0t$
0z$
0+%
02%
03%
#40
b00000010010000111010000000001001 E
1S
b00000010010000111010000000001001 W
1e
1%!
b00000000000000001010000000001001 D!
1G!
b00000000000000000000000000000010 H!
b00000000000000000000000000000010 O!
0m!
1%"
1J"
0Q"
1R"
1o"
b00000000000000000000001001000011 r"
b0000000000000000000000000000000000000000000000000000000000000100 '#
b0000000000000000000000000000000000000000000000000000000000000001 (#
b00000000000000000000000000000010 *#
03#
15#
b00000010010000111010000000001001 7#
1<#
1=#
b00000 A#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0c#
1>$
0?$
1K$
b00000000000000000000000000000010 L$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
1t$
0u$
1z$
1+%
b00000101 /%
b00000101 0%
12%
13%
#45
0S
0e
0t$
0z$
0+%
02%
03%
#50
1S
1e
b01 ~
b00110001000000000000000000000011 "!
1(!
1E!
1Q!
b00000000000000001010000000001001 K"
0R"
1m"
0n"
0o"
b00110001000000000000000000000011 q"
b00000000000000000011000100000000 r"
b0000000000000000000000000000000000000000000000000000000000000101 '#
b00000000000000000000000000000010 )#
12#
13#
b00110001000000000000000000000011 4#
05#
b00000000000000001010000000001001 ;#
0<#
b00000000000000000000000000000001 E#
b00000000000000001010000000001001 =$
0>$
0K$
b00000000000000000000000000000000 L$
1c$
1t$
1u$
b00110001000000000000000000000011 v$
b00000000000000001010000000001001 y$
1z$
b00000000000000000000000000000000 |$
b00000000000000001010000000001001 ~$
b000010 !%
b101 "%
b01 $%
b00000000000000001010000000001001 )%
1+%
b00000000000000001010000000001001 ,%
b00000110 /%
b00000110 0%
12%
13%
#55
0S
0e
0t$
0z$
0+%
02%
03%
#60
1S
1e
b00 ~
b00000000000000000000000000000000 "!
b00000000000000000011000100000000 #!
0%!
0(!
0G!
b11111111111111111111110000000000 P"
1Q"
0m"
b00000000000000000011000100000000 q"
b0000000000000000000000000000000000000000000000000000000000000110 '#
b00000000000000000011000100000000 /#
02#
b00000000000000000000000000000000 4#
b00000000000000000000000000000001 F#
1j#
1?$
0c$
0f$
1t$
b00000000000000000000000000000000 v$
1z$
1+%
b00000111 /%
b00000111 0%
12%
13%
#65
0S
0e
0t$
0z$
0+%
02%
03%
#70
b00000000000000000011000100000000 E
1S
b00000000000000000011000100000000 W
1e
1$!
b00000000000000000011000100000000 D!
0E!
b00000000000000000000000000000100 H!
b00000000000000000000000000000000 O!
0Q!
0%"
b00100000 L"
0Q"
1R"
b0000000000000000000000000000000000000000000000000000000000000111 '#
b0000000000000000000000000000000000000000000000000000000000000010 (#
b00000000000000000000000000000100 *#
15#
b00000000000000000011000100000000 7#
1:#
b00000000000000000000000000000000 E#
1>$
0?$
1t$
1x$
1z$
1}$
1%%
1(%
1+%
1.%
b00001000 /%
b00001000 0%
12%
13%
#75
0S
0e
0t$
0z$
0+%
02%
03%
#80
