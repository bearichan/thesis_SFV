$date Tue Feb 26 19:00:16 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! \:X_26 $end
$var wire 1 " \:X_27 $end
$var wire 1 # \:X_28 $end
$var wire 1 $ \:X_29 $end
$var wire 1 % \:X_30 $end
$var wire 1 & \:X_31 $end
$var wire 1 ' resetn $end
$var wire 1 ( \:X_0 $end
$var wire 1 ) \:X_1 $end
$var wire 1 * \:X_2 $end
$var wire 1 + \:X_5 $end
$var wire 1 , \:X_6 $end
$var wire 1 - \:X_7 $end
$var wire 1 . \:X_8 $end
$var wire 1 / \:X_9 $end
$var wire 1 0 \:X_10 $end
$var wire 1 1 \:X_11 $end
$var wire 1 2 \:X_12 $end
$var wire 1 3 \:X_13 $end
$var wire 1 4 \:X_14 $end
$var wire 1 5 \:X_15 $end
$var wire 1 6 \:X_16 $end
$var wire 1 7 \:X_17 $end
$var wire 1 8 \:X_18 $end
$var wire 1 9 \:X_19 $end
$var wire 1 : \:X_20 $end
$var wire 1 ; \:X_21 $end
$var wire 1 < \:X_22 $end
$var wire 1 = \:X_23 $end
$var wire 1 > \:X_24 $end
$var wire 1 ? \:X_25 $end
$var wire 1 @ \:X_3 $end
$var wire 1 A \:X_4 $end
$var wire 1 B pcpi_valid $end
$var wire 32 C pcpi_insn [31:0] $end
$var wire 32 D pcpi_rs1 [31:0] $end
$var wire 32 E pcpi_rs2 [31:0] $end
$var wire 1 F instr_any_div_rem $end
$var reg 1 G pcpi_wr $end
$var reg 32 H pcpi_rd [31:0] $end
$var reg 1 I pcpi_wait $end
$var reg 1 J pcpi_ready $end
$var reg 1 K instr_div $end
$var reg 1 L instr_divu $end
$var reg 1 M instr_rem $end
$var reg 1 N instr_remu $end
$var reg 1 O pcpi_wait_q $end
$var wire 1 P start $end
$var reg 32 Q quotient_msk [31:0] $end
$var reg 1 R running $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 32 T pcpi_insn [31:0] $end
$var wire 32 U pcpi_rs1 [31:0] $end
$var wire 32 V pcpi_rs2 [31:0] $end
$var wire 1 W instr_any_mul $end
$var wire 1 X pcpi_wr $end
$var wire 32 Y pcpi_rd [31:0] $end
$var wire 1 Z pcpi_wait $end
$var wire 1 [ pcpi_ready $end
$var wire 1 \ instr_mul $end
$var wire 1 ] instr_mulh $end
$var wire 1 ^ instr_mulhsu $end
$var wire 1 _ instr_mulhu $end
$var reg 4 ` active [3:0] $end
$var wire 1 a pcpi_insn_valid $end
$var wire 1 b resetn $end
$var wire 1 c pcpi_valid $end
$var wire 1 d \:X_3556 $end
$var wire 1 e clk $end
$upscope $end
$var wire 1 f \:X_414 $end
$var wire 1 g \:X_415 $end
$var wire 1 h \:X_416 $end
$var wire 1 i \:X_417 $end
$var wire 1 j \:X_418 $end
$var wire 1 k \:X_419 $end
$var wire 1 l \:X_420 $end
$var wire 1 m \:X_130 $end
$var wire 1 n \:X_131 $end
$var wire 1 o \:X_132 $end
$var wire 1 p \:X_133 $end
$var wire 1 q \:X_134 $end
$var wire 1 r \:X_135 $end
$var wire 1 s \:X_136 $end
$var wire 1 t \:X_137 $end
$var wire 1 u \:X_138 $end
$var wire 1 v \:X_139 $end
$var wire 1 w \:X_140 $end
$var wire 1 x \:X_141 $end
$var wire 1 y \:X_142 $end
$var wire 1 z \:X_143 $end
$var wire 1 { \:X_144 $end
$var wire 1 | \:X_145 $end
$var wire 1 } \:X_146 $end
$var wire 1 ~ \:X_147 $end
$var wire 1 !! \:X_148 $end
$var reg 1 "! instr_rdinstr $end
$var reg 1 #! instr_rdinstrh $end
$var reg 1 $! instr_ecall_ebreak $end
$var reg 1 %! instr_getq $end
$var reg 1 &! instr_setq $end
$var reg 1 '! instr_retirq $end
$var reg 1 (! instr_maskirq $end
$var reg 1 )! instr_waitirq $end
$var reg 1 *! instr_timer $end
$var wire 1 +! instr_trap $end
$var reg 5 ,! decoded_rd [4:0] $end
$var reg 5 -! decoded_rs1 [4:0] $end
$var reg 5 .! decoded_rs2 [4:0] $end
$var reg 32 /! decoded_imm [31:0] $end
$var reg 32 0! decoded_imm_uj [31:0] $end
$var reg 1 1! decoder_trigger $end
$var reg 1 2! decoder_trigger_q $end
$var wire 1 3! \:X_357 $end
$var wire 1 4! \:X_358 $end
$var wire 1 5! \:X_359 $end
$var wire 1 6! \:X_360 $end
$var wire 1 7! \:X_361 $end
$var wire 1 8! \:X_362 $end
$var wire 1 9! \:X_363 $end
$var wire 1 :! \:X_364 $end
$var wire 1 ;! \:X_365 $end
$var wire 1 <! \:X_366 $end
$var wire 1 =! \:X_367 $end
$var wire 1 >! \:X_368 $end
$var wire 1 ?! \:X_369 $end
$var wire 1 @! \:X_370 $end
$var wire 1 A! \:X_371 $end
$var wire 1 B! \:X_372 $end
$var wire 1 C! \:X_373 $end
$var wire 1 D! \:X_374 $end
$var wire 1 E! \:X_375 $end
$var wire 1 F! resetn $end
$var reg 1 G! trap $end
$var reg 1 H! mem_valid $end
$var wire 1 I! mem_ready $end
$var wire 32 J! mem_rdata [31:0] $end
$var wire 1 K! mem_la_read $end
$var reg 1 L! pcpi_valid $end
$var wire 1 M! \:X_129 $end
$var wire 1 N! \:X_32 $end
$var wire 1 O! \:X_33 $end
$var wire 1 P! \:X_34 $end
$var wire 1 Q! \:X_35 $end
$var wire 1 R! \:X_36 $end
$var wire 1 S! \:X_37 $end
$var wire 1 T! \:X_38 $end
$var wire 1 U! \:X_39 $end
$var wire 1 V! \:X_40 $end
$var wire 1 W! \:X_41 $end
$var wire 1 X! \:X_42 $end
$var wire 1 Y! \:X_43 $end
$var wire 1 Z! \:X_44 $end
$var wire 1 [! \:X_45 $end
$var wire 1 \! \:X_46 $end
$var wire 1 ]! \:X_47 $end
$var wire 1 ^! \:X_48 $end
$var reg 1 _! decoder_pseudo_trigger $end
$var reg 1 `! decoder_pseudo_trigger_q $end
$var reg 1 a! compressed_instr $end
$var reg 8 b! cpu_state [7:0] $end
$var reg 2 c! irq_state [1:0] $end
$var reg 1 d! latched_store $end
$var reg 1 e! latched_stalu $end
$var reg 1 f! latched_branch $end
$var reg 1 g! latched_compr $end
$var reg 1 h! latched_is_lu $end
$var reg 1 i! latched_is_lh $end
$var reg 1 j! latched_is_lb $end
$var reg 5 k! latched_rd [4:0] $end
$var reg 1 l! pcpi_timeout $end
$var reg 32 m! \cpuregs[16] [31:0] $end
$var reg 32 n! \cpuregs[17] [31:0] $end
$var reg 32 o! \cpuregs[18] [31:0] $end
$var reg 32 p! \cpuregs[19] [31:0] $end
$var reg 32 q! \cpuregs[20] [31:0] $end
$var reg 32 r! \cpuregs[21] [31:0] $end
$var reg 32 s! \cpuregs[22] [31:0] $end
$var reg 32 t! \cpuregs[23] [31:0] $end
$var reg 32 u! \cpuregs[24] [31:0] $end
$var reg 32 v! \cpuregs[25] [31:0] $end
$var reg 32 w! \cpuregs[26] [31:0] $end
$var reg 32 x! \cpuregs[27] [31:0] $end
$var reg 32 y! \cpuregs[28] [31:0] $end
$var reg 32 z! \cpuregs[29] [31:0] $end
$var reg 1 {! is_slti_blt_slt $end
$var reg 1 |! is_sltiu_bltu_sltu $end
$var reg 1 }! is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 ~! is_lbu_lhu_lw $end
$var reg 1 !" is_alu_reg_imm $end
$var reg 1 "" is_alu_reg_reg $end
$var reg 1 #" is_compare $end
$var wire 1 $" is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var wire 1 %" \:X_395 $end
$var wire 1 &" \:X_396 $end
$var wire 1 '" \:X_397 $end
$var wire 1 (" \:X_398 $end
$var wire 1 )" \:X_399 $end
$var wire 1 *" \:X_400 $end
$var wire 1 +" \:X_401 $end
$var wire 1 ," \:X_402 $end
$var wire 1 -" \:X_403 $end
$var wire 1 ." \:X_404 $end
$var wire 1 /" \:X_405 $end
$var wire 1 0" \:X_406 $end
$var wire 1 1" \:X_407 $end
$var wire 1 2" \:X_408 $end
$var wire 1 3" \:X_409 $end
$var wire 1 4" \:X_410 $end
$var wire 1 5" \:X_411 $end
$var wire 1 6" \:X_412 $end
$var wire 1 7" \:X_413 $end
$var wire 1 8" \:X_225 $end
$var wire 1 9" \:X_226 $end
$var wire 1 :" \:X_227 $end
$var wire 1 ;" \:X_228 $end
$var wire 1 <" \:X_229 $end
$var wire 1 =" \:X_230 $end
$var wire 1 >" \:X_231 $end
$var wire 1 ?" \:X_232 $end
$var wire 1 @" \:X_233 $end
$var wire 1 A" \:X_234 $end
$var wire 1 B" \:X_235 $end
$var wire 1 C" \:X_236 $end
$var wire 1 D" \:X_237 $end
$var wire 1 E" \:X_238 $end
$var wire 1 F" \:X_239 $end
$var wire 1 G" \:X_240 $end
$var wire 1 H" \:X_241 $end
$var wire 1 I" \:X_242 $end
$var wire 1 J" \:X_243 $end
$var reg 32 K" \cpuregs[2] [31:0] $end
$var reg 32 L" \cpuregs[3] [31:0] $end
$var reg 32 M" \cpuregs[4] [31:0] $end
$var reg 32 N" \cpuregs[5] [31:0] $end
$var reg 32 O" \cpuregs[6] [31:0] $end
$var reg 32 P" \cpuregs[7] [31:0] $end
$var reg 32 Q" \cpuregs[8] [31:0] $end
$var reg 32 R" \cpuregs[9] [31:0] $end
$var reg 32 S" \cpuregs[10] [31:0] $end
$var reg 32 T" \cpuregs[11] [31:0] $end
$var reg 32 U" \cpuregs[12] [31:0] $end
$var reg 32 V" \cpuregs[13] [31:0] $end
$var reg 32 W" \cpuregs[14] [31:0] $end
$var reg 32 X" \cpuregs[15] [31:0] $end
$var wire 1 Y" \:X_149 $end
$var wire 1 Z" \:X_150 $end
$var wire 1 [" \:X_151 $end
$var wire 1 \" \:X_152 $end
$var wire 1 ]" \:X_153 $end
$var wire 1 ^" \:X_154 $end
$var wire 1 _" \:X_155 $end
$var wire 1 `" \:X_156 $end
$var wire 1 a" \:X_157 $end
$var wire 1 b" \:X_158 $end
$var wire 1 c" \:X_159 $end
$var wire 1 d" \:X_160 $end
$var wire 1 e" \:X_49 $end
$var wire 1 f" \:X_50 $end
$var wire 1 g" \:X_51 $end
$var wire 1 h" \:X_52 $end
$var wire 1 i" \:X_53 $end
$var wire 1 j" \:X_54 $end
$var wire 1 k" \:X_55 $end
$var wire 1 l" \:X_56 $end
$var wire 1 m" \:X_57 $end
$var wire 1 n" \:X_58 $end
$var wire 1 o" \:X_59 $end
$var wire 1 p" \:X_60 $end
$var wire 1 q" \:X_61 $end
$var wire 1 r" \:X_62 $end
$var wire 1 s" \:X_63 $end
$var wire 1 t" \:X_244 $end
$var wire 1 u" \:X_245 $end
$var wire 1 v" \:X_246 $end
$var wire 1 w" \:X_247 $end
$var wire 1 x" \:X_248 $end
$var wire 1 y" \:X_249 $end
$var wire 1 z" \:X_250 $end
$var wire 1 {" \:X_251 $end
$var wire 1 |" \:X_252 $end
$var wire 1 }" \:X_253 $end
$var wire 1 ~" \:X_254 $end
$var wire 1 !# \:X_255 $end
$var wire 1 "# \:X_256 $end
$var reg 1 ## instr_ori $end
$var reg 1 $# instr_andi $end
$var reg 1 %# instr_slli $end
$var reg 1 &# instr_srli $end
$var reg 1 '# instr_srai $end
$var reg 1 (# instr_add $end
$var reg 1 )# instr_sub $end
$var reg 1 *# instr_sll $end
$var reg 1 +# instr_slt $end
$var reg 1 ,# instr_sltu $end
$var reg 1 -# instr_xor $end
$var reg 1 .# instr_srl $end
$var reg 1 /# instr_sra $end
$var reg 1 0# instr_or $end
$var reg 1 1# instr_and $end
$var reg 1 2# instr_rdcycle $end
$var reg 1 3# instr_rdcycleh $end
$var reg 32 4# \cpuregs[30] [31:0] $end
$var reg 32 5# \cpuregs[31] [31:0] $end
$var wire 1 6# pcpi_mul_wr $end
$var wire 32 7# pcpi_mul_rd [31:0] $end
$var wire 1 8# pcpi_mul_wait $end
$var wire 1 9# pcpi_mul_ready $end
$var wire 1 :# pcpi_div_wr $end
$var wire 32 ;# pcpi_div_rd [31:0] $end
$var wire 1 <# pcpi_div_wait $end
$var wire 1 =# pcpi_div_ready $end
$var wire 1 ># pcpi_int_wr $end
$var wire 32 ?# pcpi_int_rd [31:0] $end
$var wire 1 @# pcpi_int_wait $end
$var wire 1 A# pcpi_int_ready $end
$var reg 1 B# mem_la_firstword_reg $end
$var reg 1 C# last_mem_valid $end
$var wire 1 D# mem_la_firstword $end
$var wire 32 E# next_pc [31:0] $end
$var reg 32 F# \cpuregs[0] [31:0] $end
$var reg 32 G# \cpuregs[1] [31:0] $end
$var reg 4 H# pcpi_timeout_counter [3:0] $end
$var wire 32 I# alu_shl [31:0] $end
$var wire 32 J# alu_shr [31:0] $end
$var wire 1 K# alu_eq $end
$var wire 1 L# alu_ltu $end
$var wire 1 M# alu_lts $end
$var reg 1 N# clear_prefetched_high_word_q $end
$var wire 1 O# cpuregs_write $end
$var wire 32 P# cpuregs_wrdata [31:0] $end
$var wire 32 Q# cpuregs_rs1 [31:0] $end
$var wire 32 R# cpuregs_rs2 [31:0] $end
$var reg 1 S# instr_bne $end
$var reg 1 T# instr_blt $end
$var reg 1 U# instr_bge $end
$var reg 1 V# instr_bltu $end
$var reg 1 W# instr_bgeu $end
$var reg 1 X# instr_lb $end
$var reg 1 Y# instr_lh $end
$var reg 1 Z# instr_lw $end
$var reg 1 [# instr_lbu $end
$var reg 1 \# instr_lhu $end
$var reg 1 ]# instr_sb $end
$var reg 1 ^# instr_sh $end
$var reg 1 _# instr_sw $end
$var reg 1 `# instr_addi $end
$var reg 1 a# instr_slti $end
$var reg 1 b# instr_sltiu $end
$var reg 1 c# instr_xori $end
$var reg 1 d# is_lui_auipc_jal $end
$var reg 1 e# is_lb_lh_lw_lbu_lhu $end
$var reg 1 f# is_slli_srli_srai $end
$var reg 1 g# is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 h# is_sb_sh_sw $end
$var reg 1 i# is_lui_auipc_jal_jalr_addi_add_sub $end
$var wire 1 j# \:X_466 $end
$var wire 1 k# \:X_465 $end
$var wire 1 l# \:X_464 $end
$var wire 1 m# \:X_463 $end
$var wire 1 n# \:X_462 $end
$var wire 1 o# \:X_461 $end
$var wire 1 p# \:X_486 $end
$var wire 1 q# \:X_485 $end
$var wire 1 r# \:X_484 $end
$var wire 1 s# \:X_483 $end
$var wire 1 t# \:X_482 $end
$var wire 1 u# \:X_481 $end
$var wire 1 v# \:X_480 $end
$var wire 1 w# \:X_479 $end
$var wire 1 x# \:X_478 $end
$var wire 1 y# \:X_477 $end
$var wire 1 z# \:X_476 $end
$var wire 1 {# \:X_475 $end
$var wire 1 |# \:X_474 $end
$var wire 1 }# \:X_473 $end
$var wire 1 ~# \:X_472 $end
$var wire 1 !$ \:X_471 $end
$var wire 1 "$ \:X_470 $end
$var wire 1 #$ \:X_469 $end
$var wire 1 $$ \:X_468 $end
$var wire 1 %$ \:X_467 $end
$var wire 1 &$ \:X_64 $end
$var wire 1 '$ \:X_376 $end
$var wire 1 ($ \:X_377 $end
$var wire 1 )$ \:X_378 $end
$var wire 1 *$ \:X_379 $end
$var wire 1 +$ \:X_380 $end
$var wire 1 ,$ \:X_381 $end
$var wire 1 -$ \:X_382 $end
$var wire 1 .$ \:X_383 $end
$var wire 1 /$ \:X_384 $end
$var wire 1 0$ \:X_385 $end
$var wire 1 1$ \:X_386 $end
$var wire 1 2$ \:X_387 $end
$var wire 1 3$ \:X_388 $end
$var wire 1 4$ \:X_389 $end
$var wire 1 5$ \:X_390 $end
$var wire 1 6$ \:X_391 $end
$var wire 1 7$ \:X_392 $end
$var wire 1 8$ \:X_393 $end
$var wire 1 9$ \:X_394 $end
$var wire 1 :$ \:X_492 $end
$var wire 1 ;$ \:X_491 $end
$var wire 1 <$ \:X_490 $end
$var wire 1 =$ \:X_489 $end
$var wire 1 >$ \:X_488 $end
$var wire 1 ?$ \:X_487 $end
$var reg 1 @$ do_waitirq $end
$var wire 32 A$ alu_out [31:0] $end
$var reg 32 B$ alu_out_q [31:0] $end
$var wire 1 C$ alu_out_0 $end
$var wire 32 D$ alu_add_sub [31:0] $end
$var wire 1 E$ mem_la_use_prefetched_high_word $end
$var wire 1 F$ mem_done $end
$var reg 1 G$ instr_lui $end
$var reg 1 H$ instr_auipc $end
$var reg 1 I$ instr_jal $end
$var reg 1 J$ instr_jalr $end
$var reg 1 K$ instr_beq $end
$var reg 32 L$ pcpi_insn [31:0] $end
$var wire 32 M$ pcpi_rs1 [31:0] $end
$var wire 32 N$ pcpi_rs2 [31:0] $end
$var reg 1 O$ rvfi_valid $end
$var reg 32 P$ rvfi_insn [31:0] $end
$var reg 32 Q$ q_insn_opcode [31:0] $end
$var reg 1 R$ dbg_next $end
$var wire 1 S$ launch_next_insn $end
$var reg 1 T$ dbg_valid_insn $end
$var reg 32 U$ cached_insn_opcode [31:0] $end
$var wire 1 V$ \:X_220 $end
$var wire 1 W$ \:X_221 $end
$var wire 1 X$ \:X_222 $end
$var wire 1 Y$ \:X_223 $end
$var wire 1 Z$ \:X_224 $end
$var reg 64 [$ count_cycle [63:0] $end
$var reg 64 \$ count_instr [63:0] $end
$var reg 32 ]$ reg_pc [31:0] $end
$var reg 32 ^$ reg_next_pc [31:0] $end
$var reg 32 _$ reg_op1 [31:0] $end
$var reg 32 `$ reg_op2 [31:0] $end
$var reg 32 a$ reg_out [31:0] $end
$var reg 5 b$ reg_sh [4:0] $end
$var reg 32 c$ next_insn_opcode [31:0] $end
$var wire 32 d$ dbg_insn_opcode [31:0] $end
$var reg 2 e$ mem_state [1:0] $end
$var reg 2 f$ mem_wordsize [1:0] $end
$var wire 32 g$ mem_rdata_word [31:0] $end
$var reg 32 h$ mem_rdata_q [31:0] $end
$var reg 1 i$ mem_do_prefetch $end
$var reg 1 j$ mem_do_rinst $end
$var reg 1 k$ mem_do_rdata $end
$var reg 1 l$ mem_do_wdata $end
$var wire 1 m$ mem_xfer $end
$var reg 1 n$ mem_la_secondword $end
$var reg 1 o$ prefetched_high_word $end
$var wire 1 p$ clear_prefetched_high_word $end
$var reg 16 q$ mem_16bit_buffer [15:0] $end
$var wire 32 r$ mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 s$ mem_rdata_latched [31:0] $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ reset $end
$var wire 1 v$ rvfi_valid $end
$var wire 32 w$ rvfi_insn [31:0] $end
$var wire 1 x$ mem_ready $end
$var wire 32 y$ mem_rdata [31:0] $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ spec_valid $end
$var wire 1 |$ rvfi_valid $end
$var wire 32 }$ rvfi_insn [31:0] $end
$var wire 32 ~$ insn_padding [31:0] $end
$var wire 6 !% insn_shamt [5:0] $end
$var wire 3 "% insn_funct3 [2:0] $end
$var wire 2 #% insn_funct2 [1:0] $end
$var wire 2 $% insn_opcode [1:0] $end
$upscope $end
$var wire 1 %% valid $end
$var wire 1 &% check $end
$var wire 1 '% rvfi_valid $end
$var wire 1 (% spec_valid $end
$var wire 1 )% reset $end
$var wire 32 *% rvfi_insn [31:0] $end
$var wire 1 +% clock $end
$upscope $end
$var wire 1 ,% reset $end
$var wire 1 -% rvfi_valid $end
$var wire 1 .% \:jasper_formal_reset $end
$var reg 8 /% cycle_reg [7:0] $end
$var wire 8 0% cycle [7:0] $end
$var wire 32 1% rvfi_insn [31:0] $end
$var wire 1 2% clock $end
$var wire 1 3% \:jasper_formal_clock $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
0$
0%
0&
1'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
b00000010000000000100000000110011 C
b11111111111111111111111111111110 D
b00000000000000000000000000000011 E
0F
0G
b00000000000000000000000000000000 H
0I
0J
0K
0L
0M
0N
0O
0P
b00000000000000000000000000000000 Q
0R
1S
b00000010000000000100000000110011 T
b11111111111111111111111111111110 U
b00000000000000000000000000000011 V
0W
0X
b00000000000000000000000000000000 Y
0Z
0[
0\
0]
0^
0_
b0000 `
0a
1b
0c
0d
1e
0f
0g
0h
0i
0j
1k
1l
1m
1n
1o
1p
1q
1r
1s
1t
1u
1v
1w
1x
1y
1z
1{
0|
1}
1~
1!!
0"!
1#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
b11111 ,!
b10111 -!
b11110 .!
b00000000000000000000000000000011 /!
b00000000000000000000000000000000 0!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
1F!
0G!
0H!
0I!
b00000000000000000000000000000000 J!
0K!
0L!
1M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
b01000000 b!
b00 c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
b00001 k!
0l!
b00000000000000000000000000000000 m!
b00000000000000000000000000000000 n!
b00000000000000000000000000000000 o!
b00000000000000000000000000000000 p!
b00000000000000000000000000000000 q!
b00000000000000000000000000000000 r!
b00000000000000000000000000000000 s!
b00000000000000000000000000000000 t!
b00000000000000000000000000000000 u!
b00000000000000000000000000000000 v!
b00000000000000000000000000000000 w!
b00000000000000000000000000000000 x!
b00000000000000000000000000000000 y!
b00000000000000000000000000000000 z!
0{!
0|!
0}!
0~!
0!"
1""
0#"
1$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
1G"
0H"
0I"
0J"
b00000000000000000000000000000000 K"
b00000000000000000000000000000000 L"
b00000000000000000000000000000000 M"
b00000000000000000000000000000000 N"
b00000000000000000000000000000000 O"
b00000000000000000000000000000000 P"
b00000000000000000000000000000000 Q"
b00000000000000000000000000000000 R"
b00000000000000000000000000000000 S"
b00000000000000000000000000000000 T"
b00000000000000000000000000000000 U"
b00000000000000000000000000000000 V"
b00000000000000000000000000000000 W"
b00000000000000000000000000000000 X"
1Y"
1Z"
1["
1\"
1]"
1^"
1_"
1`"
1a"
1b"
1c"
1d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
1%#
0&#
1'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
b00000000000000000000000000000000 4#
b00000000000000000000000000000000 5#
06#
b00000000000000000000000000000000 7#
08#
09#
0:#
b00000000000000000000000000000000 ;#
0<#
0=#
0>#
b00000000000000000000000000000000 ?#
0@#
0A#
0B#
0C#
0D#
b00000000000000000000000000000000 E#
b00000000000000000000000000000000 F#
b00000000000000000000000000000000 G#
b1111 H#
b11111111111111111111111111110000 I#
b11111111111111111111111111111111 J#
0K#
0L#
1M#
1N#
0O#
b11111111111111110111111111111111 P#
b00000000000000000000000000000000 Q#
b00000000000000000000000000000000 R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
1d#
0e#
0f#
0g#
0h#
1i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
0!$
0"$
0#$
0$$
0%$
0&$
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
0<$
0=$
0>$
0?$
0@$
b11111111111111111111111111111111 A$
b00000000000000000000000000000000 B$
0C$
b00000000000000000000000000000001 D$
0E$
0F$
0G$
0H$
0I$
1J$
0K$
b00000010000000000100000000110011 L$
b11111111111111111111111111111110 M$
b00000000000000000000000000000011 N$
0O$
b10000010000000000000000000001011 P$
b10000010000000000000000000001011 Q$
0R$
0S$
0T$
b00000000000000000000000000000000 U$
1V$
1W$
1X$
1Y$
1Z$
b0000000000000000000000000000000000000000000000000000000000000000 [$
b0000000000000000000000000000000000000000000000000000000000000000 \$
b00000000000000000000000000000000 ]$
b00000000000000000000000000000000 ^$
b11111111111111111111111111111110 _$
b00000000000000000000000000000011 `$
b00000000000000000000000000000000 a$
b11111 b$
b11111111111111110000000000000011 c$
b10000010000000000000000000001011 d$
b00 e$
b00 f$
b00000000000000000000000000000000 g$
b00000000100000001100000001100011 h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
b0000000000000000 q$
b00000000100000001100000001100011 r$
b00000000100000001100000001100011 s$
1t$
0u$
0v$
b10000010000000000000000000001011 w$
0x$
b00000000000000000000000000000000 y$
1z$
0{$
0|$
b10000010000000000000000000001011 }$
b00000000000000001000001000000000 ~$
b000010 !%
b000 "%
b00 #%
b11 $%
0%%
0&%
0'%
0(%
0)%
b10000010000000000000000000001011 *%
1+%
0,%
0-%
0.%
b00000001 /%
b00000001 0%
b10000010000000000000000000001011 1%
12%
13%
#5
0S
0e
0t$
0z$
0+%
02%
03%
#10
1S
1e
0k
0l
1|
b00000000000000000000000000000011 J!
1K!
b11111 k!
0G"
0N#
b11111111111111111111111111111111 P#
0d#
b11111111111111111111111111111111 B$
b0000000000000000000000000000000000000000000000000000000000000001 [$
b00000000000000010000000000000000 a$
b00000000000000000000000000000011 g$
1j$
1t$
b00000000000000000000000000000011 y$
1z$
1+%
b00000010 /%
b00000010 0%
12%
13%
#15
0S
0e
0t$
0z$
0+%
02%
03%
#20
1S
1e
0m
1H!
1I!
b00000010010000111010000000001001 J!
0K!
b10111111111111111111111111111111 P#
1F$
b0000000000000000000000000000000000000000000000000000000000000010 [$
b00000000000000000000000000000000 a$
b01 e$
b00000010010000111010000000001001 g$
1m$
b00000010010000111010000000001001 r$
b00000010010000111010000000001001 s$
1t$
1x$
b00000010010000111010000000001001 y$
1z$
1+%
b00000011 /%
b00000011 0%
12%
13%
#25
0S
0e
0t$
0z$
0+%
02%
03%
#30
1S
1e
1m
b00000 ,!
b00000 -!
b00000 .!
b00000000000000000000000000000010 0!
11!
0H!
b00000000000000000000000000000000 J!
1a!
0""
0c"
b11111111111111111111111111111101 P#
0F$
1I$
0J$
1S$
b0000000000000000000000000000000000000000000000000000000000000011 [$
b00000010010000111010000000001001 c$
b00 e$
b00000000000000000000000000000000 g$
b00000010010000111010000000001001 h$
0j$
0m$
1o$
b0000001001000011 q$
1t$
b00000000000000000000000000000000 y$
1z$
1+%
b00000100 /%
b00000100 0%
12%
13%
#35
0S
0e
0t$
0z$
0+%
02%
03%
#40
b00000010010000111010000000001001 C
1S
b00000010010000111010000000001001 T
1e
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0#!
b00000000000000000000000000000010 /!
01!
12!
0I!
1K!
0M!
1f!
1g!
b00000 k!
0$"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0d"
0%#
0'#
1D#
b00000000000000000000000000000010 E#
b00011111111111111111111111111111 J#
1O#
b00000000000000000000000000000010 P#
1d#
0i#
b00000000000000000000000000000000 A$
b00000010010000111010000000001001 L$
1R$
0S$
1T$
b0000000000000000000000000000000000000000000000000000000000000100 [$
b0000000000000000000000000000000000000000000000000000000000000001 \$
b00000000000000000000000000000010 ^$
b00000000000000001010000000001001 d$
1j$
1p$
b00000000000000000000001001000011 s$
1t$
0x$
1z$
1+%
b00000101 /%
b00000101 0%
12%
13%
#45
0S
0e
0t$
0z$
0+%
02%
03%
#50
1S
1e
02!
1H!
1I!
b00110001000000000000000000000011 J!
0K!
0f!
1B#
1N#
0O#
b00000000000000000000000000000000 P#
1i#
b00000000000000000000000000000001 A$
b00000000000000000000000000000000 B$
1F$
b00000000000000001010000000001001 P$
b00000000000000001010000000001001 Q$
0R$
b00000000000000001010000000001001 U$
b0000000000000000000000000000000000000000000000000000000000000101 [$
b00000000000000000000000000000010 ]$
b01 e$
b00110001000000000000000000000011 g$
1m$
0o$
0p$
b00110001000000000000000000000011 r$
b00000000000000000011000100000000 s$
1t$
b00000000000000001010000000001001 w$
1x$
b00110001000000000000000000000011 y$
1z$
b00000000000000001010000000001001 }$
b00000000000000000000000000000000 ~$
b101 "%
b01 $%
b00000000000000001010000000001001 *%
1+%
b00000110 /%
b00000110 0%
b00000000000000001010000000001001 1%
12%
13%
#55
0S
0e
0t$
0z$
0+%
02%
03%
#60
1S
1e
1+!
b11111111111111111111110000000000 0!
11!
0H!
b00000000000000000000000000000000 J!
0D#
0N#
b00000000000000000000000000000001 B$
0F$
0I$
1S$
b0000000000000000000000000000000000000000000000000000000000000110 [$
b00000000000000000011000100000000 c$
b00 e$
b00000000000000000000000000000000 g$
b00000000000000000011000100000000 h$
0j$
0m$
b00000000000000000011000100000000 r$
1t$
b00000000000000000000000000000000 y$
1z$
1+%
b00000111 /%
b00000111 0%
12%
13%
#65
0S
0e
0t$
0z$
0+%
02%
03%
#70
b00000000000000000011000100000000 C
1S
b00000000000000000011000100000000 T
1e
b00000000000000000000000000000000 /!
01!
12!
1K!
b00100000 b!
0B#
b00000000000000000000000000000100 E#
0d#
0i#
b00000000000000000000000000000000 A$
b00000000000000000011000100000000 L$
1O$
1R$
0S$
b0000000000000000000000000000000000000000000000000000000000000111 [$
b0000000000000000000000000000000000000000000000000000000000000010 \$
b00000000000000000000000000000100 ^$
b00000000000000000011000100000000 d$
1i$
1t$
1v$
1z$
1|$
1%%
1'%
1+%
1-%
b00001000 /%
b00001000 0%
12%
13%
#75
0S
0e
0t$
0z$
0+%
02%
03%
#80
