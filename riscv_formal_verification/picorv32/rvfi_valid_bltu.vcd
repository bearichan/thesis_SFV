$date Mon Feb 25 13:35:57 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_mul $end
$scope module mult_76 $end
$var wire 66 ! out [65:0] $end
$upscope $end
$var wire 1 " resetn $end
$var wire 1 # pcpi_valid $end
$var wire 32 $ pcpi_insn [31:0] $end
$var wire 1 % instr_any_mul $end
$var wire 1 & pcpi_wr $end
$var wire 32 ' pcpi_rd [31:0] $end
$var wire 1 ( pcpi_wait $end
$var wire 1 ) pcpi_ready $end
$var wire 1 * instr_mul $end
$var wire 1 + instr_mulh $end
$var wire 1 , instr_mulhsu $end
$var wire 1 - instr_mulhu $end
$var wire 1 . instr_any_mulh $end
$var reg 1 / shift_out $end
$var reg 4 0 active [3:0] $end
$var reg 64 1 rd [63:0] $end
$var wire 1 2 pcpi_insn_valid $end
$var wire 1 3 clk $end
$upscope $end
$scope module pcpi_div $end
$var wire 1 4 resetn $end
$var wire 1 5 pcpi_valid $end
$var wire 32 6 pcpi_insn [31:0] $end
$var wire 32 7 pcpi_rs1 [31:0] $end
$var wire 32 8 pcpi_rs2 [31:0] $end
$var wire 1 9 instr_any_div_rem $end
$var reg 1 : pcpi_wr $end
$var reg 32 ; pcpi_rd [31:0] $end
$var reg 1 < pcpi_wait $end
$var reg 1 = pcpi_ready $end
$var reg 1 > instr_div $end
$var reg 1 ? instr_divu $end
$var reg 1 @ instr_rem $end
$var reg 1 A instr_remu $end
$var reg 1 B pcpi_wait_q $end
$var wire 1 C start $end
$var reg 32 D dividend [31:0] $end
$var reg 63 E divisor [62:0] $end
$var reg 32 F quotient [31:0] $end
$var reg 32 G quotient_msk [31:0] $end
$var reg 1 H running $end
$var reg 1 I outsign $end
$var wire 1 J \:X_3 $end
$var wire 1 K \:X_4 $end
$var wire 1 L \:X_0 $end
$var wire 1 M \:X_1 $end
$var wire 1 N \:X_2 $end
$var wire 1 O \:X_5 $end
$var wire 1 P \:X_6 $end
$var wire 1 Q \:X_7 $end
$var wire 1 R \:X_8 $end
$var wire 1 S \:X_9 $end
$var wire 1 T \:X_10 $end
$var wire 1 U \:X_11 $end
$var wire 1 V \:X_12 $end
$var wire 1 W \:X_13 $end
$var wire 1 X \:X_14 $end
$var wire 1 Y \:X_15 $end
$var wire 1 Z \:X_16 $end
$var wire 1 [ \:X_17 $end
$var wire 1 \ \:X_18 $end
$var wire 1 ] \:X_19 $end
$var wire 1 ^ \:X_20 $end
$var wire 1 _ \:X_21 $end
$var wire 1 ` \:X_22 $end
$var wire 1 a \:X_23 $end
$var wire 1 b \:X_24 $end
$var wire 1 c \:X_25 $end
$var wire 1 d \:X_26 $end
$var wire 1 e \:X_27 $end
$var wire 1 f \:X_28 $end
$var wire 1 g \:X_29 $end
$var wire 1 h \:X_30 $end
$var wire 1 i \:X_31 $end
$var wire 1 j clk $end
$upscope $end
$var wire 1 k \:X_407 $end
$var wire 1 l \:X_408 $end
$var wire 1 m \:X_409 $end
$var wire 1 n \:X_410 $end
$var wire 1 o \:X_411 $end
$var wire 1 p \:X_412 $end
$var wire 1 q \:X_413 $end
$var wire 1 r \:X_414 $end
$var wire 1 s \:X_415 $end
$var wire 1 t \:X_416 $end
$var wire 1 u \:X_417 $end
$var wire 1 v \:X_418 $end
$var wire 1 w \:X_419 $end
$var wire 1 x \:X_420 $end
$var wire 1 y \:X_492 $end
$var wire 1 z \:X_491 $end
$var wire 1 { \:X_490 $end
$var wire 1 | \:X_489 $end
$var wire 1 } \:X_488 $end
$var wire 1 ~ \:X_487 $end
$var wire 1 !! \:X_486 $end
$var wire 1 "! \:X_485 $end
$var wire 1 #! \:X_484 $end
$var wire 1 $! \:X_483 $end
$var wire 1 %! \:X_482 $end
$var wire 1 &! \:X_481 $end
$var wire 1 '! \:X_480 $end
$var wire 1 (! \:X_479 $end
$var wire 1 )! \:X_478 $end
$var wire 1 *! \:X_477 $end
$var wire 1 +! \:X_476 $end
$var wire 1 ,! \:X_475 $end
$var wire 1 -! \:X_474 $end
$var wire 1 .! \:X_473 $end
$var wire 1 /! \:X_472 $end
$var wire 1 0! \:X_471 $end
$var wire 1 1! \:X_470 $end
$var wire 1 2! \:X_469 $end
$var wire 1 3! \:X_468 $end
$var wire 1 4! \:X_467 $end
$var wire 1 5! \:X_466 $end
$var wire 1 6! \:X_465 $end
$var wire 1 7! \:X_464 $end
$var wire 1 8! \:X_463 $end
$var wire 1 9! \:X_462 $end
$var wire 1 :! \:X_461 $end
$var wire 1 ;! \:X_357 $end
$var wire 1 <! \:X_358 $end
$var wire 1 =! \:X_359 $end
$var wire 1 >! \:X_360 $end
$var wire 1 ?! \:X_361 $end
$var wire 1 @! \:X_362 $end
$var wire 1 A! \:X_363 $end
$var wire 1 B! \:X_364 $end
$var wire 1 C! \:X_365 $end
$var wire 1 D! \:X_366 $end
$var wire 1 E! \:X_367 $end
$var wire 1 F! \:X_368 $end
$var wire 1 G! \:X_369 $end
$var wire 1 H! \:X_370 $end
$var wire 1 I! \:X_371 $end
$var wire 1 J! \:X_372 $end
$var wire 1 K! \:X_373 $end
$var wire 1 L! \:X_374 $end
$var wire 1 M! \:X_375 $end
$var wire 1 N! \:X_376 $end
$var wire 1 O! \:X_377 $end
$var wire 1 P! \:X_378 $end
$var wire 1 Q! \:X_379 $end
$var wire 1 R! \:X_380 $end
$var wire 1 S! \:X_381 $end
$var wire 1 T! \:X_382 $end
$var wire 1 U! \:X_383 $end
$var wire 1 V! \:X_384 $end
$var wire 1 W! \:X_385 $end
$var wire 1 X! \:X_386 $end
$var wire 1 Y! \:X_387 $end
$var wire 1 Z! \:X_388 $end
$var wire 1 [! \:X_389 $end
$var wire 1 \! \:X_390 $end
$var wire 1 ]! \:X_391 $end
$var wire 1 ^! \:X_392 $end
$var wire 1 _! \:X_393 $end
$var wire 1 `! \:X_394 $end
$var wire 1 a! \:X_395 $end
$var wire 1 b! \:X_396 $end
$var wire 1 c! \:X_397 $end
$var wire 1 d! \:X_398 $end
$var wire 1 e! \:X_399 $end
$var wire 1 f! \:X_400 $end
$var wire 1 g! \:X_401 $end
$var wire 1 h! \:X_402 $end
$var wire 1 i! \:X_403 $end
$var wire 1 j! \:X_404 $end
$var wire 1 k! \:X_405 $end
$var wire 1 l! \:X_406 $end
$var wire 1 m! pcpi_div_wr $end
$var wire 32 n! pcpi_div_rd [31:0] $end
$var wire 1 o! pcpi_div_wait $end
$var wire 1 p! pcpi_div_ready $end
$var wire 1 q! pcpi_int_wr $end
$var wire 32 r! pcpi_int_rd [31:0] $end
$var wire 1 s! pcpi_int_wait $end
$var wire 1 t! pcpi_int_ready $end
$var reg 2 u! mem_state [1:0] $end
$var reg 2 v! mem_wordsize [1:0] $end
$var wire 32 w! mem_rdata_word [31:0] $end
$var reg 32 x! mem_rdata_q [31:0] $end
$var reg 1 y! mem_do_prefetch $end
$var reg 1 z! mem_do_rinst $end
$var reg 1 {! mem_do_rdata $end
$var reg 1 |! mem_do_wdata $end
$var wire 1 }! mem_xfer $end
$var reg 1 ~! mem_la_secondword $end
$var reg 1 !" pcpi_timeout $end
$var reg 1 "" do_waitirq $end
$var wire 32 #" alu_out [31:0] $end
$var reg 32 $" alu_out_q [31:0] $end
$var wire 1 %" alu_out_0 $end
$var reg 1 &" prefetched_high_word $end
$var wire 1 '" clear_prefetched_high_word $end
$var reg 16 (" mem_16bit_buffer [15:0] $end
$var wire 32 )" mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 *" mem_rdata_latched [31:0] $end
$var wire 1 +" mem_la_use_prefetched_high_word $end
$var wire 1 ," mem_done $end
$var reg 1 -" instr_lui $end
$var reg 1 ." instr_auipc $end
$var reg 1 /" instr_jal $end
$var reg 1 0" instr_jalr $end
$var reg 1 1" instr_beq $end
$var reg 1 2" instr_bne $end
$var reg 1 3" instr_blt $end
$var reg 1 4" instr_bge $end
$var reg 1 5" instr_bltu $end
$var reg 1 6" instr_bgeu $end
$var reg 1 7" instr_lb $end
$var reg 1 8" instr_lh $end
$var reg 1 9" instr_lw $end
$var reg 1 :" instr_lbu $end
$var reg 1 ;" instr_lhu $end
$var reg 1 <" instr_sb $end
$var reg 1 =" instr_sh $end
$var reg 1 >" instr_sw $end
$var reg 1 ?" instr_addi $end
$var reg 1 @" instr_slti $end
$var reg 1 A" instr_sltiu $end
$var reg 1 B" instr_xori $end
$var wire 1 C" \:X_64 $end
$var wire 1 D" \:X_220 $end
$var wire 1 E" \:X_221 $end
$var wire 1 F" \:X_222 $end
$var wire 1 G" \:X_223 $end
$var wire 1 H" \:X_224 $end
$var wire 1 I" \:X_225 $end
$var wire 1 J" \:X_226 $end
$var wire 1 K" \:X_227 $end
$var wire 1 L" \:X_228 $end
$var wire 1 M" \:X_229 $end
$var wire 1 N" \:X_230 $end
$var wire 1 O" \:X_231 $end
$var wire 1 P" \:X_232 $end
$var wire 1 Q" \:X_233 $end
$var wire 1 R" \:X_234 $end
$var wire 1 S" \:X_235 $end
$var wire 1 T" \:X_236 $end
$var wire 1 U" \:X_237 $end
$var wire 1 V" \:X_238 $end
$var wire 1 W" \:X_239 $end
$var wire 1 X" \:X_240 $end
$var wire 1 Y" \:X_241 $end
$var wire 1 Z" \:X_242 $end
$var wire 1 [" \:X_243 $end
$var wire 1 \" \:X_244 $end
$var wire 1 ]" \:X_245 $end
$var wire 1 ^" \:X_246 $end
$var wire 1 _" \:X_247 $end
$var wire 1 `" \:X_248 $end
$var wire 1 a" \:X_249 $end
$var wire 1 b" \:X_250 $end
$var wire 1 c" \:X_251 $end
$var wire 1 d" \:X_252 $end
$var wire 1 e" \:X_253 $end
$var wire 1 f" \:X_254 $end
$var wire 1 g" \:X_255 $end
$var wire 1 h" \:X_256 $end
$var wire 1 i" \:X_32 $end
$var wire 1 j" \:X_33 $end
$var wire 1 k" \:X_34 $end
$var wire 1 l" \:X_35 $end
$var wire 1 m" \:X_36 $end
$var wire 1 n" \:X_37 $end
$var wire 1 o" \:X_38 $end
$var wire 1 p" \:X_39 $end
$var wire 1 q" \:X_40 $end
$var wire 1 r" \:X_41 $end
$var wire 1 s" \:X_42 $end
$var wire 1 t" \:X_43 $end
$var wire 1 u" \:X_44 $end
$var wire 1 v" \:X_45 $end
$var wire 1 w" \:X_46 $end
$var wire 1 x" \:X_47 $end
$var wire 1 y" \:X_48 $end
$var wire 1 z" \:X_49 $end
$var wire 1 {" \:X_50 $end
$var wire 1 |" \:X_51 $end
$var wire 1 }" \:X_52 $end
$var wire 1 ~" \:X_53 $end
$var wire 1 !# \:X_54 $end
$var wire 1 "# \:X_55 $end
$var wire 1 ## \:X_56 $end
$var wire 1 $# \:X_57 $end
$var wire 1 %# \:X_58 $end
$var wire 1 &# \:X_59 $end
$var wire 1 '# \:X_60 $end
$var wire 1 (# \:X_61 $end
$var wire 1 )# \:X_62 $end
$var wire 1 *# \:X_63 $end
$var wire 1 +# resetn $end
$var reg 1 ,# trap $end
$var reg 1 -# mem_valid $end
$var wire 1 .# mem_ready $end
$var wire 32 /# mem_rdata [31:0] $end
$var wire 1 0# mem_la_read $end
$var reg 1 1# instr_ori $end
$var reg 1 2# instr_andi $end
$var reg 1 3# instr_slli $end
$var reg 1 4# instr_srli $end
$var reg 1 5# instr_srai $end
$var reg 1 6# instr_add $end
$var reg 1 7# instr_sub $end
$var reg 1 8# instr_sll $end
$var reg 1 9# instr_slt $end
$var reg 1 :# instr_sltu $end
$var reg 1 ;# instr_xor $end
$var reg 1 <# instr_srl $end
$var reg 1 =# instr_sra $end
$var reg 1 ># instr_or $end
$var reg 1 ?# instr_and $end
$var reg 1 @# instr_rdcycle $end
$var reg 1 A# instr_rdcycleh $end
$var reg 1 B# instr_rdinstr $end
$var reg 1 C# instr_rdinstrh $end
$var reg 1 D# instr_ecall_ebreak $end
$var reg 1 E# instr_getq $end
$var reg 1 F# instr_setq $end
$var reg 1 G# instr_retirq $end
$var reg 1 H# instr_maskirq $end
$var reg 1 I# instr_waitirq $end
$var reg 1 J# instr_timer $end
$var wire 1 K# instr_trap $end
$var reg 5 L# decoded_rd [4:0] $end
$var reg 5 M# decoded_rs1 [4:0] $end
$var reg 5 N# decoded_rs2 [4:0] $end
$var reg 32 O# decoded_imm [31:0] $end
$var reg 1 P# is_lui_auipc_jal $end
$var reg 1 Q# is_lb_lh_lw_lbu_lhu $end
$var reg 1 R# is_slli_srli_srai $end
$var reg 1 S# is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 T# is_sb_sh_sw $end
$var reg 1 U# is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 V# is_slti_blt_slt $end
$var reg 1 W# is_sltiu_bltu_sltu $end
$var reg 1 X# is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 Y# is_lbu_lhu_lw $end
$var reg 1 Z# is_alu_reg_imm $end
$var reg 1 [# is_alu_reg_reg $end
$var reg 1 \# is_compare $end
$var reg 32 ]# decoded_imm_uj [31:0] $end
$var reg 1 ^# decoder_trigger $end
$var reg 1 _# decoder_trigger_q $end
$var reg 1 `# decoder_pseudo_trigger $end
$var reg 1 a# decoder_pseudo_trigger_q $end
$var reg 1 b# compressed_instr $end
$var reg 1 c# mem_la_firstword_reg $end
$var reg 1 d# last_mem_valid $end
$var wire 1 e# mem_la_firstword $end
$var wire 32 f# next_pc [31:0] $end
$var reg 32 g# \cpuregs[0] [31:0] $end
$var reg 32 h# \cpuregs[1] [31:0] $end
$var reg 32 i# \cpuregs[2] [31:0] $end
$var reg 32 j# \cpuregs[3] [31:0] $end
$var reg 32 k# \cpuregs[4] [31:0] $end
$var reg 32 l# \cpuregs[5] [31:0] $end
$var reg 32 m# \cpuregs[6] [31:0] $end
$var reg 32 n# \cpuregs[7] [31:0] $end
$var reg 32 o# \cpuregs[8] [31:0] $end
$var reg 32 p# \cpuregs[9] [31:0] $end
$var reg 32 q# \cpuregs[10] [31:0] $end
$var reg 32 r# \cpuregs[11] [31:0] $end
$var reg 32 s# \cpuregs[12] [31:0] $end
$var reg 32 t# \cpuregs[13] [31:0] $end
$var reg 32 u# \cpuregs[14] [31:0] $end
$var reg 32 v# \cpuregs[15] [31:0] $end
$var reg 32 w# \cpuregs[16] [31:0] $end
$var reg 32 x# \cpuregs[17] [31:0] $end
$var reg 32 y# \cpuregs[18] [31:0] $end
$var reg 32 z# \cpuregs[19] [31:0] $end
$var reg 32 {# \cpuregs[20] [31:0] $end
$var reg 32 |# \cpuregs[21] [31:0] $end
$var reg 32 }# \cpuregs[22] [31:0] $end
$var reg 32 ~# \cpuregs[23] [31:0] $end
$var reg 32 !$ \cpuregs[24] [31:0] $end
$var reg 32 "$ \cpuregs[25] [31:0] $end
$var reg 32 #$ \cpuregs[26] [31:0] $end
$var reg 32 $$ \cpuregs[27] [31:0] $end
$var reg 32 %$ \cpuregs[28] [31:0] $end
$var reg 32 &$ \cpuregs[29] [31:0] $end
$var reg 32 '$ \cpuregs[30] [31:0] $end
$var reg 32 ($ \cpuregs[31] [31:0] $end
$var wire 1 )$ pcpi_mul_wr $end
$var wire 32 *$ pcpi_mul_rd [31:0] $end
$var wire 1 +$ pcpi_mul_wait $end
$var wire 1 ,$ pcpi_mul_ready $end
$var reg 1 -$ pcpi_valid $end
$var reg 32 .$ pcpi_insn [31:0] $end
$var wire 32 /$ pcpi_rs1 [31:0] $end
$var wire 32 0$ pcpi_rs2 [31:0] $end
$var reg 1 1$ rvfi_valid $end
$var reg 32 2$ rvfi_insn [31:0] $end
$var reg 64 3$ count_cycle [63:0] $end
$var reg 64 4$ count_instr [63:0] $end
$var reg 32 5$ reg_pc [31:0] $end
$var reg 32 6$ reg_next_pc [31:0] $end
$var reg 32 7$ reg_op1 [31:0] $end
$var reg 32 8$ reg_op2 [31:0] $end
$var reg 32 9$ reg_out [31:0] $end
$var reg 5 :$ reg_sh [4:0] $end
$var reg 32 ;$ next_insn_opcode [31:0] $end
$var wire 32 <$ dbg_insn_opcode [31:0] $end
$var wire 1 =$ is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var reg 32 >$ q_insn_opcode [31:0] $end
$var reg 1 ?$ dbg_next $end
$var wire 1 @$ launch_next_insn $end
$var reg 1 A$ dbg_valid_insn $end
$var reg 32 B$ cached_insn_opcode [31:0] $end
$var reg 8 C$ cpu_state [7:0] $end
$var reg 2 D$ irq_state [1:0] $end
$var reg 1 E$ latched_store $end
$var reg 1 F$ latched_stalu $end
$var reg 1 G$ latched_branch $end
$var reg 1 H$ latched_compr $end
$var reg 1 I$ latched_is_lu $end
$var reg 1 J$ latched_is_lh $end
$var reg 1 K$ latched_is_lb $end
$var reg 5 L$ latched_rd [4:0] $end
$var reg 4 M$ pcpi_timeout_counter [3:0] $end
$var wire 32 N$ alu_add_sub [31:0] $end
$var wire 32 O$ alu_shl [31:0] $end
$var wire 32 P$ alu_shr [31:0] $end
$var wire 1 Q$ alu_eq $end
$var wire 1 R$ alu_ltu $end
$var wire 1 S$ alu_lts $end
$var reg 1 T$ clear_prefetched_high_word_q $end
$var wire 1 U$ cpuregs_write $end
$var wire 32 V$ cpuregs_wrdata [31:0] $end
$var wire 32 W$ cpuregs_rs1 [31:0] $end
$var wire 32 X$ cpuregs_rs2 [31:0] $end
$var wire 1 Y$ \:X_129 $end
$var wire 1 Z$ \:X_130 $end
$var wire 1 [$ \:X_131 $end
$var wire 1 \$ \:X_132 $end
$var wire 1 ]$ \:X_133 $end
$var wire 1 ^$ \:X_134 $end
$var wire 1 _$ \:X_135 $end
$var wire 1 `$ \:X_136 $end
$var wire 1 a$ \:X_137 $end
$var wire 1 b$ \:X_138 $end
$var wire 1 c$ \:X_139 $end
$var wire 1 d$ \:X_140 $end
$var wire 1 e$ \:X_141 $end
$var wire 1 f$ \:X_142 $end
$var wire 1 g$ \:X_143 $end
$var wire 1 h$ \:X_144 $end
$var wire 1 i$ \:X_145 $end
$var wire 1 j$ \:X_146 $end
$var wire 1 k$ \:X_147 $end
$var wire 1 l$ \:X_148 $end
$var wire 1 m$ \:X_149 $end
$var wire 1 n$ \:X_150 $end
$var wire 1 o$ \:X_151 $end
$var wire 1 p$ \:X_152 $end
$var wire 1 q$ \:X_153 $end
$var wire 1 r$ \:X_154 $end
$var wire 1 s$ \:X_155 $end
$var wire 1 t$ \:X_156 $end
$var wire 1 u$ \:X_157 $end
$var wire 1 v$ \:X_158 $end
$var wire 1 w$ \:X_159 $end
$var wire 1 x$ \:X_160 $end
$var wire 1 y$ clk $end
$upscope $end
$var wire 1 z$ rvfi_valid $end
$var wire 32 {$ rvfi_insn [31:0] $end
$var wire 1 |$ mem_ready $end
$var wire 32 }$ mem_rdata [31:0] $end
$var wire 1 ~$ reset $end
$var wire 1 !% clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 "% spec_valid $end
$var wire 32 #% insn_padding [31:0] $end
$var wire 3 $% insn_funct3 [2:0] $end
$var wire 7 %% insn_opcode [6:0] $end
$var wire 1 &% rvfi_valid $end
$var wire 32 '% rvfi_insn [31:0] $end
$upscope $end
$var wire 1 (% spec_valid $end
$var wire 1 )% valid $end
$var wire 1 *% rvfi_valid $end
$var wire 32 +% rvfi_insn [31:0] $end
$var wire 1 ,% reset $end
$var wire 1 -% check $end
$var wire 1 .% clock $end
$upscope $end
$var reg 8 /% cycle_reg [7:0] $end
$var wire 8 0% cycle [7:0] $end
$var wire 32 1% rvfi_insn [31:0] $end
$var wire 1 2% \:jasper_formal_reset $end
$var wire 1 3% reset $end
$var wire 1 4% rvfi_valid $end
$var wire 1 5% \:jasper_formal_clock $end
$var wire 1 6% clock $end
$upscope $end
$enddefinitions $end
#0
b000000000000000000000000000000000000000000000000000000000000000000 !
1"
0#
b00000010000000000100000000110011 $
0%
0&
b00000000000000000000000000000000 '
0(
0)
0*
0+
0,
0-
0.
0/
b0000 0
b0000000000000000000000000000000000000000000000000000000000000000 1
02
13
14
05
b00000010000000000100000000110011 6
b11111111111111111111100000011111 7
b11111111111111111111100000100000 8
09
0:
b00000000000000000000000000000000 ;
0<
0=
0>
0?
0@
0A
0B
0C
b00000000000000000000000000000000 D
b000000000000000000000000000010000000000000000000000000000000100 E
b11100000000000000000000000000001 F
b00000000000000000000000000000000 G
0H
1I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
1j
0k
1l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
b00000000000000000000000000000000 n!
0o!
0p!
0q!
b00000000000000000000000000000000 r!
0s!
0t!
b00 u!
b00 v!
b11111001111111000000000000000000 w!
b00001000000000001100000000000001 x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
b00000000000000000000000000000000 #"
b00000000000000000000000000000000 $"
0%"
0&"
0'"
b0000000000000000 ("
b00001000000000001100000000000001 )"
b00001000000000001100000000000001 *"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
1D"
1E"
1F"
1G"
1H"
0I"
1J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
1+#
0,#
0-#
0.#
b11111001111111000000000000000000 /#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
1D#
0E#
0F#
1G#
0H#
0I#
0J#
0K#
b11111 L#
b11111 M#
b01100 N#
b00000000000000000000011111100011 O#
0P#
1Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
b00000000000000000000000000000000 ]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
b00000000000000000000000000000000 f#
b00000000000000000000000000000000 g#
b00000000000000000000000000000000 h#
b00000000000000000000000000000000 i#
b00000000000000000000000000000000 j#
b00000000000000000000000000000000 k#
b00000000000000000000000000000000 l#
b00000000000000000000000000000000 m#
b00000000000000000000000000000000 n#
b00000000000000000000000000000000 o#
b00000000000000000000000000000000 p#
b00000000000000000000000000000000 q#
b00000000000000000000000000000000 r#
b00000000000000000000000000000000 s#
b00000000000000000000000000000000 t#
b00000000000000000000000000000000 u#
b00000000000000000000000000000000 v#
b00000000000000000000000000000000 w#
b00000000000000000000000000000000 x#
b00000000000000000000000000000000 y#
b00000000000000000000000000000000 z#
b00000000000000000000000000000000 {#
b00000000000000000000000000000000 |#
b00000000000000000000000000000000 }#
b00000000000000000000000000000000 ~#
b00000000000000000000000000000000 !$
b00000000000000000000000000000000 "$
b00000000000000000000000000000000 #$
b00000000000000000000000000000000 $$
b00000000000000000000000000000000 %$
b00000000000000000000000000000000 &$
b00000000000000000000000000000000 '$
b00000000000000000000000000000000 ($
0)$
b00000000000000000000000000000000 *$
0+$
0,$
0-$
b00000010000000000100000000110011 .$
b11111111111111111111100000011111 /$
b11111111111111111111100000100000 0$
01$
b11111101101111111010000010001011 2$
b0000000000000000000000000000000000000000000000000000000000000000 3$
b0000000000000000000000000000000000000000000000000000000000000000 4$
b00000000000000000000000000000000 5$
b00000000000000000000000000000000 6$
b11111111111111111111100000011111 7$
b11111111111111111111100000100000 8$
b00000000000000000000000000000000 9$
b11111 :$
b11111111111111110000000000000011 ;$
b11111101101111111010000010001011 <$
0=$
b11111101101111111010000010001011 >$
0?$
0@$
0A$
b00000000000000000000000000000000 B$
b01000000 C$
b00 D$
0E$
0F$
0G$
0H$
0I$
0J$
0K$
b00001 L$
b1111 M$
b11111111111111111111000000111111 N$
b11111111111111111111100000011111 O$
b11111111111111111111100000011111 P$
0Q$
1R$
1S$
1T$
0U$
b11111111111111111111111111111111 V$
b00000000000000000000000000000000 W$
b00000000000000000000000000000000 X$
1Y$
1Z$
1[$
1\$
1]$
1^$
1_$
1`$
1a$
1b$
1c$
1d$
1e$
1f$
1g$
1h$
1i$
1j$
1k$
1l$
1m$
1n$
1o$
1p$
1q$
1r$
1s$
1t$
1u$
1v$
1w$
1x$
1y$
0z$
b11111101101111111010000010001011 {$
0|$
b11111001111111000000000000000000 }$
0~$
1!%
0"%
b00000000000000000000000000000000 #%
b010 $%
b0001011 %%
0&%
b11111101101111111010000010001011 '%
0(%
0)%
0*%
b11111101101111111010000010001011 +%
0,%
0-%
1.%
b00000001 /%
b00000001 0%
b11111101101111111010000010001011 1%
02%
03%
04%
15%
16%
#5
03
0j
0y$
0!%
0.%
05%
06%
#10
13
b000000000000000000000000000001000000000000000000000000000000010 E
1j
0l
b00000000000000000000000000000011 w!
1z!
0J"
b00000000000000000000000000000011 /#
10#
b0000000000000000000000000000000000000000000000000000000000000001 3$
b01000000000000000000000000000000 9$
b11111 L$
0T$
1y$
b00000000000000000000000000000011 }$
1!%
1.%
b00000010 /%
b00000010 0%
15%
16%
#15
03
0j
0y$
0!%
0.%
05%
06%
#20
13
b000000000000000000000000000000100000000000000000000000000000001 E
1j
b01 u!
b01111110000000000110001001100011 w!
1}!
b01111110000000000110001001100011 )"
b01111110000000000110001001100011 *"
1,"
1-#
1.#
b01111110000000000110001001100011 /#
00#
b0000000000000000000000000000000000000000000000000000000000000010 3$
b00000000000000000000000000000000 9$
1y$
1|$
b01111110000000000110001001100011 }$
1!%
1.%
b00000011 /%
b00000011 0%
15%
16%
#25
03
0j
0y$
0!%
0.%
05%
06%
#30
13
b000000000000000000000000000000010000000000000000000000000000000 E
1j
b00 u!
b00000000000000000000000000000011 w!
b01111110000000000110001001100011 x!
0z!
0}!
0,"
0-#
b00000000000000000000000000000011 /#
0G#
1K#
b00100 L#
b00000 M#
b00000 N#
0Q#
1X#
b00000000000000000110011111100000 ]#
1^#
b0000000000000000000000000000000000000000000000000000000000000011 3$
b01111110000000000110001001100011 ;$
1@$
1y$
b00000000000000000000000000000011 }$
1!%
1.%
b00000100 /%
b00000100 0%
15%
16%
#35
03
0j
0y$
0!%
0.%
05%
06%
#40
b01111110000000000110001001100011 $
13
b01111110000000000110001001100011 6
b000000000000000000000000000000001000000000000000000000000000000 E
1j
1y!
15"
0.#
10#
0D#
0K#
b00000000000000000000011111100100 O#
0^#
1_#
b00000000000000000000000000000100 f#
b01111110000000000110001001100011 .$
b0000000000000000000000000000000000000000000000000000000000000100 3$
b0000000000000000000000000000000000000000000000000000000000000001 4$
b00000000000000000000000000000100 6$
b01111110000000000110001001100011 <$
1?$
0@$
1A$
b00100000 C$
b00100 L$
b11111111111111111111111111111001 V$
0v$
0w$
1y$
0|$
1!%
1.%
b00000101 /%
b00000101 0%
15%
16%
#45
03
0j
0y$
0!%
0.%
05%
06%
#50
13
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b000000000000000000000000000000000100000000000000000000000000000 E
1j
b01 u!
b00000000000000000000000000000000 w!
1z!
1}!
b00000000000000000000000000000000 )"
b00000000000000000000000000000000 *"
1,"
1-#
1.#
b00000000000000000000000000000000 /#
00#
1W#
1\#
0_#
b00000000000000000000000000000000 /$
b00000000000000000000000000000000 0$
b01111110000000000110001001100011 2$
b0000000000000000000000000000000000000000000000000000000000000101 3$
b00000000000000000000000000000000 7$
b00000000000000000000000000000000 8$
b00000 :$
b01111110000000000110001001100011 >$
0?$
b01111110000000000110001001100011 B$
b00001000 C$
b00000000000000000000000000000000 N$
b00000000000000000000000000000000 O$
b00000000000000000000000000000000 P$
1Q$
0R$
0S$
b00000000000000000000000000000000 V$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
0t$
0u$
0x$
1y$
b01111110000000000110001001100011 {$
1|$
b00000000000000000000000000000000 }$
1!%
b110 $%
b1100011 %%
b01111110000000000110001001100011 '%
b01111110000000000110001001100011 +%
1.%
b00000110 /%
b00000110 0%
b01111110000000000110001001100011 1%
15%
16%
#55
03
0j
0y$
0!%
0.%
05%
06%
#60
13
b000000000000000000000000000000000010000000000000000000000000000 E
1j
b00 u!
b11111111111111111111111111111111 w!
b00000000000000000000000000000000 x!
0y!
0z!
0}!
1&"
0,"
0-#
b11111111111111111111111111111111 /#
b01000 L#
b00010 M#
0X#
b00000000000000000000000000000000 ]#
1^#
1b#
b0000000000000000000000000000000000000000000000000000000000000110 3$
b00000000000000000000011111100100 9$
b11111 :$
b00000000000000000000000000000000 ;$
1@$
b01000000 C$
b00000 L$
1y$
b11111111111111111111111111111111 }$
1!%
1.%
b00000111 /%
b00000111 0%
15%
16%
#65
03
0j
0y$
0!%
0.%
05%
06%
#70
b00000000000000000000000000000000 $
13
b00000000000000000000000000000000 6
b000000000000000000000000000000000001000000000000000000000000000 E
1j
1y!
1+"
05"
1K#
b00000000000000000000000000000000 O#
0\#
0^#
1_#
1e#
b00000000000000000000000000000110 f#
b00000000000000000000000000000000 .$
11$
b0000000000000000000000000000000000000000000000000000000000000111 3$
b0000000000000000000000000000000000000000000000000000000000000010 4$
b00000000000000000000000000000100 5$
b00000000000000000000000000000110 6$
b00000000000000000000000000000000 9$
b00000000000000000000000000000000 <$
1?$
0@$
b00100000 C$
1H$
b01000 L$
1y$
1z$
1!%
1"%
1&%
1(%
1)%
1*%
1.%
b00001000 /%
b00001000 0%
14%
15%
16%
#75
03
0j
0y$
0!%
0.%
05%
06%
#80
