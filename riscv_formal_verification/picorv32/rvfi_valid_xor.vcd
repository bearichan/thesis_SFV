$date Mon Feb 25 18:50:01 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! resetn $end
$var wire 1 " pcpi_valid $end
$var wire 32 # pcpi_insn [31:0] $end
$var wire 32 $ pcpi_rs1 [31:0] $end
$var wire 32 % pcpi_rs2 [31:0] $end
$var wire 1 & instr_any_div_rem $end
$var reg 1 ' pcpi_wr $end
$var reg 32 ( pcpi_rd [31:0] $end
$var reg 1 ) pcpi_wait $end
$var reg 1 * pcpi_ready $end
$var reg 1 + instr_div $end
$var reg 1 , instr_divu $end
$var reg 1 - instr_rem $end
$var reg 1 . instr_remu $end
$var reg 1 / pcpi_wait_q $end
$var wire 1 0 start $end
$var reg 32 1 quotient_msk [31:0] $end
$var reg 1 2 running $end
$var wire 1 3 \:X_11 $end
$var wire 1 4 \:X_12 $end
$var wire 1 5 \:X_13 $end
$var wire 1 6 \:X_14 $end
$var wire 1 7 \:X_15 $end
$var wire 1 8 \:X_16 $end
$var wire 1 9 \:X_17 $end
$var wire 1 : \:X_18 $end
$var wire 1 ; \:X_19 $end
$var wire 1 < \:X_20 $end
$var wire 1 = \:X_21 $end
$var wire 1 > \:X_22 $end
$var wire 1 ? \:X_23 $end
$var wire 1 @ \:X_24 $end
$var wire 1 A \:X_25 $end
$var wire 1 B \:X_26 $end
$var wire 1 C \:X_27 $end
$var wire 1 D \:X_28 $end
$var wire 1 E \:X_29 $end
$var wire 1 F \:X_30 $end
$var wire 1 G \:X_31 $end
$var wire 1 H \:X_3 $end
$var wire 1 I \:X_4 $end
$var wire 1 J \:X_0 $end
$var wire 1 K \:X_1 $end
$var wire 1 L \:X_2 $end
$var wire 1 M \:X_5 $end
$var wire 1 N \:X_6 $end
$var wire 1 O \:X_7 $end
$var wire 1 P \:X_8 $end
$var wire 1 Q \:X_9 $end
$var wire 1 R \:X_10 $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T \:X_3556 $end
$var wire 1 U resetn $end
$var wire 1 V pcpi_valid $end
$var wire 32 W pcpi_insn [31:0] $end
$var wire 32 X pcpi_rs1 [31:0] $end
$var wire 32 Y pcpi_rs2 [31:0] $end
$var wire 1 Z pcpi_wr $end
$var wire 32 [ pcpi_rd [31:0] $end
$var wire 1 \ pcpi_wait $end
$var wire 1 ] pcpi_ready $end
$var wire 1 ^ instr_mul $end
$var wire 1 _ instr_mulh $end
$var wire 1 ` instr_mulhsu $end
$var wire 1 a instr_mulhu $end
$var wire 1 b instr_any_mul $end
$var reg 4 c active [3:0] $end
$var wire 1 d pcpi_insn_valid $end
$var wire 1 e clk $end
$upscope $end
$var reg 1 f instr_getq $end
$var reg 1 g instr_setq $end
$var reg 1 h instr_retirq $end
$var reg 1 i instr_maskirq $end
$var reg 1 j instr_waitirq $end
$var reg 1 k instr_timer $end
$var wire 1 l instr_trap $end
$var reg 5 m decoded_rd [4:0] $end
$var reg 5 n decoded_rs1 [4:0] $end
$var reg 5 o decoded_rs2 [4:0] $end
$var reg 32 p decoded_imm [31:0] $end
$var reg 1 q is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 r is_lbu_lhu_lw $end
$var reg 1 s is_alu_reg_imm $end
$var reg 1 t is_alu_reg_reg $end
$var reg 1 u is_compare $end
$var wire 1 v is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var wire 1 w resetn $end
$var reg 1 x trap $end
$var reg 1 y mem_valid $end
$var wire 1 z mem_ready $end
$var reg 1 { is_lb_lh_lw_lbu_lhu $end
$var reg 1 | is_slli_srli_srai $end
$var reg 1 } is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 ~ is_sb_sh_sw $end
$var reg 1 !! is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 "! is_slti_blt_slt $end
$var reg 1 #! is_sltiu_bltu_sltu $end
$var wire 1 $! \:X_476 $end
$var wire 1 %! \:X_475 $end
$var wire 1 &! \:X_474 $end
$var wire 1 '! \:X_473 $end
$var wire 1 (! \:X_472 $end
$var wire 1 )! \:X_471 $end
$var wire 1 *! \:X_470 $end
$var wire 1 +! \:X_469 $end
$var wire 1 ,! \:X_468 $end
$var wire 1 -! \:X_467 $end
$var wire 1 .! \:X_466 $end
$var wire 1 /! \:X_465 $end
$var wire 1 0! \:X_464 $end
$var wire 1 1! \:X_463 $end
$var wire 1 2! \:X_462 $end
$var wire 1 3! \:X_461 $end
$var wire 1 4! \:X_220 $end
$var wire 1 5! \:X_221 $end
$var wire 1 6! \:X_222 $end
$var wire 1 7! \:X_223 $end
$var wire 1 8! \:X_224 $end
$var wire 1 9! \:X_225 $end
$var wire 1 :! \:X_226 $end
$var wire 1 ;! \:X_227 $end
$var wire 1 <! \:X_228 $end
$var wire 1 =! \:X_229 $end
$var wire 1 >! \:X_230 $end
$var wire 1 ?! \:X_231 $end
$var wire 1 @! \:X_232 $end
$var wire 1 A! \:X_45 $end
$var wire 1 B! \:X_46 $end
$var wire 1 C! \:X_47 $end
$var wire 1 D! \:X_48 $end
$var wire 1 E! \:X_49 $end
$var wire 1 F! \:X_50 $end
$var wire 1 G! \:X_51 $end
$var wire 1 H! \:X_52 $end
$var wire 1 I! \:X_53 $end
$var wire 1 J! \:X_54 $end
$var wire 1 K! \:X_55 $end
$var wire 1 L! \:X_56 $end
$var wire 1 M! \:X_57 $end
$var wire 1 N! \:X_58 $end
$var wire 1 O! \:X_59 $end
$var wire 1 P! \:X_60 $end
$var wire 1 Q! \:X_61 $end
$var wire 1 R! \:X_62 $end
$var wire 1 S! \:X_63 $end
$var reg 32 T! q_insn_opcode [31:0] $end
$var reg 1 U! dbg_next $end
$var wire 1 V! launch_next_insn $end
$var reg 1 W! dbg_valid_insn $end
$var reg 32 X! cached_insn_opcode [31:0] $end
$var wire 1 Y! \:X_370 $end
$var wire 1 Z! \:X_371 $end
$var wire 1 [! \:X_372 $end
$var wire 1 \! \:X_373 $end
$var wire 1 ]! \:X_374 $end
$var wire 1 ^! \:X_375 $end
$var wire 1 _! \:X_376 $end
$var wire 1 `! \:X_377 $end
$var wire 1 a! \:X_378 $end
$var wire 1 b! \:X_379 $end
$var wire 1 c! \:X_380 $end
$var wire 1 d! \:X_381 $end
$var wire 1 e! \:X_382 $end
$var wire 1 f! \:X_383 $end
$var wire 1 g! \:X_384 $end
$var wire 1 h! \:X_385 $end
$var wire 1 i! \:X_386 $end
$var wire 1 j! \:X_387 $end
$var wire 1 k! \:X_388 $end
$var wire 1 l! \:X_389 $end
$var wire 1 m! \:X_390 $end
$var wire 1 n! \:X_391 $end
$var wire 1 o! \:X_392 $end
$var wire 1 p! \:X_393 $end
$var wire 1 q! \:X_394 $end
$var wire 1 r! mem_done $end
$var reg 1 s! instr_lui $end
$var reg 1 t! instr_auipc $end
$var reg 1 u! instr_jal $end
$var reg 1 v! instr_jalr $end
$var reg 1 w! instr_beq $end
$var reg 1 x! instr_bne $end
$var reg 1 y! instr_blt $end
$var reg 1 z! instr_bge $end
$var reg 1 {! instr_bltu $end
$var reg 1 |! instr_bgeu $end
$var reg 1 }! instr_lb $end
$var reg 1 ~! instr_lh $end
$var reg 1 !" instr_lw $end
$var reg 1 "" instr_lbu $end
$var reg 1 #" instr_lhu $end
$var reg 1 $" instr_sb $end
$var reg 1 %" instr_sh $end
$var reg 1 &" instr_sw $end
$var reg 1 '" instr_addi $end
$var reg 1 (" instr_slti $end
$var wire 1 )" cpuregs_write $end
$var wire 32 *" cpuregs_wrdata [31:0] $end
$var wire 32 +" cpuregs_rs1 [31:0] $end
$var wire 32 ," cpuregs_rs2 [31:0] $end
$var wire 1 -" \:X_32 $end
$var wire 1 ." \:X_33 $end
$var wire 1 /" \:X_34 $end
$var wire 1 0" \:X_35 $end
$var wire 1 1" \:X_36 $end
$var wire 1 2" \:X_37 $end
$var wire 1 3" \:X_38 $end
$var wire 1 4" \:X_39 $end
$var wire 1 5" \:X_40 $end
$var wire 1 6" \:X_41 $end
$var wire 1 7" \:X_42 $end
$var wire 1 8" \:X_43 $end
$var wire 1 9" \:X_44 $end
$var wire 1 :" \:X_64 $end
$var reg 1 ;" instr_sltiu $end
$var reg 1 <" instr_xori $end
$var reg 1 =" instr_ori $end
$var reg 1 >" instr_andi $end
$var reg 1 ?" instr_slli $end
$var reg 1 @" instr_srli $end
$var reg 1 A" instr_srai $end
$var reg 1 B" instr_add $end
$var reg 1 C" instr_sub $end
$var reg 1 D" instr_sll $end
$var reg 1 E" instr_slt $end
$var reg 1 F" instr_sltu $end
$var reg 1 G" instr_xor $end
$var reg 1 H" instr_srl $end
$var reg 1 I" instr_sra $end
$var reg 1 J" instr_or $end
$var reg 1 K" instr_and $end
$var reg 1 L" instr_rdcycle $end
$var reg 1 M" instr_rdcycleh $end
$var reg 1 N" instr_rdinstr $end
$var reg 1 O" instr_rdinstrh $end
$var reg 1 P" instr_ecall_ebreak $end
$var wire 1 Q" \:X_492 $end
$var wire 1 R" \:X_491 $end
$var wire 1 S" \:X_490 $end
$var wire 1 T" \:X_489 $end
$var wire 1 U" \:X_488 $end
$var wire 1 V" \:X_487 $end
$var wire 1 W" \:X_486 $end
$var wire 1 X" \:X_485 $end
$var wire 1 Y" \:X_484 $end
$var wire 1 Z" \:X_483 $end
$var wire 1 [" \:X_482 $end
$var wire 1 \" \:X_481 $end
$var wire 1 ]" \:X_480 $end
$var wire 1 ^" \:X_479 $end
$var wire 1 _" \:X_478 $end
$var wire 1 `" \:X_477 $end
$var reg 1 a" pcpi_timeout $end
$var reg 1 b" do_waitirq $end
$var wire 32 c" alu_out [31:0] $end
$var wire 1 d" \:X_357 $end
$var wire 1 e" \:X_358 $end
$var wire 1 f" \:X_359 $end
$var wire 1 g" \:X_360 $end
$var wire 1 h" \:X_361 $end
$var wire 1 i" \:X_362 $end
$var wire 1 j" \:X_363 $end
$var wire 1 k" \:X_364 $end
$var wire 1 l" \:X_365 $end
$var wire 1 m" \:X_366 $end
$var wire 1 n" \:X_367 $end
$var wire 1 o" \:X_368 $end
$var wire 1 p" \:X_369 $end
$var reg 32 q" decoded_imm_uj [31:0] $end
$var reg 1 r" decoder_trigger $end
$var reg 1 s" decoder_trigger_q $end
$var reg 1 t" decoder_pseudo_trigger $end
$var reg 1 u" decoder_pseudo_trigger_q $end
$var reg 1 v" compressed_instr $end
$var reg 1 w" is_lui_auipc_jal $end
$var wire 1 x" \:X_129 $end
$var wire 1 y" \:X_130 $end
$var wire 1 z" \:X_131 $end
$var wire 1 {" \:X_132 $end
$var wire 1 |" \:X_133 $end
$var wire 1 }" \:X_134 $end
$var wire 1 ~" \:X_135 $end
$var wire 1 !# \:X_136 $end
$var wire 1 "# \:X_137 $end
$var wire 1 ## \:X_138 $end
$var wire 1 $# \:X_139 $end
$var wire 1 %# \:X_140 $end
$var wire 1 &# \:X_141 $end
$var reg 32 '# \cpuregs[11] [31:0] $end
$var reg 32 (# \cpuregs[12] [31:0] $end
$var reg 32 )# \cpuregs[13] [31:0] $end
$var reg 32 *# \cpuregs[14] [31:0] $end
$var reg 32 +# \cpuregs[15] [31:0] $end
$var reg 32 ,# \cpuregs[16] [31:0] $end
$var reg 32 -# \cpuregs[17] [31:0] $end
$var reg 32 .# \cpuregs[18] [31:0] $end
$var reg 32 /# \cpuregs[19] [31:0] $end
$var reg 32 0# \cpuregs[20] [31:0] $end
$var reg 32 1# \cpuregs[21] [31:0] $end
$var reg 32 2# \cpuregs[22] [31:0] $end
$var reg 32 3# \cpuregs[23] [31:0] $end
$var reg 32 4# \cpuregs[24] [31:0] $end
$var reg 32 5# \cpuregs[25] [31:0] $end
$var reg 32 6# \cpuregs[26] [31:0] $end
$var reg 32 7# \cpuregs[27] [31:0] $end
$var reg 32 8# \cpuregs[28] [31:0] $end
$var reg 1 9# mem_do_prefetch $end
$var reg 1 :# mem_do_rinst $end
$var reg 1 ;# mem_do_rdata $end
$var reg 1 <# mem_do_wdata $end
$var wire 1 =# mem_xfer $end
$var reg 1 ># mem_la_secondword $end
$var wire 32 ?# alu_add_sub [31:0] $end
$var wire 32 @# alu_shl [31:0] $end
$var wire 32 A# alu_shr [31:0] $end
$var wire 1 B# alu_eq $end
$var wire 1 C# alu_ltu $end
$var wire 1 D# alu_lts $end
$var reg 1 E# clear_prefetched_high_word_q $end
$var reg 1 F# prefetched_high_word $end
$var wire 1 G# clear_prefetched_high_word $end
$var reg 16 H# mem_16bit_buffer [15:0] $end
$var wire 32 I# mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 J# mem_rdata_latched [31:0] $end
$var wire 1 K# mem_la_use_prefetched_high_word $end
$var wire 1 L# \:X_142 $end
$var wire 1 M# \:X_143 $end
$var wire 1 N# \:X_144 $end
$var wire 1 O# \:X_145 $end
$var wire 1 P# \:X_146 $end
$var wire 1 Q# \:X_147 $end
$var wire 1 R# \:X_148 $end
$var wire 1 S# \:X_149 $end
$var wire 1 T# \:X_150 $end
$var wire 1 U# \:X_151 $end
$var wire 1 V# \:X_152 $end
$var wire 1 W# \:X_153 $end
$var wire 1 X# \:X_154 $end
$var wire 1 Y# \:X_155 $end
$var wire 1 Z# \:X_156 $end
$var wire 1 [# \:X_157 $end
$var wire 1 \# \:X_158 $end
$var wire 1 ]# \:X_159 $end
$var wire 1 ^# \:X_160 $end
$var reg 32 _# \cpuregs[29] [31:0] $end
$var reg 32 `# \cpuregs[30] [31:0] $end
$var reg 32 a# \cpuregs[31] [31:0] $end
$var wire 1 b# pcpi_mul_wr $end
$var wire 32 c# pcpi_mul_rd [31:0] $end
$var wire 1 d# pcpi_mul_wait $end
$var wire 1 e# pcpi_mul_ready $end
$var wire 1 f# pcpi_div_wr $end
$var wire 32 g# pcpi_div_rd [31:0] $end
$var wire 1 h# pcpi_div_wait $end
$var wire 1 i# pcpi_div_ready $end
$var wire 1 j# pcpi_int_wr $end
$var wire 32 k# pcpi_int_rd [31:0] $end
$var wire 1 l# pcpi_int_wait $end
$var wire 1 m# pcpi_int_ready $end
$var reg 2 n# mem_state [1:0] $end
$var reg 2 o# mem_wordsize [1:0] $end
$var wire 32 p# mem_rdata_word [31:0] $end
$var reg 32 q# mem_rdata_q [31:0] $end
$var wire 32 r# mem_rdata [31:0] $end
$var wire 1 s# mem_la_read $end
$var reg 1 t# pcpi_valid $end
$var reg 32 u# pcpi_insn [31:0] $end
$var wire 32 v# pcpi_rs1 [31:0] $end
$var wire 32 w# pcpi_rs2 [31:0] $end
$var reg 1 x# rvfi_valid $end
$var reg 32 y# rvfi_insn [31:0] $end
$var wire 1 z# \:X_233 $end
$var wire 1 {# \:X_234 $end
$var wire 1 |# \:X_235 $end
$var wire 1 }# \:X_236 $end
$var wire 1 ~# \:X_237 $end
$var wire 1 !$ \:X_238 $end
$var wire 1 "$ \:X_239 $end
$var wire 1 #$ \:X_240 $end
$var wire 1 $$ \:X_241 $end
$var wire 1 %$ \:X_242 $end
$var wire 1 &$ \:X_243 $end
$var wire 1 '$ \:X_244 $end
$var wire 1 ($ \:X_245 $end
$var wire 1 )$ \:X_246 $end
$var wire 1 *$ \:X_247 $end
$var wire 1 +$ \:X_248 $end
$var wire 1 ,$ \:X_249 $end
$var wire 1 -$ \:X_250 $end
$var wire 1 .$ \:X_251 $end
$var wire 1 /$ \:X_252 $end
$var wire 1 0$ \:X_253 $end
$var wire 1 1$ \:X_254 $end
$var wire 1 2$ \:X_255 $end
$var wire 1 3$ \:X_256 $end
$var reg 1 4$ mem_la_firstword_reg $end
$var reg 1 5$ last_mem_valid $end
$var wire 1 6$ mem_la_firstword $end
$var reg 32 7$ \cpuregs[0] [31:0] $end
$var reg 32 8$ \cpuregs[1] [31:0] $end
$var reg 32 9$ \cpuregs[2] [31:0] $end
$var reg 32 :$ \cpuregs[3] [31:0] $end
$var reg 32 ;$ \cpuregs[4] [31:0] $end
$var reg 32 <$ \cpuregs[5] [31:0] $end
$var reg 32 =$ \cpuregs[6] [31:0] $end
$var reg 32 >$ \cpuregs[7] [31:0] $end
$var reg 32 ?$ \cpuregs[8] [31:0] $end
$var reg 32 @$ \cpuregs[9] [31:0] $end
$var reg 32 A$ \cpuregs[10] [31:0] $end
$var reg 8 B$ cpu_state [7:0] $end
$var reg 2 C$ irq_state [1:0] $end
$var reg 1 D$ latched_store $end
$var reg 1 E$ latched_stalu $end
$var reg 1 F$ latched_branch $end
$var reg 1 G$ latched_compr $end
$var reg 1 H$ latched_is_lu $end
$var reg 1 I$ latched_is_lh $end
$var reg 1 J$ latched_is_lb $end
$var reg 5 K$ latched_rd [4:0] $end
$var reg 4 L$ pcpi_timeout_counter [3:0] $end
$var reg 32 M$ alu_out_q [31:0] $end
$var wire 1 N$ alu_out_0 $end
$var reg 64 O$ count_cycle [63:0] $end
$var reg 64 P$ count_instr [63:0] $end
$var reg 32 Q$ reg_pc [31:0] $end
$var reg 32 R$ reg_next_pc [31:0] $end
$var reg 32 S$ reg_op1 [31:0] $end
$var reg 32 T$ reg_op2 [31:0] $end
$var reg 32 U$ reg_out [31:0] $end
$var reg 5 V$ reg_sh [4:0] $end
$var reg 32 W$ next_insn_opcode [31:0] $end
$var wire 32 X$ dbg_insn_opcode [31:0] $end
$var wire 32 Y$ next_pc [31:0] $end
$var wire 1 Z$ \:X_395 $end
$var wire 1 [$ \:X_396 $end
$var wire 1 \$ \:X_397 $end
$var wire 1 ]$ \:X_398 $end
$var wire 1 ^$ \:X_399 $end
$var wire 1 _$ \:X_400 $end
$var wire 1 `$ \:X_401 $end
$var wire 1 a$ \:X_402 $end
$var wire 1 b$ \:X_403 $end
$var wire 1 c$ \:X_404 $end
$var wire 1 d$ \:X_405 $end
$var wire 1 e$ \:X_406 $end
$var wire 1 f$ \:X_407 $end
$var wire 1 g$ \:X_408 $end
$var wire 1 h$ \:X_409 $end
$var wire 1 i$ \:X_410 $end
$var wire 1 j$ \:X_411 $end
$var wire 1 k$ \:X_412 $end
$var wire 1 l$ \:X_413 $end
$var wire 1 m$ \:X_414 $end
$var wire 1 n$ \:X_415 $end
$var wire 1 o$ \:X_416 $end
$var wire 1 p$ \:X_417 $end
$var wire 1 q$ \:X_418 $end
$var wire 1 r$ \:X_419 $end
$var wire 1 s$ \:X_420 $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ reset $end
$var wire 1 v$ rvfi_valid $end
$var wire 32 w$ rvfi_insn [31:0] $end
$var wire 1 x$ mem_ready $end
$var wire 32 y$ mem_rdata [31:0] $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 32 {$ insn_padding [31:0] $end
$var wire 7 |$ insn_funct7 [6:0] $end
$var wire 3 }$ insn_funct3 [2:0] $end
$var wire 7 ~$ insn_opcode [6:0] $end
$var wire 1 !% spec_valid $end
$var wire 1 "% rvfi_valid $end
$var wire 32 #% rvfi_insn [31:0] $end
$upscope $end
$var wire 1 $% reset $end
$var wire 1 %% check $end
$var wire 1 &% valid $end
$var wire 1 '% spec_valid $end
$var wire 1 (% rvfi_valid $end
$var wire 32 )% rvfi_insn [31:0] $end
$var wire 1 *% clock $end
$upscope $end
$var wire 1 +% rvfi_valid $end
$var wire 32 ,% rvfi_insn [31:0] $end
$var wire 1 -% reset $end
$var reg 8 .% cycle_reg [7:0] $end
$var wire 8 /% cycle [7:0] $end
$var wire 1 0% \:jasper_formal_reset $end
$var wire 1 1% clock $end
$var wire 1 2% \:jasper_formal_clock $end
$upscope $end
$enddefinitions $end
#0
1!
0"
b00000010000000000001000000110011 #
b11111111111111111111111111111110 $
b00000000000011111111111111111111 %
0&
0'
b00000000000000000000000000000000 (
0)
0*
0+
0,
0-
0.
0/
00
b00000000000000000000000000000000 1
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
1S
0T
1U
0V
b00000010000000000001000000110011 W
b11111111111111111111111111111110 X
b00000000000011111111111111111111 Y
0Z
b00000000000000000000000000000000 [
0\
0]
0^
0_
0`
0a
0b
b0000 c
0d
1e
0f
0g
0h
0i
0j
0k
0l
b11111 m
b11100 n
b11111 o
b00000000000000000000000000000011 p
0q
0r
0s
1t
0u
0v
1w
0x
0y
0z
1{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
14!
15!
16!
17!
18!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
b00000001111111111100000000000000 T!
0U!
0V!
0W!
b00000000000000000000000000000000 X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
1u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
1}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
b11111111111111111111111111111111 *"
b00000000000000000000000000000000 +"
b00000000000000000000000000000000 ,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
b00000000000000000000000000000000 c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
b00000000000000100000000000000000 q"
0r"
0s"
0t"
0u"
0v"
0w"
1x"
1y"
1z"
1{"
1|"
1}"
1~"
1!#
1"#
1##
1$#
1%#
1&#
b00000000000000000000000000000000 '#
b00000000000000000000000000000000 (#
b00000000000000000000000000000000 )#
b00000000000000000000000000000000 *#
b00000000000000000000000000000000 +#
b00000000000000000000000000000000 ,#
b00000000000000000000000000000000 -#
b00000000000000000000000000000000 .#
b00000000000000000000000000000000 /#
b00000000000000000000000000000000 0#
b00000000000000000000000000000000 1#
b00000000000000000000000000000000 2#
b00000000000000000000000000000000 3#
b00000000000000000000000000000000 4#
b00000000000000000000000000000000 5#
b00000000000000000000000000000000 6#
b00000000000000000000000000000000 7#
b00000000000000000000000000000000 8#
09#
0:#
0;#
0<#
0=#
0>#
b00000000000011111111111111111101 ?#
b00000000000000000000000000000000 @#
b00000000000000000000000000000001 A#
0B#
0C#
1D#
1E#
0F#
0G#
b0000000000000000 H#
b00000000001000001100110000000001 I#
b00000000001000001100110000000001 J#
0K#
1L#
1M#
1N#
1O#
1P#
1Q#
1R#
1S#
1T#
1U#
1V#
1W#
1X#
1Y#
1Z#
1[#
1\#
1]#
1^#
b00000000000000000000000000000000 _#
b00000000000000000000000000000000 `#
b00000000000000000000000000000000 a#
0b#
b00000000000000000000000000000000 c#
0d#
0e#
0f#
b00000000000000000000000000000000 g#
0h#
0i#
0j#
b00000000000000000000000000000000 k#
0l#
0m#
b00 n#
b10 o#
b00000000000000000000000000000000 p#
b00000000001000001100110000000001 q#
b00000000000000000000000000000011 r#
0s#
0t#
b00000010000000000001000000110011 u#
b11111111111111111111111111111110 v#
b00000000000011111111111111111111 w#
0x#
b00000001111111111100000000000000 y#
0z#
0{#
0|#
0}#
0~#
0!$
0"$
0#$
0$$
0%$
0&$
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
b00000000000000000000000000000000 7$
b00000000000000000000000000000000 8$
b00000000000000000000000000000000 9$
b00000000000000000000000000000000 :$
b00000000000000000000000000000000 ;$
b00000000000000000000000000000000 <$
b00000000000000000000000000000000 =$
b00000000000000000000000000000000 >$
b11111111111111111111111111101111 ?$
b00000000000000000000000000000000 @$
b00000000000000000000000000000000 A$
b01000000 B$
b00 C$
0D$
0E$
0F$
0G$
0H$
0I$
0J$
b00111 K$
b1111 L$
b00000000000000000000000000000000 M$
0N$
b0000000000000000000000000000000000000000000000000000000000000000 O$
b0000000000000000000000000000000000000000000000000000000000000000 P$
b00000000000000000000000000000000 Q$
b00000000000000000000000000000000 R$
b11111111111111111111111111111110 S$
b00000000000011111111111111111111 T$
b00000000000000000000000000000000 U$
b11111 V$
b11111111111111110000000000000011 W$
b00000001111111111100000000000000 X$
b00000000000000000000000000000000 Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
1t$
0u$
0v$
b00000001111111111100000000000000 w$
0x$
b00000000000000000000000000000011 y$
1z$
b00000000000000000000000000000000 {$
b0000000 |$
b100 }$
b0000000 ~$
0!%
0"%
b00000001111111111100000000000000 #%
0$%
0%%
0&%
0'%
0(%
b00000001111111111100000000000000 )%
1*%
0+%
b00000001111111111100000000000000 ,%
0-%
b00000001 .%
b00000001 /%
00%
11%
12%
#5
0S
0e
0t$
0z$
0*%
01%
02%
#10
1S
1e
1!!
b00000000000011111111111111111101 c"
1w"
1:#
0E#
b00 o#
b00000000000000000000000000000011 p#
1s#
b11111 K$
b0000000000000000000000000000000000000000000000000000000000000001 O$
1t$
1z$
1*%
b00000010 .%
b00000010 /%
11%
12%
#15
0S
0e
0t$
0z$
0*%
01%
02%
#20
1S
1e
1y
1z
1r!
1=#
b11000000000000001100000000010001 I#
b11000000000000001100000000010001 J#
b01 n#
b11000000000000001100000000010001 p#
b11000000000000001100000000010001 r#
0s#
b00000000000011111111111111111101 M$
b0000000000000000000000000000000000000000000000000000000000000010 O$
1t$
1x$
b11000000000000001100000000010001 y$
1z$
1*%
b00000011 .%
b00000011 /%
11%
12%
#25
0S
0e
0t$
0z$
0*%
01%
02%
#30
1S
1e
b00000 m
b01000 n
b00000 o
1q
0t
0y
0z
0{
1V!
0r!
0u!
b11111111111111111111111111101111 +"
b00000000000000000000000000000100 q"
1r"
1v"
0:#
0=#
1F#
b1100000000000000 H#
b00000000000000001000001000010001 I#
b00000000000000001000001000010001 J#
b00 n#
b00000000000000000000000000000000 p#
b00000000000000001000001000010001 q#
b00000000000000000000000000000000 r#
b0000000000000000000000000000000000000000000000000000000000000011 O$
b11000000000000001100000000010001 W$
1t$
0x$
b00000000000000000000000000000000 y$
1z$
1*%
b00000100 .%
b00000100 /%
11%
12%
#35
0S
0e
0t$
0z$
0*%
01%
02%
#40
b00000000000000001000001000010001 #
1S
b00000000000000001000001000010001 W
1e
b00000000000000000000000000000100 p
0!!
1U!
0V!
1W!
1w!
0}!
b11111111111111111111111111111001 *"
1Z"
b00000000000000000000000000000000 c"
0r"
1s"
0w"
19#
b00000000000000001100000000000000 J#
1K#
0\#
0]#
b00000000000000001000001000010001 u#
16$
b00100000 B$
1G$
b00000 K$
b0000000000000000000000000000000000000000000000000000000000000100 O$
b0000000000000000000000000000000000000000000000000000000000000001 P$
b00000000000000000000000000000010 R$
b00000000000000001100000000010001 X$
b00000000000000000000000000000010 Y$
1t$
1z$
1*%
b00000101 .%
b00000101 /%
11%
12%
#45
0S
0e
0t$
0z$
0*%
01%
02%
#50
b11111111111111111111111111101111 $
b00000000000000000000000000000000 %
1S
b11111111111111111111111111101111 X
b00000000000000000000000000000000 Y
1e
1u
b00000000000000001100000000010001 T!
0U!
b00000000000000001100000000010001 X!
1r!
b00000000000000000000000000000000 *"
0Z"
0s"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
1:#
1=#
b11111111111111111111111111101111 ?#
b11111111111111111111111111101111 @#
b11111111111111111111111111101111 A#
b00000000000000000000000000000000 I#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0^#
b01 n#
b11111111111111111111111111101111 v#
b00000000000000000000000000000000 w#
b00000000000000001100000000010001 y#
14$
b00001000 B$
b00000000000000000000000000000000 M$
b0000000000000000000000000000000000000000000000000000000000000101 O$
b11111111111111111111111111101111 S$
b00000000000000000000000000000000 T$
b00000 V$
1t$
b00000000000000001100000000010001 w$
1z$
b0010001 ~$
b00000000000000001100000000010001 #%
b00000000000000001100000000010001 )%
1*%
b00000000000000001100000000010001 ,%
b00000110 .%
b00000110 /%
11%
12%
#55
0S
0e
0t$
0z$
0*%
01%
02%
#60
1S
1e
b01000 o
0q
1~
1V!
0r!
b11111111111111111111111111101111 ,"
b00000000000000000000000000000000 q"
1r"
09#
0:#
0=#
b0000000000000000 H#
b00000000000000001010000000000000 I#
b00000000000000001010000000000000 J#
0K#
b00 n#
b00000000000000001010000000000000 q#
06$
b01000000 B$
b0000000000000000000000000000000000000000000000000000000000000110 O$
b00000000000000000000000000000100 U$
b11111 V$
b00000000000000001100000000000000 W$
1t$
1z$
1*%
b00000111 .%
b00000111 /%
11%
12%
#65
0S
0e
0t$
0z$
0*%
01%
02%
#70
b00000000000000001010000000000000 #
1S
b00000000000000001010000000000000 W
1e
b00000000000000000000000000000000 p
0u
1U!
0V!
0w!
1&"
0r"
1s"
19#
1s#
b00000000000000001010000000000000 u#
1x#
04$
b00100000 B$
b0000000000000000000000000000000000000000000000000000000000000111 O$
b0000000000000000000000000000000000000000000000000000000000000010 P$
b00000000000000000000000000000010 Q$
b00000000000000000000000000000100 R$
b00000000000000000000000000000000 U$
b00000000000000001100000000000000 X$
b00000000000000000000000000000100 Y$
1t$
1v$
1z$
1"%
1&%
1(%
1*%
1+%
b00001000 .%
b00001000 /%
11%
12%
#75
0S
0e
0t$
0z$
0*%
01%
02%
#80
