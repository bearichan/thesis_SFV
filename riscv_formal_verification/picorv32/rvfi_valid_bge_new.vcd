$date Mon Feb 25 13:16:13 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_mul $end
$scope module mult_76 $end
$var wire 66 ! out [65:0] $end
$upscope $end
$var wire 1 " resetn $end
$var wire 1 # pcpi_valid $end
$var wire 32 $ pcpi_insn [31:0] $end
$var wire 1 % instr_any_mul $end
$var wire 1 & pcpi_wr $end
$var wire 32 ' pcpi_rd [31:0] $end
$var wire 1 ( pcpi_wait $end
$var wire 1 ) pcpi_ready $end
$var wire 1 * instr_mul $end
$var wire 1 + instr_mulh $end
$var wire 1 , instr_mulhsu $end
$var wire 1 - instr_mulhu $end
$var wire 1 . instr_any_mulh $end
$var reg 1 / shift_out $end
$var reg 4 0 active [3:0] $end
$var reg 64 1 rd [63:0] $end
$var wire 1 2 pcpi_insn_valid $end
$var wire 1 3 clk $end
$upscope $end
$scope module pcpi_div $end
$var wire 1 4 \:X_7 $end
$var wire 1 5 \:X_8 $end
$var wire 1 6 \:X_9 $end
$var wire 1 7 \:X_10 $end
$var wire 1 8 \:X_11 $end
$var wire 1 9 \:X_12 $end
$var wire 1 : \:X_13 $end
$var wire 1 ; \:X_14 $end
$var wire 1 < \:X_15 $end
$var wire 1 = \:X_16 $end
$var wire 1 > \:X_17 $end
$var wire 1 ? \:X_18 $end
$var wire 1 @ \:X_19 $end
$var wire 1 A \:X_20 $end
$var wire 1 B \:X_21 $end
$var wire 1 C \:X_22 $end
$var wire 1 D \:X_23 $end
$var wire 1 E \:X_24 $end
$var wire 1 F \:X_25 $end
$var wire 1 G \:X_26 $end
$var wire 1 H \:X_27 $end
$var wire 1 I \:X_28 $end
$var wire 1 J \:X_29 $end
$var wire 1 K \:X_30 $end
$var wire 1 L \:X_31 $end
$var wire 1 M resetn $end
$var wire 1 N pcpi_valid $end
$var wire 32 O pcpi_insn [31:0] $end
$var wire 32 P pcpi_rs1 [31:0] $end
$var wire 32 Q pcpi_rs2 [31:0] $end
$var wire 1 R instr_any_div_rem $end
$var reg 1 S pcpi_wr $end
$var reg 32 T pcpi_rd [31:0] $end
$var reg 1 U pcpi_wait $end
$var reg 1 V pcpi_ready $end
$var reg 1 W instr_div $end
$var reg 1 X instr_divu $end
$var reg 1 Y instr_rem $end
$var reg 1 Z instr_remu $end
$var reg 1 [ pcpi_wait_q $end
$var wire 1 \ start $end
$var reg 32 ] dividend [31:0] $end
$var reg 63 ^ divisor [62:0] $end
$var reg 32 _ quotient [31:0] $end
$var reg 32 ` quotient_msk [31:0] $end
$var reg 1 a running $end
$var reg 1 b outsign $end
$var wire 1 c \:X_5 $end
$var wire 1 d \:X_6 $end
$var wire 1 e \:X_0 $end
$var wire 1 f \:X_1 $end
$var wire 1 g \:X_2 $end
$var wire 1 h \:X_3 $end
$var wire 1 i \:X_4 $end
$var wire 1 j clk $end
$upscope $end
$var wire 1 k \:X_64 $end
$var wire 1 l \:X_386 $end
$var wire 1 m \:X_387 $end
$var wire 1 n \:X_388 $end
$var wire 1 o \:X_389 $end
$var wire 1 p \:X_390 $end
$var wire 1 q \:X_391 $end
$var wire 1 r \:X_392 $end
$var wire 1 s \:X_393 $end
$var wire 1 t \:X_394 $end
$var wire 1 u \:X_395 $end
$var wire 1 v \:X_396 $end
$var wire 1 w \:X_397 $end
$var wire 1 x \:X_398 $end
$var wire 1 y \:X_399 $end
$var wire 1 z \:X_400 $end
$var wire 1 { \:X_401 $end
$var wire 1 | \:X_402 $end
$var wire 1 } \:X_403 $end
$var wire 1 ~ \:X_404 $end
$var wire 1 !! \:X_405 $end
$var wire 1 "! \:X_406 $end
$var wire 1 #! \:X_407 $end
$var wire 1 $! \:X_408 $end
$var wire 1 %! \:X_409 $end
$var wire 1 &! \:X_410 $end
$var wire 1 '! \:X_411 $end
$var wire 1 (! \:X_412 $end
$var wire 1 )! \:X_413 $end
$var wire 1 *! \:X_414 $end
$var wire 1 +! \:X_415 $end
$var wire 1 ,! \:X_416 $end
$var wire 1 -! \:X_417 $end
$var wire 1 .! \:X_418 $end
$var wire 1 /! \:X_419 $end
$var wire 1 0! \:X_420 $end
$var wire 1 1! \:X_492 $end
$var wire 1 2! \:X_491 $end
$var wire 1 3! \:X_490 $end
$var wire 1 4! \:X_489 $end
$var wire 1 5! \:X_488 $end
$var wire 1 6! \:X_487 $end
$var wire 1 7! \:X_486 $end
$var wire 1 8! \:X_485 $end
$var wire 1 9! \:X_484 $end
$var wire 1 :! \:X_483 $end
$var wire 1 ;! \:X_482 $end
$var wire 1 <! \:X_481 $end
$var wire 1 =! \:X_480 $end
$var wire 1 >! \:X_479 $end
$var wire 1 ?! \:X_478 $end
$var wire 1 @! \:X_477 $end
$var wire 1 A! \:X_130 $end
$var wire 1 B! \:X_131 $end
$var wire 1 C! \:X_132 $end
$var wire 1 D! \:X_133 $end
$var wire 1 E! \:X_134 $end
$var wire 1 F! \:X_135 $end
$var wire 1 G! \:X_136 $end
$var wire 1 H! \:X_137 $end
$var wire 1 I! \:X_138 $end
$var wire 1 J! \:X_139 $end
$var wire 1 K! \:X_140 $end
$var wire 1 L! \:X_141 $end
$var wire 1 M! \:X_142 $end
$var wire 1 N! \:X_143 $end
$var wire 1 O! \:X_144 $end
$var wire 1 P! \:X_145 $end
$var wire 1 Q! \:X_146 $end
$var wire 1 R! \:X_147 $end
$var wire 1 S! \:X_148 $end
$var wire 1 T! \:X_149 $end
$var wire 1 U! \:X_150 $end
$var wire 1 V! \:X_151 $end
$var wire 1 W! \:X_152 $end
$var wire 1 X! \:X_153 $end
$var wire 1 Y! \:X_154 $end
$var wire 1 Z! \:X_155 $end
$var wire 1 [! \:X_156 $end
$var wire 1 \! \:X_157 $end
$var wire 1 ]! \:X_158 $end
$var wire 1 ^! \:X_159 $end
$var wire 1 _! \:X_160 $end
$var wire 1 `! \:X_220 $end
$var wire 1 a! \:X_221 $end
$var wire 1 b! \:X_222 $end
$var wire 1 c! \:X_223 $end
$var wire 1 d! \:X_224 $end
$var wire 1 e! \:X_225 $end
$var wire 1 f! \:X_226 $end
$var wire 1 g! \:X_227 $end
$var wire 1 h! \:X_228 $end
$var wire 1 i! \:X_229 $end
$var wire 1 j! \:X_230 $end
$var wire 1 k! \:X_231 $end
$var wire 1 l! \:X_232 $end
$var wire 1 m! \:X_233 $end
$var wire 1 n! \:X_234 $end
$var wire 1 o! \:X_235 $end
$var wire 1 p! \:X_236 $end
$var wire 1 q! \:X_237 $end
$var wire 1 r! \:X_238 $end
$var wire 1 s! \:X_239 $end
$var wire 1 t! \:X_240 $end
$var wire 1 u! \:X_241 $end
$var wire 1 v! \:X_242 $end
$var wire 1 w! \:X_243 $end
$var wire 1 x! \:X_244 $end
$var wire 1 y! \:X_245 $end
$var wire 1 z! \:X_246 $end
$var wire 1 {! \:X_247 $end
$var wire 1 |! \:X_248 $end
$var wire 1 }! \:X_249 $end
$var wire 1 ~! \:X_250 $end
$var wire 1 !" \:X_251 $end
$var wire 1 "" \:X_252 $end
$var wire 1 #" \:X_253 $end
$var wire 1 $" \:X_254 $end
$var wire 1 %" \:X_255 $end
$var wire 1 &" \:X_256 $end
$var wire 1 '" \:X_129 $end
$var reg 1 (" latched_store $end
$var reg 1 )" latched_stalu $end
$var reg 1 *" latched_branch $end
$var reg 1 +" latched_compr $end
$var reg 1 ," latched_is_lu $end
$var reg 1 -" latched_is_lh $end
$var reg 1 ." latched_is_lb $end
$var reg 5 /" latched_rd [4:0] $end
$var reg 4 0" pcpi_timeout_counter [3:0] $end
$var wire 32 1" alu_add_sub [31:0] $end
$var wire 32 2" alu_shl [31:0] $end
$var wire 32 3" alu_shr [31:0] $end
$var wire 1 4" alu_eq $end
$var wire 1 5" alu_ltu $end
$var wire 1 6" alu_lts $end
$var reg 1 7" clear_prefetched_high_word_q $end
$var wire 1 8" cpuregs_write $end
$var wire 32 9" cpuregs_wrdata [31:0] $end
$var wire 32 :" cpuregs_rs1 [31:0] $end
$var wire 32 ;" cpuregs_rs2 [31:0] $end
$var wire 1 <" \:X_32 $end
$var wire 1 =" \:X_33 $end
$var wire 1 >" \:X_34 $end
$var wire 1 ?" \:X_35 $end
$var wire 1 @" \:X_36 $end
$var wire 1 A" \:X_37 $end
$var wire 1 B" \:X_38 $end
$var wire 1 C" \:X_39 $end
$var wire 1 D" \:X_40 $end
$var wire 1 E" \:X_41 $end
$var wire 1 F" \:X_42 $end
$var wire 1 G" \:X_43 $end
$var wire 1 H" \:X_44 $end
$var wire 1 I" \:X_45 $end
$var wire 1 J" \:X_46 $end
$var wire 1 K" \:X_47 $end
$var wire 1 L" \:X_48 $end
$var wire 1 M" \:X_49 $end
$var wire 1 N" \:X_50 $end
$var wire 1 O" \:X_51 $end
$var wire 1 P" \:X_52 $end
$var wire 1 Q" \:X_53 $end
$var wire 1 R" \:X_54 $end
$var wire 1 S" \:X_55 $end
$var wire 1 T" \:X_56 $end
$var wire 1 U" \:X_57 $end
$var wire 1 V" \:X_58 $end
$var wire 1 W" \:X_59 $end
$var wire 1 X" \:X_60 $end
$var wire 1 Y" \:X_61 $end
$var wire 1 Z" \:X_62 $end
$var wire 1 [" \:X_63 $end
$var reg 1 \" pcpi_timeout $end
$var reg 1 ]" do_waitirq $end
$var wire 32 ^" alu_out [31:0] $end
$var reg 32 _" alu_out_q [31:0] $end
$var wire 1 `" alu_out_0 $end
$var wire 1 a" clear_prefetched_high_word $end
$var reg 16 b" mem_16bit_buffer [15:0] $end
$var wire 32 c" mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 d" mem_rdata_latched [31:0] $end
$var wire 1 e" mem_la_use_prefetched_high_word $end
$var wire 1 f" mem_done $end
$var reg 1 g" instr_lui $end
$var reg 1 h" instr_auipc $end
$var reg 1 i" instr_jal $end
$var reg 1 j" instr_jalr $end
$var reg 1 k" instr_beq $end
$var reg 1 l" instr_bne $end
$var reg 1 m" instr_blt $end
$var reg 1 n" instr_bge $end
$var reg 1 o" instr_bltu $end
$var reg 1 p" instr_bgeu $end
$var reg 1 q" instr_lb $end
$var reg 1 r" instr_lh $end
$var reg 1 s" instr_lw $end
$var reg 1 t" instr_lbu $end
$var reg 1 u" instr_lhu $end
$var reg 1 v" instr_sb $end
$var reg 1 w" instr_sh $end
$var reg 1 x" instr_sw $end
$var reg 1 y" instr_addi $end
$var reg 1 z" instr_slti $end
$var reg 1 {" instr_sltiu $end
$var reg 1 |" instr_xori $end
$var reg 1 }" instr_ori $end
$var reg 1 ~" instr_andi $end
$var reg 1 !# instr_slli $end
$var reg 1 "# instr_srli $end
$var reg 1 ## instr_srai $end
$var reg 1 $# instr_add $end
$var reg 1 %# instr_sub $end
$var reg 1 &# instr_sll $end
$var reg 1 '# instr_slt $end
$var reg 1 (# instr_sltu $end
$var reg 1 )# instr_xor $end
$var reg 1 *# instr_srl $end
$var reg 1 +# instr_sra $end
$var reg 1 ,# instr_or $end
$var reg 1 -# instr_and $end
$var reg 1 .# instr_rdcycle $end
$var reg 1 /# instr_rdcycleh $end
$var reg 1 0# instr_rdinstr $end
$var reg 1 1# instr_rdinstrh $end
$var reg 1 2# instr_ecall_ebreak $end
$var reg 1 3# instr_getq $end
$var reg 1 4# instr_setq $end
$var reg 1 5# instr_retirq $end
$var reg 1 6# instr_maskirq $end
$var reg 1 7# instr_waitirq $end
$var reg 1 8# instr_timer $end
$var wire 1 9# instr_trap $end
$var reg 5 :# decoded_rd [4:0] $end
$var reg 5 ;# decoded_rs1 [4:0] $end
$var reg 5 <# decoded_rs2 [4:0] $end
$var reg 32 =# decoded_imm [31:0] $end
$var reg 1 ># is_lui_auipc_jal $end
$var reg 1 ?# is_lb_lh_lw_lbu_lhu $end
$var reg 1 @# is_slli_srli_srai $end
$var reg 1 A# is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 B# is_sb_sh_sw $end
$var reg 1 C# is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 D# is_slti_blt_slt $end
$var reg 1 E# is_sltiu_bltu_sltu $end
$var reg 1 F# is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 G# is_lbu_lhu_lw $end
$var reg 1 H# is_alu_reg_imm $end
$var reg 1 I# is_alu_reg_reg $end
$var reg 1 J# is_compare $end
$var wire 1 K# is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var reg 32 L# q_insn_opcode [31:0] $end
$var reg 1 M# dbg_next $end
$var wire 1 N# launch_next_insn $end
$var reg 1 O# dbg_valid_insn $end
$var reg 32 P# cached_insn_opcode [31:0] $end
$var reg 8 Q# cpu_state [7:0] $end
$var reg 2 R# irq_state [1:0] $end
$var wire 1 S# resetn $end
$var reg 1 T# trap $end
$var reg 1 U# mem_valid $end
$var wire 1 V# mem_ready $end
$var wire 32 W# mem_rdata [31:0] $end
$var wire 1 X# mem_la_read $end
$var reg 1 Y# pcpi_valid $end
$var reg 32 Z# pcpi_insn [31:0] $end
$var wire 32 [# pcpi_rs1 [31:0] $end
$var wire 32 \# pcpi_rs2 [31:0] $end
$var reg 1 ]# rvfi_valid $end
$var reg 32 ^# rvfi_insn [31:0] $end
$var reg 32 _# decoded_imm_uj [31:0] $end
$var reg 1 `# decoder_trigger $end
$var reg 1 a# decoder_trigger_q $end
$var reg 1 b# decoder_pseudo_trigger $end
$var reg 1 c# decoder_pseudo_trigger_q $end
$var reg 1 d# compressed_instr $end
$var reg 64 e# count_cycle [63:0] $end
$var reg 64 f# count_instr [63:0] $end
$var reg 32 g# reg_pc [31:0] $end
$var reg 32 h# reg_next_pc [31:0] $end
$var reg 32 i# reg_op1 [31:0] $end
$var reg 32 j# reg_op2 [31:0] $end
$var reg 32 k# reg_out [31:0] $end
$var reg 5 l# reg_sh [4:0] $end
$var reg 32 m# next_insn_opcode [31:0] $end
$var wire 32 n# dbg_insn_opcode [31:0] $end
$var reg 1 o# last_mem_valid $end
$var wire 1 p# mem_la_firstword $end
$var reg 1 q# prefetched_high_word $end
$var wire 32 r# next_pc [31:0] $end
$var reg 32 s# \cpuregs[0] [31:0] $end
$var reg 32 t# \cpuregs[1] [31:0] $end
$var reg 32 u# \cpuregs[2] [31:0] $end
$var reg 32 v# \cpuregs[3] [31:0] $end
$var reg 32 w# \cpuregs[4] [31:0] $end
$var reg 32 x# \cpuregs[5] [31:0] $end
$var reg 32 y# \cpuregs[6] [31:0] $end
$var reg 32 z# \cpuregs[7] [31:0] $end
$var reg 32 {# \cpuregs[8] [31:0] $end
$var reg 32 |# \cpuregs[9] [31:0] $end
$var reg 32 }# \cpuregs[10] [31:0] $end
$var reg 32 ~# \cpuregs[11] [31:0] $end
$var reg 32 !$ \cpuregs[12] [31:0] $end
$var reg 32 "$ \cpuregs[13] [31:0] $end
$var reg 32 #$ \cpuregs[14] [31:0] $end
$var reg 32 $$ \cpuregs[15] [31:0] $end
$var reg 32 %$ \cpuregs[16] [31:0] $end
$var reg 32 &$ \cpuregs[17] [31:0] $end
$var reg 32 '$ \cpuregs[18] [31:0] $end
$var reg 32 ($ \cpuregs[19] [31:0] $end
$var reg 32 )$ \cpuregs[20] [31:0] $end
$var reg 32 *$ \cpuregs[21] [31:0] $end
$var reg 32 +$ \cpuregs[22] [31:0] $end
$var reg 32 ,$ \cpuregs[23] [31:0] $end
$var reg 32 -$ \cpuregs[24] [31:0] $end
$var reg 32 .$ \cpuregs[25] [31:0] $end
$var reg 32 /$ \cpuregs[26] [31:0] $end
$var reg 32 0$ \cpuregs[27] [31:0] $end
$var reg 32 1$ \cpuregs[28] [31:0] $end
$var reg 32 2$ \cpuregs[29] [31:0] $end
$var reg 32 3$ \cpuregs[30] [31:0] $end
$var reg 32 4$ \cpuregs[31] [31:0] $end
$var wire 1 5$ pcpi_mul_wr $end
$var wire 32 6$ pcpi_mul_rd [31:0] $end
$var wire 1 7$ pcpi_mul_wait $end
$var wire 1 8$ pcpi_mul_ready $end
$var wire 1 9$ pcpi_div_wr $end
$var wire 32 :$ pcpi_div_rd [31:0] $end
$var wire 1 ;$ pcpi_div_wait $end
$var wire 1 <$ pcpi_div_ready $end
$var wire 1 =$ pcpi_int_wr $end
$var wire 32 >$ pcpi_int_rd [31:0] $end
$var wire 1 ?$ pcpi_int_wait $end
$var wire 1 @$ pcpi_int_ready $end
$var reg 2 A$ mem_state [1:0] $end
$var reg 2 B$ mem_wordsize [1:0] $end
$var wire 32 C$ mem_rdata_word [31:0] $end
$var reg 32 D$ mem_rdata_q [31:0] $end
$var reg 1 E$ mem_do_prefetch $end
$var reg 1 F$ mem_do_rinst $end
$var reg 1 G$ mem_do_rdata $end
$var reg 1 H$ mem_do_wdata $end
$var wire 1 I$ mem_xfer $end
$var reg 1 J$ mem_la_secondword $end
$var reg 1 K$ mem_la_firstword_reg $end
$var wire 1 L$ \:X_476 $end
$var wire 1 M$ \:X_475 $end
$var wire 1 N$ \:X_474 $end
$var wire 1 O$ \:X_473 $end
$var wire 1 P$ \:X_472 $end
$var wire 1 Q$ \:X_471 $end
$var wire 1 R$ \:X_470 $end
$var wire 1 S$ \:X_469 $end
$var wire 1 T$ \:X_468 $end
$var wire 1 U$ \:X_467 $end
$var wire 1 V$ \:X_466 $end
$var wire 1 W$ \:X_465 $end
$var wire 1 X$ \:X_464 $end
$var wire 1 Y$ \:X_463 $end
$var wire 1 Z$ \:X_462 $end
$var wire 1 [$ \:X_461 $end
$var wire 1 \$ \:X_357 $end
$var wire 1 ]$ \:X_358 $end
$var wire 1 ^$ \:X_359 $end
$var wire 1 _$ \:X_360 $end
$var wire 1 `$ \:X_361 $end
$var wire 1 a$ \:X_362 $end
$var wire 1 b$ \:X_363 $end
$var wire 1 c$ \:X_364 $end
$var wire 1 d$ \:X_365 $end
$var wire 1 e$ \:X_366 $end
$var wire 1 f$ \:X_367 $end
$var wire 1 g$ \:X_368 $end
$var wire 1 h$ \:X_369 $end
$var wire 1 i$ \:X_370 $end
$var wire 1 j$ \:X_371 $end
$var wire 1 k$ \:X_372 $end
$var wire 1 l$ \:X_373 $end
$var wire 1 m$ \:X_374 $end
$var wire 1 n$ \:X_375 $end
$var wire 1 o$ \:X_376 $end
$var wire 1 p$ \:X_377 $end
$var wire 1 q$ \:X_378 $end
$var wire 1 r$ \:X_379 $end
$var wire 1 s$ \:X_380 $end
$var wire 1 t$ \:X_381 $end
$var wire 1 u$ \:X_382 $end
$var wire 1 v$ \:X_383 $end
$var wire 1 w$ \:X_384 $end
$var wire 1 x$ \:X_385 $end
$var wire 1 y$ clk $end
$upscope $end
$var wire 1 z$ mem_ready $end
$var wire 32 {$ mem_rdata [31:0] $end
$var wire 1 |$ reset $end
$var wire 1 }$ rvfi_valid $end
$var wire 32 ~$ rvfi_insn [31:0] $end
$var wire 1 !% clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 "% spec_valid $end
$var wire 32 #% insn_padding [31:0] $end
$var wire 3 $% insn_funct3 [2:0] $end
$var wire 7 %% insn_opcode [6:0] $end
$var wire 1 &% rvfi_valid $end
$var wire 32 '% rvfi_insn [31:0] $end
$upscope $end
$var wire 1 (% reset $end
$var wire 32 )% rvfi_insn [31:0] $end
$var wire 1 *% spec_valid $end
$var wire 1 +% valid $end
$var wire 1 ,% check $end
$var wire 1 -% rvfi_valid $end
$var wire 1 .% clock $end
$upscope $end
$var wire 1 /% reset $end
$var wire 1 0% rvfi_valid $end
$var wire 32 1% rvfi_insn [31:0] $end
$var reg 8 2% cycle_reg [7:0] $end
$var wire 8 3% cycle [7:0] $end
$var wire 1 4% \:jasper_formal_reset $end
$var wire 1 5% clock $end
$var wire 1 6% \:jasper_formal_clock $end
$upscope $end
$enddefinitions $end
#0
15%
1/%
b00000000 3%
#5
05%
#10
15%
b00000001 2%
#15
05%
#20
15%
#25
05%
#30
b000000000000000000000000000000000000000000000000000000000000000000 !
1"
0#
b00000010000000000100000000110011 $
0%
0&
b00000000000000000000000000000000 '
0(
0)
0*
0+
0,
0-
0.
0/
b0000 0
b0000000000000000000000000000000000000000000000000000000000000000 1
02
13
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
1M
0N
b00000010000000000100000000110011 O
b11111111111111111111100000011111 P
b11111111111111111111100000100000 Q
0R
0S
b00000000000000000000000000000000 T
0U
0V
0W
0X
0Y
0Z
0[
0\
b00000000000000000000000000000000 ]
b000000000000000000000000000010000000000000000000000000000000100 ^
b11100000000000000000000000000001 _
b00000000000000000000000000000000 `
0a
1b
0c
0d
0e
0f
0g
0h
0i
1j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
1A!
1B!
1C!
1D!
1E!
1F!
1G!
1H!
1I!
1J!
1K!
1L!
1M!
1N!
1O!
1P!
1Q!
1R!
1S!
1T!
1U!
1V!
1W!
1X!
1Y!
1Z!
1[!
1\!
1]!
1^!
1_!
1`!
1a!
1b!
1c!
1d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
1'"
0("
0)"
0*"
0+"
0,"
0-"
0."
b00001 /"
b1111 0"
b11111111111111111111000000111111 1"
b11111111111111111111100000011111 2"
b11111111111111111111100000011111 3"
04"
15"
16"
17"
08"
b11111111111111111111111111111111 9"
b00000000000000000000000000000000 :"
b00000000000000000000000000000000 ;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
b00000000000000000000000000000000 ^"
b00000000000000000000000000000000 _"
0`"
0a"
b0000000000000000 b"
b00000000100100001100000000000001 c"
b00000000100100001100000000000001 d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
11#
02#
03#
04#
05#
06#
07#
08#
09#
b11111 :#
b11011 ;#
b10101 <#
b00000000000000000000011111100011 =#
1>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
1I#
0J#
1K#
b11111111101111111001100010001011 L#
0M#
0N#
0O#
b00000000000000000000000000000000 P#
b01000000 Q#
b00 R#
1S#
0T#
0U#
0V#
b00000000000000000000000000000000 W#
0X#
0Y#
b00000010000000000100000000110011 Z#
b11111111111111111111100000011111 [#
b11111111111111111111100000100000 \#
0]#
b11111111101111111001100010001011 ^#
b00000000000000000000000000000000 _#
0`#
0a#
0b#
0c#
0d#
b0000000000000000000000000000000000000000000000000000000000000000 e#
b0000000000000000000000000000000000000000000000000000000000000000 f#
b00000000000000000000000000000000 g#
b00000000000000000000000000000000 h#
b11111111111111111111100000011111 i#
b11111111111111111111100000100000 j#
b00000000000000000000000000000000 k#
b11111 l#
b11111111111111110000000000000011 m#
b11111111101111111001100010001011 n#
0o#
0p#
0q#
b00000000000000000000000000000000 r#
b00000000000000000000000000000000 s#
b00000000000000000000000000000000 t#
b00000000000000000000000000000000 u#
b00000000000000000000000000000000 v#
b00000000000000000000000000000000 w#
b00000000000000000000000000000000 x#
b00000000000000000000000000000000 y#
b00000000000000000000000000000000 z#
b11111111111111111111111111111110 {#
b00000000000000000000000000000000 |#
b00000000000000000000000000000000 }#
b00000000000000000000000000000000 ~#
b00000000000000000000000000000000 !$
b00000000000000000000000000000000 "$
b00000000000000000000000000000000 #$
b00000000000000000000000000000000 $$
b00000000000000000000000000000000 %$
b00000000000000000000000000000000 &$
b00000000000000000000000000000000 '$
b00000000000000000000000000000000 ($
b00000000000000000000000000000000 )$
b00000000000000000000000000000000 *$
b00000000000000000000000000000000 +$
b00000000000000000000000000000000 ,$
b00000000000000000000000000000000 -$
b00000000000000000000000000000000 .$
b00000000000000000000000000000000 /$
b00000000000000000000000000000000 0$
b00000000000000000000000000000000 1$
b00000000000000000000000000000000 2$
b00000000000000000000000000000000 3$
b00000000000000000000000000000000 4$
05$
b00000000000000000000000000000000 6$
07$
08$
09$
b00000000000000000000000000000000 :$
0;$
0<$
0=$
b00000000000000000000000000000000 >$
0?$
0@$
b00 A$
b10 B$
b00000000000000000000000000000000 C$
b00000000100100001100000000000001 D$
0E$
0F$
0G$
0H$
0I$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
1l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
0t$
0u$
0v$
0w$
0x$
1y$
0z$
b00000000000000000000000000000000 {$
0|$
0}$
b11111111101111111001100010001011 ~$
1!%
0"%
b00000000000000000000000000000000 #%
b001 $%
b0001011 %%
0&%
b11111111101111111001100010001011 '%
0(%
b11111111101111111001100010001011 )%
0*%
0+%
0,%
0-%
1.%
0/%
00%
b11111111101111111001100010001011 1%
b00000001 2%
b00000001 3%
04%
15%
16%
#35
03
0j
0y$
0!%
0.%
05%
06%
#40
13
b000000000000000000000000000001000000000000000000000000000000010 ^
1j
b11111 /"
07"
0>#
b00000000000000000000000000000011 W#
1X#
b0000000000000000000000000000000000000000000000000000000000000001 e#
b00 B$
b00000000000000000000000000000011 C$
1F$
1y$
b00000000000000000000000000000011 {$
1!%
1.%
b00000010 2%
b00000010 3%
15%
16%
#45
03
0j
0y$
0!%
0.%
05%
06%
#50
13
b000000000000000000000000000000100000000000000000000000000000001 ^
1j
b01111110000001000110001001100011 c"
b01111110000001000110001001100011 d"
1f"
1U#
1V#
b01111110000001000110001001100011 W#
0X#
b0000000000000000000000000000000000000000000000000000000000000010 e#
b01 A$
b01111110000001000110001001100011 C$
1I$
1y$
1z$
b01111110000001000110001001100011 {$
1!%
1.%
b00000011 2%
b00000011 3%
15%
16%
#55
03
0j
0y$
0!%
0.%
05%
06%
#60
13
b000000000000000000000000000000010000000000000000000000000000000 ^
1j
b11111111111111111111111111111110 :"
0f"
b00100 :#
b01000 ;#
b00000 <#
1F#
0I#
1N#
0U#
b00000000000000000000000000000011 W#
b00000000000001000110011111100000 _#
1`#
b0000000000000000000000000000000000000000000000000000000000000011 e#
b01111110000001000110001001100011 m#
b00 A$
b00000000000000000000000000000011 C$
b01111110000001000110001001100011 D$
0F$
0I$
0l$
1y$
b00000000000000000000000000000011 {$
1!%
1.%
b00000100 2%
b00000100 3%
15%
16%
#65
03
0j
0y$
0!%
0.%
05%
06%
#70
b01111110000001000110001001100011 $
13
b01111110000001000110001001100011 O
b000000000000000000000000000000001000000000000000000000000000000 ^
1j
0]!
0^!
b00100 /"
b11111111111111111111111111111001 9"
1o"
01#
b00000000000000000000011111100100 =#
0K#
1M#
0N#
1O#
b00100000 Q#
0V#
1X#
b01111110000001000110001001100011 Z#
0`#
1a#
b0000000000000000000000000000000000000000000000000000000000000100 e#
b0000000000000000000000000000000000000000000000000000000000000001 f#
b00000000000000000000000000000100 h#
b01111110000001000110001001100011 n#
b00000000000000000000000000000100 r#
1E$
1y$
0z$
1!%
1.%
b00000101 2%
b00000101 3%
15%
16%
#75
03
0j
0y$
0!%
0.%
05%
06%
#80
13
b11111111111111111111111111111110 P
b00000000000000000000000000000000 Q
b000000000000000000000000000000000100000000000000000000000000000 ^
1j
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0_!
0'"
b11111111111111111111111111111110 1"
b11111111111111111111111111111110 2"
b11111111111111111111111111111110 3"
05"
b00000000000000000000000000000000 9"
b00000000000000001000010001111100 c"
b00000000000000001000010001111100 d"
1f"
1E#
1J#
b01111110000001000110001001100011 L#
0M#
b01111110000001000110001001100011 P#
b00001000 Q#
1U#
1V#
b00000000000000001000010001111100 W#
0X#
b11111111111111111111111111111110 [#
b00000000000000000000000000000000 \#
b01111110000001000110001001100011 ^#
0a#
b0000000000000000000000000000000000000000000000000000000000000101 e#
b11111111111111111111111111111110 i#
b00000000000000000000000000000000 j#
b00000 l#
b01 A$
b00000000000000001000010001111100 C$
1F$
1I$
1y$
1z$
b00000000000000001000010001111100 {$
b01111110000001000110001001100011 ~$
1!%
b110 $%
b1100011 %%
b01111110000001000110001001100011 '%
b01111110000001000110001001100011 )%
1.%
b01111110000001000110001001100011 1%
b00000110 2%
b00000110 3%
15%
16%
#85
03
0j
0y$
0!%
0.%
05%
06%
#90
13
b000000000000000000000000000000000010000000000000000000000000000 ^
1j
b00000 /"
b00000000000000000000000000000000 :"
0f"
b00000 :#
b00000 ;#
0F#
1N#
b01000000 Q#
0U#
b11111111111111111111111111111111 W#
b00000000000000000000001010101110 _#
1`#
1d#
b0000000000000000000000000000000000000000000000000000000000000110 e#
b00000000000000000000011111100100 k#
b11111 l#
b00000000000000001000010001111100 m#
1q#
b00 A$
b11111111111111111111111111111111 C$
b00000000000000001000010001111100 D$
0E$
0F$
0I$
1y$
b11111111111111111111111111111111 {$
1!%
1.%
b00000111 2%
b00000111 3%
15%
16%
#95
03
0j
0y$
0!%
0.%
05%
06%
#100
b00000000000000001000010001111100 $
13
b00000000000000001000010001111100 O
b000000000000000000000000000000000001000000000000000000000000000 ^
1j
1+"
b00000000000000000000000000000000 d"
1e"
0o"
19#
b00000000000000000000000000000000 =#
0J#
1M#
0N#
b00100000 Q#
b00000000000000001000010001111100 Z#
1]#
0`#
1a#
b0000000000000000000000000000000000000000000000000000000000000111 e#
b0000000000000000000000000000000000000000000000000000000000000010 f#
b00000000000000000000000000000100 g#
b00000000000000000000000000000110 h#
b00000000000000000000000000000000 k#
b00000000000000001000010001111100 n#
1p#
b00000000000000000000000000000110 r#
1E$
1y$
1}$
1!%
1&%
1+%
1-%
1.%
10%
b00001000 2%
b00001000 3%
15%
16%
#105
03
0j
0y$
0!%
0.%
05%
06%
#110
