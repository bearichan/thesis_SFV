$date Tue Feb 26 14:14:14 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! pcpi_valid $end
$var wire 32 " pcpi_insn [31:0] $end
$var wire 32 # pcpi_rs1 [31:0] $end
$var wire 32 $ pcpi_rs2 [31:0] $end
$var wire 1 % instr_any_div_rem $end
$var reg 1 & pcpi_wr $end
$var reg 32 ' pcpi_rd [31:0] $end
$var reg 1 ( pcpi_wait $end
$var reg 1 ) pcpi_ready $end
$var reg 1 * instr_div $end
$var reg 1 + instr_divu $end
$var reg 1 , instr_rem $end
$var reg 1 - instr_remu $end
$var reg 1 . pcpi_wait_q $end
$var wire 1 / start $end
$var reg 32 0 quotient_msk [31:0] $end
$var reg 1 1 running $end
$var wire 1 2 \:X_7 $end
$var wire 1 3 \:X_8 $end
$var wire 1 4 \:X_9 $end
$var wire 1 5 \:X_10 $end
$var wire 1 6 \:X_11 $end
$var wire 1 7 \:X_12 $end
$var wire 1 8 \:X_13 $end
$var wire 1 9 \:X_14 $end
$var wire 1 : \:X_15 $end
$var wire 1 ; \:X_16 $end
$var wire 1 < \:X_17 $end
$var wire 1 = \:X_18 $end
$var wire 1 > \:X_19 $end
$var wire 1 ? \:X_20 $end
$var wire 1 @ \:X_21 $end
$var wire 1 A \:X_22 $end
$var wire 1 B \:X_23 $end
$var wire 1 C \:X_24 $end
$var wire 1 D \:X_25 $end
$var wire 1 E \:X_26 $end
$var wire 1 F \:X_27 $end
$var wire 1 G \:X_28 $end
$var wire 1 H \:X_29 $end
$var wire 1 I \:X_30 $end
$var wire 1 J \:X_31 $end
$var wire 1 K resetn $end
$var wire 1 L \:X_5 $end
$var wire 1 M \:X_6 $end
$var wire 1 N \:X_0 $end
$var wire 1 O \:X_1 $end
$var wire 1 P \:X_2 $end
$var wire 1 Q \:X_3 $end
$var wire 1 R \:X_4 $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T resetn $end
$var wire 1 U pcpi_valid $end
$var wire 32 V pcpi_insn [31:0] $end
$var wire 32 W pcpi_rs1 [31:0] $end
$var wire 32 X pcpi_rs2 [31:0] $end
$var wire 1 Y instr_any_mul $end
$var wire 1 Z pcpi_wr $end
$var wire 32 [ pcpi_rd [31:0] $end
$var wire 1 \ \:X_3556 $end
$var wire 1 ] pcpi_wait $end
$var wire 1 ^ pcpi_ready $end
$var wire 1 _ instr_mul $end
$var wire 1 ` instr_mulh $end
$var wire 1 a instr_mulhsu $end
$var wire 1 b instr_mulhu $end
$var reg 4 c active [3:0] $end
$var wire 1 d pcpi_insn_valid $end
$var wire 1 e clk $end
$upscope $end
$var reg 32 f \cpuregs[26] [31:0] $end
$var reg 32 g \cpuregs[27] [31:0] $end
$var reg 32 h \cpuregs[28] [31:0] $end
$var reg 32 i \cpuregs[29] [31:0] $end
$var reg 32 j \cpuregs[30] [31:0] $end
$var reg 32 k \cpuregs[31] [31:0] $end
$var wire 1 l pcpi_mul_wr $end
$var wire 32 m pcpi_mul_rd [31:0] $end
$var wire 1 n pcpi_mul_wait $end
$var wire 1 o pcpi_mul_ready $end
$var wire 1 p pcpi_div_wr $end
$var wire 32 q pcpi_div_rd [31:0] $end
$var wire 1 r pcpi_div_wait $end
$var wire 1 s pcpi_div_ready $end
$var wire 1 t pcpi_int_wr $end
$var reg 1 u is_alu_reg_imm $end
$var reg 1 v is_alu_reg_reg $end
$var reg 1 w is_compare $end
$var wire 1 x is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var reg 32 y q_insn_opcode [31:0] $end
$var wire 1 z \:X_57 $end
$var wire 1 { \:X_58 $end
$var wire 1 | \:X_59 $end
$var wire 1 } \:X_60 $end
$var wire 1 ~ \:X_61 $end
$var wire 1 !! \:X_62 $end
$var wire 1 "! \:X_63 $end
$var wire 1 #! \:X_492 $end
$var wire 1 $! \:X_491 $end
$var reg 32 %! \cpuregs[0] [31:0] $end
$var reg 32 &! \cpuregs[1] [31:0] $end
$var reg 32 '! \cpuregs[2] [31:0] $end
$var reg 32 (! \cpuregs[3] [31:0] $end
$var reg 32 )! \cpuregs[4] [31:0] $end
$var reg 32 *! \cpuregs[5] [31:0] $end
$var reg 32 +! \cpuregs[6] [31:0] $end
$var reg 32 ,! \cpuregs[7] [31:0] $end
$var reg 32 -! \cpuregs[8] [31:0] $end
$var reg 32 .! \cpuregs[9] [31:0] $end
$var reg 32 /! \cpuregs[10] [31:0] $end
$var wire 1 0! \:X_129 $end
$var wire 1 1! \:X_130 $end
$var wire 1 2! \:X_131 $end
$var wire 1 3! \:X_132 $end
$var wire 1 4! \:X_133 $end
$var wire 1 5! \:X_134 $end
$var wire 1 6! \:X_135 $end
$var wire 1 7! \:X_136 $end
$var wire 1 8! \:X_137 $end
$var wire 1 9! \:X_138 $end
$var wire 1 :! \:X_139 $end
$var wire 1 ;! \:X_140 $end
$var wire 1 <! \:X_141 $end
$var wire 1 =! \:X_142 $end
$var wire 1 >! \:X_143 $end
$var wire 1 ?! \:X_144 $end
$var wire 1 @! \:X_145 $end
$var wire 1 A! \:X_248 $end
$var wire 1 B! \:X_249 $end
$var wire 1 C! \:X_250 $end
$var wire 1 D! \:X_251 $end
$var wire 1 E! \:X_252 $end
$var wire 1 F! \:X_253 $end
$var wire 1 G! \:X_254 $end
$var wire 1 H! \:X_255 $end
$var wire 1 I! \:X_256 $end
$var reg 1 J! latched_store $end
$var reg 1 K! latched_stalu $end
$var reg 1 L! latched_branch $end
$var reg 1 M! latched_compr $end
$var reg 1 N! latched_is_lu $end
$var reg 1 O! latched_is_lh $end
$var reg 1 P! latched_is_lb $end
$var reg 5 Q! latched_rd [4:0] $end
$var reg 4 R! pcpi_timeout_counter [3:0] $end
$var reg 1 S! pcpi_timeout $end
$var reg 1 T! do_waitirq $end
$var wire 32 U! alu_out [31:0] $end
$var reg 32 V! alu_out_q [31:0] $end
$var reg 1 W! dbg_next $end
$var wire 1 X! launch_next_insn $end
$var reg 1 Y! dbg_valid_insn $end
$var reg 32 Z! cached_insn_opcode [31:0] $end
$var reg 8 [! cpu_state [7:0] $end
$var reg 2 \! irq_state [1:0] $end
$var reg 1 ]! is_sb_sh_sw $end
$var reg 1 ^! is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 _! is_slti_blt_slt $end
$var reg 1 `! is_sltiu_bltu_sltu $end
$var reg 1 a! is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 b! is_lbu_lhu_lw $end
$var wire 32 c! pcpi_int_rd [31:0] $end
$var wire 1 d! pcpi_int_wait $end
$var wire 1 e! pcpi_int_ready $end
$var reg 2 f! mem_state [1:0] $end
$var reg 2 g! mem_wordsize [1:0] $end
$var wire 32 h! mem_rdata_word [31:0] $end
$var reg 32 i! mem_rdata_q [31:0] $end
$var reg 1 j! mem_do_prefetch $end
$var reg 1 k! mem_do_rinst $end
$var reg 1 l! mem_do_rdata $end
$var reg 1 m! mem_do_wdata $end
$var wire 1 n! mem_xfer $end
$var reg 1 o! mem_la_secondword $end
$var reg 1 p! mem_la_firstword_reg $end
$var reg 1 q! last_mem_valid $end
$var wire 1 r! mem_la_firstword $end
$var reg 1 s! instr_bne $end
$var reg 1 t! instr_blt $end
$var reg 1 u! instr_bge $end
$var reg 1 v! instr_bltu $end
$var reg 1 w! instr_bgeu $end
$var reg 1 x! instr_lb $end
$var reg 1 y! instr_lh $end
$var reg 1 z! instr_lw $end
$var reg 1 {! instr_lbu $end
$var reg 1 |! instr_lhu $end
$var reg 1 }! instr_sb $end
$var reg 1 ~! instr_sh $end
$var reg 1 !" instr_sw $end
$var reg 1 "" instr_addi $end
$var reg 1 #" instr_slti $end
$var reg 1 $" instr_sltiu $end
$var reg 1 %" instr_xori $end
$var reg 1 &" instr_ori $end
$var reg 1 '" instr_andi $end
$var reg 1 (" instr_slli $end
$var reg 1 )" instr_srli $end
$var reg 1 *" instr_srai $end
$var reg 1 +" instr_add $end
$var reg 1 ," instr_sub $end
$var reg 1 -" instr_sll $end
$var reg 1 ." instr_slt $end
$var reg 1 /" instr_sltu $end
$var reg 1 0" instr_xor $end
$var reg 1 1" instr_srl $end
$var reg 1 2" instr_sra $end
$var reg 1 3" instr_or $end
$var reg 1 4" instr_and $end
$var reg 1 5" instr_rdcycle $end
$var reg 1 6" instr_rdcycleh $end
$var reg 1 7" instr_rdinstr $end
$var reg 1 8" instr_rdinstrh $end
$var reg 64 9" count_cycle [63:0] $end
$var reg 64 :" count_instr [63:0] $end
$var reg 32 ;" reg_pc [31:0] $end
$var reg 32 <" reg_next_pc [31:0] $end
$var reg 32 =" reg_op1 [31:0] $end
$var reg 32 >" reg_op2 [31:0] $end
$var wire 1 ?" \:X_371 $end
$var wire 1 @" \:X_372 $end
$var wire 1 A" \:X_373 $end
$var wire 1 B" \:X_374 $end
$var wire 1 C" \:X_375 $end
$var wire 1 D" \:X_376 $end
$var wire 1 E" \:X_377 $end
$var wire 1 F" \:X_378 $end
$var wire 1 G" \:X_379 $end
$var wire 1 H" \:X_380 $end
$var wire 1 I" \:X_381 $end
$var wire 1 J" \:X_382 $end
$var wire 1 K" \:X_383 $end
$var wire 1 L" \:X_384 $end
$var wire 1 M" \:X_385 $end
$var wire 1 N" \:X_386 $end
$var wire 1 O" \:X_387 $end
$var wire 1 P" \:X_388 $end
$var wire 1 Q" \:X_389 $end
$var wire 1 R" \:X_390 $end
$var wire 1 S" \:X_391 $end
$var wire 32 T" mem_rdata [31:0] $end
$var wire 1 U" mem_la_read $end
$var reg 1 V" pcpi_valid $end
$var reg 32 W" pcpi_insn [31:0] $end
$var wire 32 X" pcpi_rs1 [31:0] $end
$var wire 32 Y" pcpi_rs2 [31:0] $end
$var wire 1 Z" resetn $end
$var reg 1 [" trap $end
$var reg 1 \" mem_valid $end
$var wire 1 ]" mem_ready $end
$var wire 1 ^" \:X_392 $end
$var wire 1 _" \:X_393 $end
$var wire 1 `" \:X_394 $end
$var wire 1 a" \:X_395 $end
$var wire 1 b" \:X_396 $end
$var wire 1 c" \:X_397 $end
$var wire 1 d" \:X_398 $end
$var wire 1 e" \:X_399 $end
$var wire 1 f" \:X_400 $end
$var wire 1 g" \:X_401 $end
$var wire 1 h" \:X_402 $end
$var wire 1 i" \:X_403 $end
$var wire 1 j" \:X_404 $end
$var wire 1 k" \:X_405 $end
$var wire 1 l" \:X_406 $end
$var wire 1 m" \:X_407 $end
$var wire 1 n" \:X_408 $end
$var wire 1 o" \:X_409 $end
$var wire 1 p" \:X_410 $end
$var wire 1 q" \:X_411 $end
$var wire 1 r" \:X_39 $end
$var wire 1 s" \:X_40 $end
$var wire 1 t" \:X_41 $end
$var wire 1 u" \:X_42 $end
$var wire 1 v" \:X_43 $end
$var wire 1 w" \:X_44 $end
$var wire 1 x" \:X_45 $end
$var wire 1 y" \:X_46 $end
$var wire 1 z" \:X_47 $end
$var wire 1 {" \:X_48 $end
$var wire 1 |" \:X_49 $end
$var wire 1 }" \:X_50 $end
$var wire 1 ~" \:X_51 $end
$var wire 1 !# \:X_52 $end
$var wire 1 "# \:X_53 $end
$var wire 1 ## \:X_54 $end
$var wire 1 $# \:X_55 $end
$var wire 1 %# \:X_56 $end
$var reg 1 &# instr_ecall_ebreak $end
$var reg 1 '# instr_getq $end
$var reg 1 (# instr_setq $end
$var reg 1 )# instr_retirq $end
$var reg 1 *# instr_maskirq $end
$var reg 1 +# instr_waitirq $end
$var reg 1 ,# instr_timer $end
$var wire 1 -# instr_trap $end
$var reg 5 .# decoded_rd [4:0] $end
$var reg 5 /# decoded_rs1 [4:0] $end
$var reg 5 0# decoded_rs2 [4:0] $end
$var reg 32 1# decoded_imm [31:0] $end
$var reg 1 2# decoder_pseudo_trigger_q $end
$var reg 1 3# compressed_instr $end
$var reg 1 4# is_lui_auipc_jal $end
$var reg 1 5# is_lb_lh_lw_lbu_lhu $end
$var reg 1 6# is_slli_srli_srai $end
$var reg 1 7# is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var wire 1 8# \:X_469 $end
$var wire 1 9# \:X_468 $end
$var wire 1 :# \:X_467 $end
$var wire 1 ;# \:X_466 $end
$var wire 1 <# \:X_465 $end
$var wire 1 =# \:X_464 $end
$var wire 1 ># \:X_463 $end
$var wire 1 ?# \:X_462 $end
$var wire 1 @# \:X_461 $end
$var wire 1 A# \:X_490 $end
$var wire 1 B# \:X_489 $end
$var wire 1 C# \:X_488 $end
$var wire 1 D# \:X_487 $end
$var wire 1 E# \:X_486 $end
$var wire 1 F# \:X_485 $end
$var wire 1 G# \:X_484 $end
$var wire 1 H# \:X_483 $end
$var wire 1 I# \:X_482 $end
$var wire 1 J# \:X_481 $end
$var wire 1 K# \:X_480 $end
$var wire 1 L# \:X_479 $end
$var wire 1 M# \:X_478 $end
$var wire 1 N# \:X_477 $end
$var wire 1 O# \:X_476 $end
$var wire 1 P# \:X_475 $end
$var wire 1 Q# \:X_474 $end
$var wire 1 R# \:X_473 $end
$var wire 1 S# \:X_472 $end
$var wire 1 T# \:X_471 $end
$var wire 1 U# \:X_470 $end
$var wire 1 V# \:X_220 $end
$var wire 1 W# \:X_221 $end
$var wire 1 X# \:X_222 $end
$var wire 1 Y# \:X_223 $end
$var wire 1 Z# \:X_224 $end
$var wire 1 [# \:X_225 $end
$var wire 1 \# \:X_226 $end
$var wire 1 ]# \:X_227 $end
$var wire 1 ^# alu_out_0 $end
$var wire 32 _# alu_add_sub [31:0] $end
$var wire 32 `# alu_shl [31:0] $end
$var wire 32 a# alu_shr [31:0] $end
$var wire 1 b# alu_eq $end
$var wire 1 c# alu_ltu $end
$var wire 32 d# mem_rdata_latched [31:0] $end
$var wire 1 e# mem_la_use_prefetched_high_word $end
$var wire 1 f# mem_done $end
$var reg 1 g# instr_lui $end
$var reg 1 h# instr_auipc $end
$var reg 1 i# instr_jal $end
$var reg 1 j# instr_jalr $end
$var reg 1 k# instr_beq $end
$var reg 32 l# \cpuregs[11] [31:0] $end
$var reg 32 m# \cpuregs[12] [31:0] $end
$var reg 32 n# \cpuregs[13] [31:0] $end
$var reg 32 o# \cpuregs[14] [31:0] $end
$var reg 32 p# \cpuregs[15] [31:0] $end
$var reg 32 q# \cpuregs[16] [31:0] $end
$var reg 32 r# \cpuregs[17] [31:0] $end
$var reg 32 s# \cpuregs[18] [31:0] $end
$var reg 32 t# \cpuregs[19] [31:0] $end
$var reg 32 u# \cpuregs[20] [31:0] $end
$var reg 32 v# \cpuregs[21] [31:0] $end
$var reg 32 w# \cpuregs[22] [31:0] $end
$var reg 32 x# \cpuregs[23] [31:0] $end
$var reg 32 y# \cpuregs[24] [31:0] $end
$var reg 32 z# \cpuregs[25] [31:0] $end
$var wire 1 {# \:X_64 $end
$var reg 1 |# rvfi_valid $end
$var reg 32 }# rvfi_insn [31:0] $end
$var wire 1 ~# \:X_412 $end
$var wire 1 !$ \:X_413 $end
$var wire 1 "$ \:X_414 $end
$var wire 1 #$ \:X_415 $end
$var wire 1 $$ \:X_416 $end
$var wire 1 %$ \:X_417 $end
$var wire 1 &$ \:X_418 $end
$var wire 1 '$ \:X_419 $end
$var wire 1 ($ \:X_420 $end
$var wire 1 )$ \:X_146 $end
$var wire 1 *$ \:X_147 $end
$var wire 1 +$ \:X_148 $end
$var wire 1 ,$ \:X_149 $end
$var wire 1 -$ \:X_150 $end
$var wire 1 .$ \:X_151 $end
$var wire 1 /$ \:X_152 $end
$var wire 1 0$ \:X_153 $end
$var wire 1 1$ \:X_154 $end
$var wire 1 2$ \:X_155 $end
$var wire 1 3$ \:X_156 $end
$var wire 1 4$ \:X_157 $end
$var wire 1 5$ \:X_158 $end
$var wire 1 6$ \:X_159 $end
$var wire 1 7$ \:X_160 $end
$var reg 32 8$ decoded_imm_uj [31:0] $end
$var reg 1 9$ decoder_trigger $end
$var reg 1 :$ decoder_trigger_q $end
$var reg 1 ;$ decoder_pseudo_trigger $end
$var reg 32 <$ reg_out [31:0] $end
$var reg 5 =$ reg_sh [4:0] $end
$var reg 32 >$ next_insn_opcode [31:0] $end
$var wire 32 ?$ dbg_insn_opcode [31:0] $end
$var reg 1 @$ prefetched_high_word $end
$var wire 1 A$ clear_prefetched_high_word $end
$var reg 16 B$ mem_16bit_buffer [15:0] $end
$var wire 32 C$ mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 D$ next_pc [31:0] $end
$var wire 1 E$ \:X_357 $end
$var wire 1 F$ \:X_358 $end
$var wire 1 G$ \:X_359 $end
$var wire 1 H$ \:X_360 $end
$var wire 1 I$ \:X_361 $end
$var wire 1 J$ \:X_362 $end
$var wire 1 K$ \:X_363 $end
$var wire 1 L$ \:X_364 $end
$var wire 1 M$ \:X_365 $end
$var wire 1 N$ \:X_366 $end
$var wire 1 O$ \:X_367 $end
$var wire 1 P$ \:X_368 $end
$var wire 1 Q$ \:X_369 $end
$var wire 1 R$ \:X_370 $end
$var wire 1 S$ alu_lts $end
$var reg 1 T$ clear_prefetched_high_word_q $end
$var wire 1 U$ cpuregs_write $end
$var wire 32 V$ cpuregs_wrdata [31:0] $end
$var wire 32 W$ cpuregs_rs1 [31:0] $end
$var wire 32 X$ cpuregs_rs2 [31:0] $end
$var wire 1 Y$ \:X_32 $end
$var wire 1 Z$ \:X_33 $end
$var wire 1 [$ \:X_34 $end
$var wire 1 \$ \:X_35 $end
$var wire 1 ]$ \:X_36 $end
$var wire 1 ^$ \:X_37 $end
$var wire 1 _$ \:X_38 $end
$var wire 1 `$ \:X_228 $end
$var wire 1 a$ \:X_229 $end
$var wire 1 b$ \:X_230 $end
$var wire 1 c$ \:X_231 $end
$var wire 1 d$ \:X_232 $end
$var wire 1 e$ \:X_233 $end
$var wire 1 f$ \:X_234 $end
$var wire 1 g$ \:X_235 $end
$var wire 1 h$ \:X_236 $end
$var wire 1 i$ \:X_237 $end
$var wire 1 j$ \:X_238 $end
$var wire 1 k$ \:X_239 $end
$var wire 1 l$ \:X_240 $end
$var wire 1 m$ \:X_241 $end
$var wire 1 n$ \:X_242 $end
$var wire 1 o$ \:X_243 $end
$var wire 1 p$ \:X_244 $end
$var wire 1 q$ \:X_245 $end
$var wire 1 r$ \:X_246 $end
$var wire 1 s$ \:X_247 $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ reset $end
$var wire 1 v$ rvfi_valid $end
$var wire 1 w$ mem_ready $end
$var wire 32 x$ mem_rdata [31:0] $end
$var wire 32 y$ rvfi_insn [31:0] $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 32 {$ insn_padding [31:0] $end
$var wire 4 |$ insn_funct4 [3:0] $end
$var wire 5 }$ insn_rs2 [4:0] $end
$var wire 2 ~$ insn_opcode [1:0] $end
$var wire 1 !% rvfi_valid $end
$var wire 32 "% rvfi_insn [31:0] $end
$var wire 1 #% spec_valid $end
$upscope $end
$var wire 1 $% valid $end
$var wire 1 %% spec_valid $end
$var wire 1 &% rvfi_valid $end
$var wire 32 '% rvfi_insn [31:0] $end
$var wire 1 (% reset $end
$var wire 1 )% check $end
$var wire 1 *% clock $end
$upscope $end
$var reg 8 +% cycle_reg [7:0] $end
$var wire 1 ,% rvfi_valid $end
$var wire 32 -% rvfi_insn [31:0] $end
$var wire 1 .% \:jasper_formal_reset $end
$var wire 1 /% reset $end
$var wire 8 0% cycle [7:0] $end
$var wire 1 1% clock $end
$var wire 1 2% \:jasper_formal_clock $end
$upscope $end
$enddefinitions $end
#0
0!
b00000010000000000100000000110011 "
b11111111111111111111111111111111 #
b00000000000000000000000000000000 $
0%
0&
b00000000000000000000000000000000 '
0(
0)
0*
0+
0,
0-
0.
0/
b00000000000000000000000000000000 0
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
1K
0L
0M
0N
0O
0P
0Q
0R
1S
1T
0U
b00000010000000000100000000110011 V
b11111111111111111111111111111111 W
b00000000000000000000000000000000 X
0Y
0Z
b00000000000000000000000000000000 [
0\
0]
0^
0_
0`
0a
0b
b0000 c
0d
1e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
0l
b00000000000000000000000000000000 m
0n
0o
0p
b00000000000000000000000000000000 q
0r
0s
0t
0u
1v
0w
1x
b00000000000000000001000001011111 y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
10!
11!
12!
13!
14!
15!
16!
17!
18!
19!
1:!
1;!
1<!
1=!
1>!
1?!
1@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
b00001 Q!
b1111 R!
0S!
0T!
b11111111111111111111111111111111 U!
b00000000000000000000000000000000 V!
0W!
0X!
0Y!
b00000000000000000000000000000000 Z!
b01000000 [!
b00 \!
0]!
1^!
0_!
0`!
0a!
0b!
b00000000000000000000000000000000 c!
0d!
0e!
b00 f!
b00 g!
b00000000000000000000000000000000 h!
b01000000000000000111000001010011 i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
1("
0)"
1*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
18"
b0000000000000000000000000000000000000000000000000000000000000000 9"
b0000000000000000000000000000000000000000000000000000000000000000 :"
b00000000000000000000000000000000 ;"
b00000000000000000000000000000000 <"
b11111111111111111111111111111111 ="
b00000000000000000000000000000000 >"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
b00000000000000000000000000000000 T"
0U"
0V"
b00000010000000000100000000110011 W"
b11111111111111111111111111111111 X"
b00000000000000000000000000000000 Y"
1Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
b11111 .#
b01110 /#
b11111 0#
b00000000000000000000000000000011 1#
02#
13#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
1V#
1W#
1X#
1Y#
1Z#
0[#
0\#
0]#
0^#
b11111111111111111111111111111111 _#
b11111111111111111111111111111111 `#
b11111111111111111111111111111111 a#
0b#
0c#
b01000000000000000111000001010011 d#
0e#
0f#
0g#
0h#
1i#
0j#
0k#
b00000000000000000000000000000000 l#
b00000000000000000000000000000000 m#
b00000000000000000000000000000000 n#
b00000000000000000000000000000000 o#
b00000000000000000000000000000000 p#
b00000000000000000000000000000000 q#
b00000000000000000000000000000000 r#
b00000000000000000000000000000000 s#
b00000000000000000000000000000000 t#
b00000000000000000000000000000000 u#
b00000000000000000000000000000000 v#
b00000000000000000000000000000000 w#
b00000000000000000000000000000000 x#
b00000000000000000000000000000000 y#
b00000000000000000000000000000000 z#
0{#
0|#
b00000000000000000001000001011111 }#
0~#
0!$
0"$
0#$
0$$
0%$
0&$
0'$
0($
1)$
1*$
1+$
1,$
1-$
1.$
1/$
10$
11$
12$
13$
14$
15$
16$
17$
b00000000000000000000000000000000 8$
09$
0:$
0;$
b00000000000000000000000000000000 <$
b11111 =$
b11111111111111110000000000000011 >$
b00000000000000000001000001011111 ?$
0@$
0A$
b0000000000000000 B$
b01000000000000000111000001010011 C$
b00000000000000000000000000000000 D$
0E$
0F$
0G$
0H$
0I$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
1S$
1T$
0U$
b11111111111111111111111111111111 V$
b00000000000000000000000000000000 W$
b00000000000000000000000000000000 X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
1t$
0u$
0v$
0w$
b00000000000000000000000000000000 x$
b00000000000000000001000001011111 y$
1z$
b00000000000000000000000000000000 {$
b0001 |$
b10111 }$
b11 ~$
0!%
b00000000000000000001000001011111 "%
0#%
0$%
0%%
0&%
b00000000000000000001000001011111 '%
0(%
0)%
1*%
b00000001 +%
0,%
b00000000000000000001000001011111 -%
0.%
0/%
b00000001 0%
11%
12%
#5
0S
0e
0t$
0z$
0*%
01%
02%
#10
1S
1e
1M!
b11111 Q!
b11111111111111111111111111111111 V!
b00000000000000000000000000000011 h!
1k!
b0000000000000000000000000000000000000000000000000000000000000001 9"
b00000000000000000000000000000011 T"
1U"
14#
0T$
1t$
b00000000000000000000000000000011 x$
1z$
1*%
b00000010 +%
b00000010 0%
11%
12%
#15
0S
0e
0t$
0z$
0*%
01%
02%
#20
1S
1e
b01 f!
b00000000000000000000000001110011 h!
1n!
b0000000000000000000000000000000000000000000000000000000000000010 9"
b00000000000000000000000001110011 T"
0U"
1\"
1]"
b00000000000000000000000001110011 d#
1f#
b00000000000000000000000001110011 C$
1t$
1w$
b00000000000000000000000001110011 x$
1z$
1*%
b00000011 +%
b00000011 0%
11%
12%
#25
0S
0e
0t$
0z$
0*%
01%
02%
#30
1S
1e
0v
1X!
b00 f!
b00000000000000000000000000000011 h!
b00000000000000000000000001110011 i!
0k!
0n!
b0000000000000000000000000000000000000000000000000000000000000011 9"
b00000000000000000000000000000011 T"
0\"
0]"
b00000 .#
b00000 /#
b00000 0#
03#
0f#
0i#
1{#
19$
b00000000000000000000000001110011 >$
1n$
1t$
0w$
b00000000000000000000000000000011 x$
1z$
1*%
b00000100 +%
b00000100 0%
11%
12%
#35
0S
0e
0t$
0z$
0*%
01%
02%
#40
b00000000000000000000000001110011 "
1S
b00000000000000000000000001110011 V
1e
0x
0M!
b00000 Q!
b00000000000000000000000000000000 U!
1W!
0X!
1Y!
b00100000 [!
0^!
1j!
0("
0*"
08"
b0000000000000000000000000000000000000000000000000000000000000100 9"
b0000000000000000000000000000000000000000000000000000000000000001 :"
b00000000000000000000000000000100 <"
1U"
b00000000000000000000000001110011 W"
1&#
1-#
b00000000000000000000000000000001 1#
04#
0{#
05$
06$
09$
1:$
b00000000000000000100000000000000 <$
b00000000000000000000000001110011 ?$
b00000000000000000000000000000100 D$
b11111111111111111111111111111001 V$
0n$
1t$
1z$
1*%
b00000101 +%
b00000101 0%
11%
12%
#45
0S
0e
0t$
0z$
0*%
01%
02%
#50
b00000000000000000000000000000000 #
1S
b00000000000000000000000000000000 W
1e
b00000000000000000000000001110011 y
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
b00000000000000000000000000000000 V!
0W!
b00000000000000000000000001110011 Z!
b10000000 [!
b01 f!
b00000000000000000011000100000000 h!
1n!
b0000000000000000000000000000000000000000000000000000000000000101 9"
b00000000000000000000000000000000 ="
b00000000000000000011000100000000 T"
0U"
b00000000000000000000000000000000 X"
1\"
1]"
b00000000000000000000000000000000 _#
b00000000000000000000000000000000 `#
b00000000000000000000000000000000 a#
1b#
b00000000000000000011000100000000 d#
b00000000000000000000000001110011 }#
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
07$
0:$
b00000000000000000000000000000000 <$
b00000 =$
b00000000000000000011000100000000 C$
0S$
b00000000000000000000000000000000 V$
1t$
1w$
b00000000000000000011000100000000 x$
b00000000000000000000000001110011 y$
1z$
b0000 |$
b11100 }$
b00000000000000000000000001110011 "%
b00000000000000000000000001110011 '%
1*%
b00000110 +%
b00000000000000000000000001110011 -%
b00000110 0%
11%
12%
#55
0S
0e
0t$
0z$
0*%
01%
02%
#60
1S
1e
b11 f!
b00000000000000000000000000000000 h!
b00000000000000000011000100000000 i!
0n!
b0000000000000000000000000000000000000000000000000000000000000110 9"
b00000000000000000000000000000000 T"
1["
0\"
0]"
b11111 =$
b00000000000000000011000100000000 >$
1@$
1t$
0w$
b00000000000000000000000000000000 x$
1z$
1*%
b00000111 +%
b00000111 0%
11%
12%
#65
0S
0e
0t$
0z$
0*%
01%
02%
#70
1S
1e
0Y!
b0000000000000000000000000000000000000000000000000000000000000111 9"
1|#
0@$
1t$
1v$
1z$
1!%
1$%
1&%
1*%
b00001000 +%
1,%
b00001000 0%
11%
12%
#75
0S
0e
0t$
0z$
0*%
01%
02%
#80
