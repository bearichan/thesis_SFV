$date Mon Feb 25 16:38:26 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var reg 1 ! pcpi_wait_q $end
$var wire 1 " start $end
$var reg 32 # quotient_msk [31:0] $end
$var reg 1 $ running $end
$var wire 1 % \:X_3 $end
$var wire 1 & \:X_4 $end
$var wire 1 ' \:X_0 $end
$var wire 1 ( \:X_1 $end
$var wire 1 ) \:X_2 $end
$var wire 1 * \:X_5 $end
$var wire 1 + \:X_6 $end
$var wire 1 , \:X_7 $end
$var wire 1 - \:X_8 $end
$var wire 1 . \:X_9 $end
$var wire 1 / \:X_10 $end
$var wire 1 0 \:X_11 $end
$var wire 1 1 \:X_12 $end
$var wire 1 2 \:X_13 $end
$var wire 1 3 \:X_14 $end
$var wire 1 4 \:X_15 $end
$var wire 1 5 \:X_16 $end
$var wire 1 6 \:X_17 $end
$var wire 1 7 \:X_18 $end
$var wire 1 8 \:X_19 $end
$var wire 1 9 \:X_20 $end
$var wire 1 : \:X_21 $end
$var wire 1 ; \:X_22 $end
$var wire 1 < \:X_23 $end
$var wire 1 = \:X_24 $end
$var wire 1 > \:X_25 $end
$var wire 1 ? \:X_26 $end
$var wire 1 @ \:X_27 $end
$var wire 1 A \:X_28 $end
$var wire 1 B \:X_29 $end
$var wire 1 C \:X_30 $end
$var wire 1 D \:X_31 $end
$var wire 1 E resetn $end
$var wire 1 F pcpi_valid $end
$var wire 32 G pcpi_insn [31:0] $end
$var wire 32 H pcpi_rs1 [31:0] $end
$var wire 32 I pcpi_rs2 [31:0] $end
$var wire 1 J instr_any_div_rem $end
$var reg 1 K pcpi_wr $end
$var reg 32 L pcpi_rd [31:0] $end
$var reg 1 M pcpi_wait $end
$var reg 1 N pcpi_ready $end
$var reg 1 O instr_div $end
$var reg 1 P instr_divu $end
$var reg 1 Q instr_rem $end
$var reg 1 R instr_remu $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T \:X_3556 $end
$var wire 1 U resetn $end
$var wire 1 V pcpi_valid $end
$var wire 32 W pcpi_insn [31:0] $end
$var wire 32 X pcpi_rs1 [31:0] $end
$var wire 32 Y pcpi_rs2 [31:0] $end
$var wire 1 Z instr_any_mul $end
$var wire 1 [ pcpi_wr $end
$var wire 32 \ pcpi_rd [31:0] $end
$var wire 1 ] pcpi_wait $end
$var wire 1 ^ pcpi_ready $end
$var wire 1 _ instr_mul $end
$var wire 1 ` instr_mulh $end
$var wire 1 a instr_mulhsu $end
$var wire 1 b instr_mulhu $end
$var reg 4 c active [3:0] $end
$var wire 1 d pcpi_insn_valid $end
$var wire 1 e clk $end
$upscope $end
$var reg 1 f prefetched_high_word $end
$var wire 1 g clear_prefetched_high_word $end
$var reg 16 h mem_16bit_buffer [15:0] $end
$var wire 32 i mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 j next_pc [31:0] $end
$var reg 32 k \cpuregs[0] [31:0] $end
$var reg 32 l \cpuregs[1] [31:0] $end
$var reg 32 m \cpuregs[2] [31:0] $end
$var reg 32 n \cpuregs[3] [31:0] $end
$var reg 32 o \cpuregs[4] [31:0] $end
$var reg 32 p \cpuregs[5] [31:0] $end
$var reg 32 q \cpuregs[6] [31:0] $end
$var reg 32 r \cpuregs[7] [31:0] $end
$var reg 32 s \cpuregs[8] [31:0] $end
$var reg 32 t \cpuregs[9] [31:0] $end
$var reg 32 u \cpuregs[10] [31:0] $end
$var reg 32 v \cpuregs[11] [31:0] $end
$var reg 32 w \cpuregs[12] [31:0] $end
$var reg 32 x \cpuregs[13] [31:0] $end
$var wire 1 y alu_ltu $end
$var wire 1 z alu_lts $end
$var reg 1 { clear_prefetched_high_word_q $end
$var wire 1 | cpuregs_write $end
$var wire 32 } cpuregs_wrdata [31:0] $end
$var wire 32 ~ cpuregs_rs1 [31:0] $end
$var wire 32 !! cpuregs_rs2 [31:0] $end
$var wire 1 "! \:X_32 $end
$var wire 1 #! \:X_33 $end
$var wire 1 $! \:X_34 $end
$var wire 1 %! \:X_35 $end
$var wire 1 &! \:X_36 $end
$var wire 1 '! \:X_37 $end
$var wire 1 (! \:X_38 $end
$var wire 1 )! \:X_39 $end
$var wire 1 *! \:X_40 $end
$var wire 1 +! \:X_41 $end
$var wire 1 ,! \:X_42 $end
$var wire 1 -! \:X_43 $end
$var wire 1 .! \:X_44 $end
$var wire 1 /! \:X_45 $end
$var wire 1 0! \:X_46 $end
$var wire 1 1! \:X_47 $end
$var wire 1 2! \:X_48 $end
$var wire 1 3! \:X_49 $end
$var wire 1 4! \:X_50 $end
$var reg 32 5! q_insn_opcode [31:0] $end
$var reg 1 6! dbg_next $end
$var wire 1 7! launch_next_insn $end
$var reg 1 8! dbg_valid_insn $end
$var reg 32 9! cached_insn_opcode [31:0] $end
$var reg 8 :! cpu_state [7:0] $end
$var reg 2 ;! irq_state [1:0] $end
$var reg 1 <! latched_store $end
$var reg 1 =! latched_stalu $end
$var wire 1 >! \:X_492 $end
$var wire 1 ?! \:X_491 $end
$var wire 1 @! \:X_490 $end
$var wire 1 A! \:X_489 $end
$var wire 1 B! \:X_488 $end
$var wire 1 C! \:X_487 $end
$var wire 1 D! \:X_486 $end
$var wire 1 E! \:X_485 $end
$var wire 1 F! \:X_484 $end
$var wire 1 G! \:X_483 $end
$var wire 1 H! \:X_482 $end
$var wire 1 I! \:X_481 $end
$var wire 1 J! \:X_480 $end
$var wire 1 K! \:X_479 $end
$var wire 1 L! \:X_478 $end
$var wire 1 M! \:X_477 $end
$var wire 1 N! \:X_476 $end
$var wire 1 O! \:X_475 $end
$var wire 1 P! \:X_474 $end
$var wire 1 Q! \:X_473 $end
$var wire 1 R! \:X_472 $end
$var wire 1 S! \:X_471 $end
$var wire 1 T! \:X_470 $end
$var wire 1 U! \:X_469 $end
$var wire 1 V! \:X_468 $end
$var wire 1 W! \:X_467 $end
$var wire 1 X! \:X_466 $end
$var wire 1 Y! \:X_465 $end
$var wire 1 Z! \:X_464 $end
$var wire 1 [! \:X_463 $end
$var wire 1 \! \:X_462 $end
$var wire 1 ]! \:X_461 $end
$var wire 1 ^! \:X_373 $end
$var wire 1 _! \:X_374 $end
$var wire 1 `! \:X_375 $end
$var wire 1 a! \:X_376 $end
$var wire 1 b! \:X_377 $end
$var wire 1 c! \:X_378 $end
$var wire 1 d! \:X_379 $end
$var wire 1 e! \:X_380 $end
$var wire 1 f! \:X_381 $end
$var wire 1 g! \:X_382 $end
$var wire 1 h! \:X_383 $end
$var wire 1 i! \:X_384 $end
$var wire 1 j! \:X_385 $end
$var wire 1 k! \:X_386 $end
$var wire 1 l! \:X_387 $end
$var wire 1 m! \:X_388 $end
$var wire 1 n! \:X_389 $end
$var wire 1 o! \:X_390 $end
$var wire 1 p! \:X_391 $end
$var wire 1 q! \:X_392 $end
$var wire 1 r! \:X_393 $end
$var wire 1 s! \:X_394 $end
$var wire 1 t! \:X_395 $end
$var wire 1 u! \:X_396 $end
$var wire 1 v! \:X_397 $end
$var wire 1 w! \:X_398 $end
$var wire 1 x! \:X_399 $end
$var wire 1 y! \:X_400 $end
$var wire 1 z! \:X_401 $end
$var wire 1 {! \:X_402 $end
$var wire 1 |! \:X_403 $end
$var wire 1 }! \:X_404 $end
$var wire 1 ~! \:X_405 $end
$var wire 1 !" \:X_406 $end
$var wire 1 "" \:X_51 $end
$var wire 1 #" \:X_52 $end
$var wire 1 $" \:X_53 $end
$var wire 1 %" \:X_54 $end
$var wire 1 &" \:X_55 $end
$var wire 1 '" \:X_56 $end
$var wire 1 (" \:X_57 $end
$var wire 1 )" \:X_58 $end
$var wire 1 *" \:X_59 $end
$var wire 1 +" \:X_60 $end
$var wire 1 ," \:X_61 $end
$var wire 1 -" \:X_62 $end
$var wire 1 ." \:X_63 $end
$var reg 64 /" count_cycle [63:0] $end
$var reg 64 0" count_instr [63:0] $end
$var reg 32 1" reg_pc [31:0] $end
$var reg 32 2" reg_next_pc [31:0] $end
$var reg 32 3" reg_op1 [31:0] $end
$var reg 32 4" reg_op2 [31:0] $end
$var reg 32 5" reg_out [31:0] $end
$var reg 5 6" reg_sh [4:0] $end
$var reg 32 7" next_insn_opcode [31:0] $end
$var wire 32 8" dbg_insn_opcode [31:0] $end
$var wire 32 9" mem_rdata_latched [31:0] $end
$var wire 1 :" mem_la_use_prefetched_high_word $end
$var wire 1 ;" mem_done $end
$var reg 1 <" instr_lui $end
$var reg 1 =" instr_auipc $end
$var reg 1 >" instr_jal $end
$var reg 1 ?" instr_jalr $end
$var reg 1 @" instr_beq $end
$var reg 1 A" instr_bne $end
$var reg 1 B" instr_blt $end
$var reg 1 C" instr_bge $end
$var reg 1 D" instr_bltu $end
$var reg 1 E" instr_bgeu $end
$var reg 1 F" instr_lb $end
$var reg 1 G" instr_lh $end
$var reg 1 H" instr_lw $end
$var reg 1 I" instr_lbu $end
$var reg 1 J" instr_lhu $end
$var reg 1 K" instr_sb $end
$var reg 1 L" instr_sh $end
$var reg 1 M" instr_sw $end
$var reg 1 N" instr_addi $end
$var reg 1 O" instr_slti $end
$var reg 1 P" instr_sltiu $end
$var reg 1 Q" instr_xori $end
$var reg 1 R" instr_ori $end
$var reg 1 S" instr_andi $end
$var reg 1 T" instr_slli $end
$var reg 1 U" instr_srli $end
$var reg 1 V" instr_srai $end
$var wire 1 W" \:X_220 $end
$var wire 1 X" \:X_221 $end
$var wire 1 Y" \:X_222 $end
$var wire 1 Z" \:X_223 $end
$var wire 1 [" \:X_224 $end
$var wire 1 \" \:X_225 $end
$var wire 1 ]" \:X_226 $end
$var wire 1 ^" \:X_227 $end
$var wire 1 _" \:X_228 $end
$var wire 1 `" \:X_229 $end
$var reg 1 a" instr_add $end
$var reg 1 b" instr_sub $end
$var reg 1 c" instr_sll $end
$var reg 1 d" instr_slt $end
$var reg 1 e" instr_sltu $end
$var reg 1 f" instr_xor $end
$var reg 1 g" instr_srl $end
$var reg 1 h" instr_sra $end
$var reg 1 i" instr_or $end
$var reg 1 j" instr_and $end
$var reg 1 k" instr_rdcycle $end
$var reg 1 l" instr_rdcycleh $end
$var reg 1 m" instr_rdinstr $end
$var reg 1 n" instr_rdinstrh $end
$var reg 1 o" instr_ecall_ebreak $end
$var reg 1 p" instr_getq $end
$var reg 1 q" instr_setq $end
$var reg 1 r" instr_retirq $end
$var reg 1 s" instr_maskirq $end
$var reg 1 t" instr_waitirq $end
$var reg 1 u" instr_timer $end
$var wire 1 v" instr_trap $end
$var reg 5 w" decoded_rd [4:0] $end
$var reg 5 x" decoded_rs1 [4:0] $end
$var reg 5 y" decoded_rs2 [4:0] $end
$var reg 32 z" decoded_imm [31:0] $end
$var reg 32 {" decoded_imm_uj [31:0] $end
$var reg 1 |" decoder_trigger $end
$var reg 1 }" decoder_trigger_q $end
$var reg 1 ~" decoder_pseudo_trigger $end
$var wire 1 !# resetn $end
$var reg 1 "# trap $end
$var reg 1 ## mem_valid $end
$var wire 1 $# mem_ready $end
$var wire 1 %# \:X_64 $end
$var reg 1 &# latched_branch $end
$var reg 1 '# latched_compr $end
$var reg 1 (# latched_is_lu $end
$var reg 1 )# latched_is_lh $end
$var reg 1 *# latched_is_lb $end
$var reg 5 +# latched_rd [4:0] $end
$var reg 4 ,# pcpi_timeout_counter [3:0] $end
$var reg 1 -# do_waitirq $end
$var wire 32 .# alu_out [31:0] $end
$var reg 32 /# alu_out_q [31:0] $end
$var wire 1 0# \:X_139 $end
$var wire 1 1# \:X_140 $end
$var wire 1 2# \:X_141 $end
$var wire 1 3# \:X_142 $end
$var wire 1 4# \:X_143 $end
$var wire 1 5# \:X_144 $end
$var wire 1 6# \:X_145 $end
$var wire 1 7# \:X_146 $end
$var wire 1 8# \:X_147 $end
$var wire 1 9# \:X_148 $end
$var wire 1 :# \:X_149 $end
$var wire 1 ;# \:X_150 $end
$var wire 1 <# \:X_151 $end
$var wire 1 =# \:X_152 $end
$var wire 1 ># \:X_153 $end
$var wire 1 ?# \:X_154 $end
$var wire 1 @# \:X_155 $end
$var wire 1 A# \:X_156 $end
$var wire 1 B# \:X_157 $end
$var wire 1 C# \:X_158 $end
$var wire 1 D# \:X_159 $end
$var wire 1 E# \:X_160 $end
$var wire 1 F# \:X_357 $end
$var wire 1 G# \:X_358 $end
$var wire 1 H# \:X_359 $end
$var wire 1 I# \:X_360 $end
$var wire 1 J# \:X_361 $end
$var wire 1 K# \:X_362 $end
$var wire 1 L# \:X_363 $end
$var wire 1 M# \:X_364 $end
$var wire 1 N# \:X_365 $end
$var wire 1 O# \:X_366 $end
$var wire 1 P# \:X_367 $end
$var wire 1 Q# \:X_368 $end
$var wire 1 R# \:X_369 $end
$var wire 1 S# \:X_370 $end
$var wire 1 T# \:X_371 $end
$var wire 1 U# \:X_372 $end
$var wire 1 V# pcpi_div_wait $end
$var wire 1 W# pcpi_div_ready $end
$var wire 1 X# pcpi_int_wr $end
$var wire 32 Y# pcpi_int_rd [31:0] $end
$var wire 1 Z# pcpi_int_wait $end
$var wire 1 [# pcpi_int_ready $end
$var reg 2 \# mem_state [1:0] $end
$var reg 2 ]# mem_wordsize [1:0] $end
$var wire 32 ^# mem_rdata_word [31:0] $end
$var reg 32 _# mem_rdata_q [31:0] $end
$var reg 1 `# mem_do_prefetch $end
$var reg 1 a# mem_do_rinst $end
$var reg 1 b# mem_do_rdata $end
$var reg 1 c# mem_do_wdata $end
$var wire 1 d# mem_xfer $end
$var reg 1 e# mem_la_secondword $end
$var wire 1 f# alu_out_0 $end
$var wire 32 g# alu_add_sub [31:0] $end
$var wire 32 h# alu_shl [31:0] $end
$var wire 32 i# alu_shr [31:0] $end
$var wire 1 j# alu_eq $end
$var reg 1 k# mem_la_firstword_reg $end
$var reg 1 l# last_mem_valid $end
$var wire 1 m# mem_la_firstword $end
$var wire 1 n# \:X_407 $end
$var wire 1 o# \:X_408 $end
$var wire 1 p# \:X_409 $end
$var wire 1 q# \:X_410 $end
$var wire 1 r# \:X_411 $end
$var wire 1 s# \:X_412 $end
$var wire 1 t# \:X_413 $end
$var wire 1 u# \:X_414 $end
$var wire 1 v# \:X_415 $end
$var wire 1 w# \:X_416 $end
$var wire 1 x# \:X_417 $end
$var wire 1 y# \:X_418 $end
$var wire 1 z# \:X_419 $end
$var wire 1 {# \:X_420 $end
$var wire 1 |# \:X_129 $end
$var wire 1 }# \:X_130 $end
$var wire 1 ~# \:X_131 $end
$var wire 1 !$ \:X_132 $end
$var wire 1 "$ \:X_133 $end
$var wire 1 #$ \:X_134 $end
$var wire 1 $$ \:X_135 $end
$var wire 1 %$ \:X_136 $end
$var wire 1 &$ \:X_137 $end
$var wire 1 '$ \:X_138 $end
$var wire 32 ($ mem_rdata [31:0] $end
$var wire 1 )$ mem_la_read $end
$var reg 1 *$ pcpi_valid $end
$var reg 32 +$ pcpi_insn [31:0] $end
$var wire 32 ,$ pcpi_rs1 [31:0] $end
$var wire 32 -$ pcpi_rs2 [31:0] $end
$var reg 1 .$ rvfi_valid $end
$var reg 32 /$ rvfi_insn [31:0] $end
$var reg 1 0$ decoder_pseudo_trigger_q $end
$var reg 1 1$ compressed_instr $end
$var reg 1 2$ is_lui_auipc_jal $end
$var reg 1 3$ is_lb_lh_lw_lbu_lhu $end
$var reg 1 4$ is_slli_srli_srai $end
$var reg 1 5$ is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 6$ pcpi_timeout $end
$var reg 1 7$ is_sb_sh_sw $end
$var reg 1 8$ is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 9$ is_slti_blt_slt $end
$var reg 1 :$ is_sltiu_bltu_sltu $end
$var reg 1 ;$ is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 <$ is_lbu_lhu_lw $end
$var reg 1 =$ is_alu_reg_imm $end
$var reg 1 >$ is_alu_reg_reg $end
$var reg 1 ?$ is_compare $end
$var wire 1 @$ is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var reg 32 A$ \cpuregs[14] [31:0] $end
$var reg 32 B$ \cpuregs[15] [31:0] $end
$var reg 32 C$ \cpuregs[16] [31:0] $end
$var reg 32 D$ \cpuregs[17] [31:0] $end
$var reg 32 E$ \cpuregs[18] [31:0] $end
$var reg 32 F$ \cpuregs[19] [31:0] $end
$var reg 32 G$ \cpuregs[20] [31:0] $end
$var reg 32 H$ \cpuregs[21] [31:0] $end
$var reg 32 I$ \cpuregs[22] [31:0] $end
$var reg 32 J$ \cpuregs[23] [31:0] $end
$var reg 32 K$ \cpuregs[24] [31:0] $end
$var reg 32 L$ \cpuregs[25] [31:0] $end
$var reg 32 M$ \cpuregs[26] [31:0] $end
$var reg 32 N$ \cpuregs[27] [31:0] $end
$var reg 32 O$ \cpuregs[28] [31:0] $end
$var reg 32 P$ \cpuregs[29] [31:0] $end
$var reg 32 Q$ \cpuregs[30] [31:0] $end
$var reg 32 R$ \cpuregs[31] [31:0] $end
$var wire 1 S$ pcpi_mul_wr $end
$var wire 32 T$ pcpi_mul_rd [31:0] $end
$var wire 1 U$ pcpi_mul_wait $end
$var wire 1 V$ pcpi_mul_ready $end
$var wire 1 W$ pcpi_div_wr $end
$var wire 32 X$ pcpi_div_rd [31:0] $end
$var wire 1 Y$ \:X_230 $end
$var wire 1 Z$ \:X_231 $end
$var wire 1 [$ \:X_232 $end
$var wire 1 \$ \:X_233 $end
$var wire 1 ]$ \:X_234 $end
$var wire 1 ^$ \:X_235 $end
$var wire 1 _$ \:X_236 $end
$var wire 1 `$ \:X_237 $end
$var wire 1 a$ \:X_238 $end
$var wire 1 b$ \:X_239 $end
$var wire 1 c$ \:X_240 $end
$var wire 1 d$ \:X_241 $end
$var wire 1 e$ \:X_242 $end
$var wire 1 f$ \:X_243 $end
$var wire 1 g$ \:X_244 $end
$var wire 1 h$ \:X_245 $end
$var wire 1 i$ \:X_246 $end
$var wire 1 j$ \:X_247 $end
$var wire 1 k$ \:X_248 $end
$var wire 1 l$ \:X_249 $end
$var wire 1 m$ \:X_250 $end
$var wire 1 n$ \:X_251 $end
$var wire 1 o$ \:X_252 $end
$var wire 1 p$ \:X_253 $end
$var wire 1 q$ \:X_254 $end
$var wire 1 r$ \:X_255 $end
$var wire 1 s$ \:X_256 $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ mem_ready $end
$var wire 32 v$ mem_rdata [31:0] $end
$var wire 32 w$ rvfi_insn [31:0] $end
$var wire 1 x$ reset $end
$var wire 1 y$ rvfi_valid $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ spec_valid $end
$var wire 32 |$ insn_padding [31:0] $end
$var wire 7 }$ insn_funct6 [6:0] $end
$var wire 6 ~$ insn_shamt [5:0] $end
$var wire 3 !% insn_funct3 [2:0] $end
$var wire 7 "% insn_opcode [6:0] $end
$var wire 1 #% rvfi_valid $end
$var wire 32 $% rvfi_insn [31:0] $end
$upscope $end
$var wire 1 %% reset $end
$var wire 1 &% spec_valid $end
$var wire 1 '% valid $end
$var wire 32 (% rvfi_insn [31:0] $end
$var wire 1 )% check $end
$var wire 1 *% rvfi_valid $end
$var wire 1 +% clock $end
$upscope $end
$var wire 1 ,% rvfi_valid $end
$var wire 32 -% rvfi_insn [31:0] $end
$var wire 1 .% \:jasper_formal_reset $end
$var reg 8 /% cycle_reg [7:0] $end
$var wire 8 0% cycle [7:0] $end
$var wire 1 1% reset $end
$var wire 1 2% \:jasper_formal_clock $end
$var wire 1 3% clock $end
$upscope $end
$enddefinitions $end
#0
0!
0"
b00000000000000000000000000000000 #
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
1E
0F
b00000010000000000100000000110011 G
b11111111111111111111111111111110 H
b00000000000000000000000000000011 I
0J
0K
b00000000000000000000000000000000 L
0M
0N
0O
0P
0Q
0R
1S
0T
1U
0V
b00000010000000000100000000110011 W
b11111111111111111111111111111110 X
b00000000000000000000000000000011 Y
0Z
0[
b00000000000000000000000000000000 \
0]
0^
0_
0`
0a
0b
b0000 c
0d
1e
0f
0g
b0000000000000000 h
b10111111100000001100100000000101 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
0y
1z
1{
0|
b11111111111111111111111111111111 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
b00000000000000000000000000001011 5!
06!
07!
08!
b00000000000000000000000000000000 9!
b01000000 :!
b00 ;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
b0000000000000000000000000000000000000000000000000000000000000000 /"
b0000000000000000000000000000000000000000000000000000000000000000 0"
b00000000000000000000000000000000 1"
b00000000000000000000000000000000 2"
b11111111111111111111111111111110 3"
b00000000000000000000000000000011 4"
b00000000000000000000000000000000 5"
b11111 6"
b11111111111111110000000000000011 7"
b00000000000000000000000000001011 8"
b10111111100000001100100000000101 9"
0:"
0;"
0<"
0="
1>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
1T"
0U"
1V"
1W"
1X"
1Y"
1Z"
1["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
b11111 w"
b11110 x"
b00000 y"
b00000000000000000000000000000011 z"
b00000000000000000000000000000000 {"
0|"
0}"
0~"
1!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
b00010 +#
b1111 ,#
0-#
b11111111111111111111111111111111 .#
b00000000000000000000000000000000 /#
10#
11#
12#
13#
14#
15#
16#
17#
18#
19#
1:#
1;#
1<#
1=#
1>#
1?#
1@#
1A#
1B#
1C#
1D#
1E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
b00000000000000000000000000000000 Y#
0Z#
0[#
b00 \#
b00 ]#
b00000000000000010000000000000011 ^#
b10111111100000001100100000000101 _#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
b00000000000000000000000000000001 g#
b11111111111111111111111111110000 h#
b11111111111111111111111111111111 i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
1|#
1}#
1~#
1!$
1"$
1#$
1$$
1%$
1&$
1'$
b00000000000000010000000000000011 ($
0)$
0*$
b00000010000000000100000000110011 +$
b11111111111111111111111111111110 ,$
b00000000000000000000000000000011 -$
0.$
b00000000000000000000000000001011 /$
00$
11$
12$
03$
14$
05$
06$
07$
18$
09$
0:$
0;$
0<$
0=$
1>$
0?$
0@$
b00000000000000000000000000000000 A$
b00000000000000000000000000000000 B$
b00000000000000000000000000000000 C$
b00000000000000000000000000000000 D$
b00000000000000000000000000000000 E$
b00000000000000000000000000000000 F$
b00000000000000000000000000000000 G$
b00000000000000000000000000000000 H$
b00000000000000000000000000000000 I$
b00000000000000000000000000000000 J$
b00000000000000000000000000000000 K$
b00000000000000000000000000000000 L$
b00000000000000000000000000000000 M$
b00000000000000000000000000000000 N$
b00000000000000000000000000000000 O$
b00000000000000000000000000000000 P$
b00000000000000000000000000000000 Q$
b00000000000000000000000000000000 R$
0S$
b00000000000000000000000000000000 T$
0U$
0V$
0W$
b00000000000000000000000000000000 X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
1t$
0u$
b00000000000000010000000000000011 v$
b00000000000000000000000000001011 w$
0x$
0y$
1z$
0{$
b00000000000000000000000000000000 |$
b0000000 }$
b000000 ~$
b000 !%
b0001011 "%
0#%
b00000000000000000000000000001011 $%
0%%
0&%
0'%
b00000000000000000000000000001011 (%
0)%
0*%
1+%
0,%
b00000000000000000000000000001011 -%
0.%
b00000001 /%
b00000001 0%
01%
12%
13%
#5
0S
0e
0t$
0z$
0+%
02%
03%
#10
1S
1e
0{
b0000000000000000000000000000000000000000000000000000000000000001 /"
1'#
b11111 +#
b11111111111111111111111111111111 /#
b00000000000000000000000000000011 ^#
1a#
b00000000000000000000000000000011 ($
1)$
1t$
b00000000000000000000000000000011 v$
1z$
1+%
b00000010 /%
b00000010 0%
12%
13%
#15
0S
0e
0t$
0z$
0+%
02%
03%
#20
1S
1e
b00000010010000111010000000001001 i
b0000000000000000000000000000000000000000000000000000000000000010 /"
b00000010010000111010000000001001 9"
1;"
1##
1$#
b01 \#
b00000010010000111010000000001001 ^#
1d#
b00000010010000111010000000001001 ($
0)$
1t$
1u$
b00000010010000111010000000001001 v$
1z$
1+%
b00000011 /%
b00000011 0%
12%
13%
#25
0S
0e
0t$
0z$
0+%
02%
03%
#30
1S
1e
1f
b0000001001000011 h
17!
b0000000000000000000000000000000000000000000000000000000000000011 /"
b00000010010000111010000000001001 7"
0;"
b00000 w"
b00000 x"
b00000000000000000000000000000010 {"
1|"
0##
b00 \#
b00000000000000000000000000000000 ^#
b00000010010000111010000000001001 _#
0a#
0d#
b00000000000000000000000000000000 ($
0>$
1t$
b00000000000000000000000000000000 v$
1z$
1+%
b00000100 /%
b00000100 0%
12%
13%
#35
0S
0e
0t$
0z$
0+%
02%
03%
#40
b00000010010000111010000000001001 G
1S
b00000010010000111010000000001001 W
1e
1g
b00000000000000000000000000000010 j
1|
b00000000000000000000000000000010 }
16!
07!
18!
b0000000000000000000000000000000000000000000000000000000000000100 /"
b0000000000000000000000000000000000000000000000000000000000000001 0"
b00000000000000000000000000000010 2"
b00000000000000001010000000001001 8"
b00000000000000000000001001000011 9"
0T"
0V"
b00000000000000000000000000000010 z"
0|"
1}"
0$#
1&#
b00000 +#
b00000000000000000000000000000000 .#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
1a#
b00011111111111111111111111111111 i#
1m#
0|#
0}#
0~#
0!$
0"$
0#$
0$$
0%$
0&$
0'$
1)$
b00000010010000111010000000001001 +$
04$
08$
1t$
0u$
1z$
1+%
b00000101 /%
b00000101 0%
12%
13%
#45
0S
0e
0t$
0z$
0+%
02%
03%
#50
1S
1e
0f
0g
b00110001000000000000000000000011 i
1{
0|
b00000000000000000000000000000000 }
b00000000000000001010000000001001 5!
06!
b00000000000000001010000000001001 9!
b0000000000000000000000000000000000000000000000000000000000000101 /"
b00000000000000000000000000000010 1"
b00000000000000000011000100000000 9"
1;"
0}"
1##
1$#
0&#
b00000000000000000000000000000001 .#
b00000000000000000000000000000000 /#
b01 \#
b00110001000000000000000000000011 ^#
1d#
1k#
b00110001000000000000000000000011 ($
0)$
b00000000000000001010000000001001 /$
18$
1t$
1u$
b00110001000000000000000000000011 v$
b00000000000000001010000000001001 w$
1z$
b010 !%
b0001001 "%
b00000000000000001010000000001001 $%
b00000000000000001010000000001001 (%
1+%
b00000000000000001010000000001001 -%
b00000110 /%
b00000110 0%
12%
13%
#55
0S
0e
0t$
0z$
0+%
02%
03%
#60
1S
1e
b00000000000000000011000100000000 i
0{
17!
b0000000000000000000000000000000000000000000000000000000000000110 /"
b00000000000000000011000100000000 7"
0;"
0>"
1v"
b11111111111111111111110000000000 {"
1|"
0##
b00000000000000000000000000000001 /#
b00 \#
b00000000000000000000000000000000 ^#
b00000000000000000011000100000000 _#
0a#
0d#
0m#
b00000000000000000000000000000000 ($
1t$
b00000000000000000000000000000000 v$
1z$
1+%
b00000111 /%
b00000111 0%
12%
13%
#65
0S
0e
0t$
0z$
0+%
02%
03%
#70
b00000000000000000011000100000000 G
1S
b00000000000000000011000100000000 W
1e
b00000000000000000000000000000100 j
16!
07!
b00100000 :!
b0000000000000000000000000000000000000000000000000000000000000111 /"
b0000000000000000000000000000000000000000000000000000000000000010 0"
b00000000000000000000000000000100 2"
b00000000000000000011000100000000 8"
b00000000000000000000000000000000 z"
0|"
1}"
b00000000000000000000000000000000 .#
1`#
0k#
1)$
b00000000000000000011000100000000 +$
1.$
02$
08$
1t$
1y$
1z$
1#%
1'%
1*%
1+%
1,%
b00001000 /%
b00001000 0%
12%
13%
#75
0S
0e
0t$
0z$
0+%
02%
03%
#80
