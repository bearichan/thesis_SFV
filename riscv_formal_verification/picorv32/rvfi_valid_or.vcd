$date Mon Feb 25 16:08:46 2019
 $end
$version JasperGold $end
$timescale 1 ns $end
$scope module rvfi_testbench $end
$scope module wrapper $end
$scope module uut $end
$scope module pcpi_div $end
$var wire 1 ! \:X_0 $end
$var wire 1 " \:X_1 $end
$var wire 1 # \:X_2 $end
$var wire 1 $ \:X_5 $end
$var wire 1 % \:X_6 $end
$var wire 1 & \:X_7 $end
$var wire 1 ' \:X_8 $end
$var wire 1 ( \:X_9 $end
$var wire 1 ) \:X_10 $end
$var wire 1 * \:X_11 $end
$var wire 1 + \:X_12 $end
$var wire 1 , \:X_13 $end
$var wire 1 - \:X_14 $end
$var wire 1 . \:X_15 $end
$var wire 1 / \:X_16 $end
$var wire 1 0 \:X_17 $end
$var wire 1 1 \:X_18 $end
$var wire 1 2 \:X_19 $end
$var wire 1 3 \:X_20 $end
$var wire 1 4 \:X_21 $end
$var wire 1 5 \:X_22 $end
$var wire 1 6 \:X_23 $end
$var wire 1 7 \:X_24 $end
$var wire 1 8 \:X_25 $end
$var wire 1 9 \:X_26 $end
$var wire 1 : \:X_27 $end
$var wire 1 ; \:X_28 $end
$var wire 1 < \:X_29 $end
$var wire 1 = \:X_30 $end
$var wire 1 > \:X_31 $end
$var wire 1 ? resetn $end
$var wire 1 @ pcpi_valid $end
$var wire 32 A pcpi_insn [31:0] $end
$var wire 32 B pcpi_rs1 [31:0] $end
$var wire 32 C pcpi_rs2 [31:0] $end
$var wire 1 D instr_any_div_rem $end
$var reg 1 E pcpi_wr $end
$var reg 32 F pcpi_rd [31:0] $end
$var reg 1 G pcpi_wait $end
$var reg 1 H pcpi_ready $end
$var reg 1 I instr_div $end
$var reg 1 J instr_divu $end
$var reg 1 K instr_rem $end
$var reg 1 L instr_remu $end
$var reg 1 M pcpi_wait_q $end
$var wire 1 N start $end
$var reg 32 O quotient_msk [31:0] $end
$var reg 1 P running $end
$var wire 1 Q \:X_3 $end
$var wire 1 R \:X_4 $end
$var wire 1 S clk $end
$upscope $end
$scope module pcpi_mul $end
$var wire 1 T \:X_3556 $end
$var wire 1 U resetn $end
$var wire 1 V pcpi_valid $end
$var wire 32 W pcpi_insn [31:0] $end
$var wire 32 X pcpi_rs1 [31:0] $end
$var wire 32 Y pcpi_rs2 [31:0] $end
$var wire 1 Z instr_any_mul $end
$var wire 1 [ pcpi_wr $end
$var wire 32 \ pcpi_rd [31:0] $end
$var wire 1 ] pcpi_wait $end
$var wire 1 ^ pcpi_ready $end
$var wire 1 _ instr_mul $end
$var wire 1 ` instr_mulh $end
$var wire 1 a instr_mulhsu $end
$var wire 1 b instr_mulhu $end
$var reg 4 c active [3:0] $end
$var wire 1 d pcpi_insn_valid $end
$var wire 1 e clk $end
$upscope $end
$var reg 1 f is_slti_blt_slt $end
$var reg 1 g is_sltiu_bltu_sltu $end
$var reg 1 h is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 i is_lbu_lhu_lw $end
$var reg 1 j is_alu_reg_imm $end
$var reg 1 k is_alu_reg_reg $end
$var reg 1 l is_compare $end
$var wire 1 m is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var reg 32 n q_insn_opcode [31:0] $end
$var reg 1 o dbg_next $end
$var wire 1 p launch_next_insn $end
$var wire 1 q \:X_492 $end
$var wire 1 r \:X_491 $end
$var wire 1 s \:X_490 $end
$var wire 1 t \:X_489 $end
$var wire 1 u \:X_488 $end
$var wire 1 v \:X_487 $end
$var wire 1 w \:X_486 $end
$var wire 1 x \:X_485 $end
$var wire 1 y \:X_484 $end
$var wire 1 z \:X_483 $end
$var wire 1 { \:X_482 $end
$var wire 1 | \:X_481 $end
$var wire 1 } \:X_480 $end
$var wire 1 ~ \:X_479 $end
$var wire 1 !! \:X_478 $end
$var wire 1 "! \:X_477 $end
$var wire 1 #! \:X_476 $end
$var wire 1 $! \:X_475 $end
$var wire 1 %! \:X_474 $end
$var wire 1 &! \:X_473 $end
$var wire 1 '! \:X_472 $end
$var wire 1 (! \:X_471 $end
$var wire 1 )! \:X_470 $end
$var wire 1 *! \:X_469 $end
$var wire 1 +! \:X_468 $end
$var wire 1 ,! \:X_467 $end
$var wire 1 -! \:X_466 $end
$var wire 1 .! \:X_465 $end
$var wire 1 /! \:X_464 $end
$var wire 1 0! \:X_463 $end
$var wire 1 1! \:X_462 $end
$var wire 1 2! \:X_461 $end
$var wire 1 3! \:X_64 $end
$var wire 1 4! \:X_256 $end
$var wire 1 5! \:X_220 $end
$var wire 1 6! \:X_221 $end
$var wire 1 7! \:X_222 $end
$var wire 1 8! \:X_223 $end
$var wire 1 9! \:X_224 $end
$var wire 1 :! \:X_225 $end
$var wire 1 ;! \:X_226 $end
$var wire 1 <! \:X_227 $end
$var wire 1 =! \:X_228 $end
$var wire 1 >! \:X_229 $end
$var wire 1 ?! \:X_230 $end
$var wire 1 @! \:X_231 $end
$var wire 1 A! \:X_232 $end
$var wire 1 B! \:X_233 $end
$var wire 1 C! \:X_234 $end
$var wire 1 D! \:X_235 $end
$var wire 1 E! \:X_236 $end
$var wire 1 F! \:X_237 $end
$var wire 1 G! \:X_238 $end
$var wire 1 H! \:X_239 $end
$var wire 1 I! \:X_240 $end
$var wire 1 J! \:X_241 $end
$var wire 1 K! \:X_242 $end
$var wire 1 L! \:X_243 $end
$var wire 1 M! \:X_244 $end
$var wire 1 N! \:X_245 $end
$var wire 1 O! \:X_246 $end
$var wire 1 P! \:X_247 $end
$var wire 1 Q! \:X_248 $end
$var wire 1 R! \:X_249 $end
$var wire 1 S! \:X_250 $end
$var wire 1 T! \:X_251 $end
$var wire 1 U! \:X_252 $end
$var wire 1 V! \:X_253 $end
$var wire 1 W! \:X_254 $end
$var wire 1 X! \:X_255 $end
$var wire 1 Y! \:X_145 $end
$var wire 1 Z! \:X_146 $end
$var wire 1 [! \:X_147 $end
$var wire 1 \! \:X_148 $end
$var wire 1 ]! \:X_149 $end
$var wire 1 ^! \:X_150 $end
$var wire 1 _! \:X_151 $end
$var wire 1 `! \:X_152 $end
$var wire 1 a! \:X_153 $end
$var wire 1 b! \:X_154 $end
$var wire 1 c! \:X_155 $end
$var wire 1 d! \:X_156 $end
$var wire 1 e! \:X_157 $end
$var wire 1 f! \:X_158 $end
$var wire 1 g! \:X_159 $end
$var wire 1 h! \:X_160 $end
$var wire 1 i! resetn $end
$var reg 1 j! trap $end
$var reg 1 k! mem_valid $end
$var wire 1 l! mem_ready $end
$var wire 32 m! mem_rdata [31:0] $end
$var wire 1 n! mem_la_read $end
$var wire 1 o! \:X_357 $end
$var wire 1 p! \:X_358 $end
$var wire 1 q! \:X_359 $end
$var wire 1 r! \:X_360 $end
$var wire 1 s! \:X_361 $end
$var wire 1 t! \:X_362 $end
$var wire 1 u! \:X_363 $end
$var wire 1 v! \:X_364 $end
$var wire 1 w! \:X_365 $end
$var wire 1 x! \:X_366 $end
$var wire 1 y! \:X_367 $end
$var wire 1 z! \:X_368 $end
$var wire 1 {! \:X_369 $end
$var wire 1 |! \:X_370 $end
$var wire 1 }! \:X_371 $end
$var wire 1 ~! \:X_372 $end
$var wire 1 !" \:X_373 $end
$var wire 1 "" \:X_374 $end
$var wire 1 #" \:X_375 $end
$var wire 1 $" \:X_376 $end
$var wire 1 %" \:X_377 $end
$var wire 1 &" \:X_378 $end
$var wire 1 '" \:X_379 $end
$var wire 1 (" \:X_380 $end
$var wire 1 )" \:X_381 $end
$var wire 1 *" \:X_382 $end
$var wire 1 +" \:X_383 $end
$var wire 1 ," \:X_384 $end
$var wire 1 -" \:X_385 $end
$var wire 1 ." \:X_386 $end
$var wire 1 /" \:X_387 $end
$var wire 1 0" \:X_32 $end
$var wire 1 1" \:X_33 $end
$var wire 1 2" \:X_34 $end
$var wire 1 3" \:X_35 $end
$var wire 1 4" \:X_36 $end
$var wire 1 5" \:X_37 $end
$var wire 1 6" \:X_38 $end
$var wire 1 7" \:X_39 $end
$var wire 1 8" \:X_40 $end
$var wire 1 9" \:X_41 $end
$var wire 1 :" \:X_42 $end
$var wire 1 ;" \:X_43 $end
$var wire 1 <" \:X_44 $end
$var wire 1 =" \:X_45 $end
$var wire 1 >" \:X_46 $end
$var wire 1 ?" \:X_47 $end
$var wire 1 @" \:X_48 $end
$var wire 1 A" \:X_49 $end
$var wire 1 B" \:X_50 $end
$var wire 1 C" \:X_51 $end
$var wire 1 D" \:X_52 $end
$var wire 1 E" \:X_53 $end
$var wire 1 F" \:X_54 $end
$var wire 1 G" \:X_55 $end
$var reg 1 H" mem_do_prefetch $end
$var reg 1 I" mem_do_rinst $end
$var reg 1 J" mem_do_rdata $end
$var reg 1 K" mem_do_wdata $end
$var wire 1 L" mem_xfer $end
$var reg 1 M" mem_la_secondword $end
$var reg 1 N" pcpi_timeout $end
$var reg 1 O" do_waitirq $end
$var wire 32 P" alu_out [31:0] $end
$var reg 32 Q" alu_out_q [31:0] $end
$var wire 1 R" alu_out_0 $end
$var reg 1 S" prefetched_high_word $end
$var wire 1 T" clear_prefetched_high_word $end
$var reg 16 U" mem_16bit_buffer [15:0] $end
$var wire 32 V" mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 W" mem_rdata_latched [31:0] $end
$var wire 1 X" mem_la_use_prefetched_high_word $end
$var wire 1 Y" mem_done $end
$var reg 1 Z" instr_lui $end
$var reg 1 [" instr_auipc $end
$var reg 1 \" instr_jal $end
$var reg 1 ]" instr_jalr $end
$var reg 1 ^" instr_beq $end
$var reg 1 _" instr_bne $end
$var reg 1 `" instr_blt $end
$var reg 1 a" instr_bge $end
$var reg 1 b" instr_bltu $end
$var reg 1 c" instr_bgeu $end
$var reg 1 d" instr_lb $end
$var reg 1 e" instr_lh $end
$var reg 1 f" instr_lw $end
$var reg 1 g" instr_lbu $end
$var reg 1 h" instr_lhu $end
$var reg 1 i" instr_sb $end
$var reg 1 j" instr_sh $end
$var reg 1 k" pcpi_valid $end
$var reg 32 l" pcpi_insn [31:0] $end
$var wire 32 m" pcpi_rs1 [31:0] $end
$var wire 32 n" pcpi_rs2 [31:0] $end
$var reg 1 o" rvfi_valid $end
$var reg 32 p" rvfi_insn [31:0] $end
$var reg 64 q" count_cycle [63:0] $end
$var reg 64 r" count_instr [63:0] $end
$var reg 32 s" reg_pc [31:0] $end
$var reg 1 t" is_lui_auipc_jal $end
$var reg 1 u" is_lb_lh_lw_lbu_lhu $end
$var reg 1 v" is_slli_srli_srai $end
$var reg 1 w" is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 x" is_sb_sh_sw $end
$var reg 1 y" is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 32 z" reg_next_pc [31:0] $end
$var reg 32 {" reg_op1 [31:0] $end
$var reg 32 |" reg_op2 [31:0] $end
$var reg 32 }" reg_out [31:0] $end
$var reg 5 ~" reg_sh [4:0] $end
$var reg 32 !# next_insn_opcode [31:0] $end
$var wire 32 "# dbg_insn_opcode [31:0] $end
$var reg 1 ## mem_la_firstword_reg $end
$var reg 1 $# last_mem_valid $end
$var wire 1 %# mem_la_firstword $end
$var wire 32 &# next_pc [31:0] $end
$var reg 32 '# \cpuregs[0] [31:0] $end
$var reg 32 (# \cpuregs[1] [31:0] $end
$var reg 32 )# \cpuregs[2] [31:0] $end
$var reg 32 *# \cpuregs[3] [31:0] $end
$var reg 32 +# \cpuregs[4] [31:0] $end
$var reg 32 ,# \cpuregs[5] [31:0] $end
$var reg 32 -# \cpuregs[6] [31:0] $end
$var reg 32 .# \cpuregs[7] [31:0] $end
$var reg 32 /# \cpuregs[8] [31:0] $end
$var reg 32 0# \cpuregs[9] [31:0] $end
$var reg 32 1# \cpuregs[10] [31:0] $end
$var reg 32 2# \cpuregs[11] [31:0] $end
$var reg 1 3# instr_sw $end
$var reg 1 4# instr_addi $end
$var reg 1 5# instr_slti $end
$var reg 1 6# instr_sltiu $end
$var reg 1 7# instr_xori $end
$var reg 1 8# instr_ori $end
$var reg 1 9# instr_andi $end
$var reg 1 :# instr_slli $end
$var reg 1 ;# instr_srli $end
$var reg 1 <# instr_srai $end
$var reg 1 =# instr_add $end
$var reg 1 ># instr_sub $end
$var reg 1 ?# instr_sll $end
$var reg 1 @# instr_slt $end
$var reg 1 A# instr_sltu $end
$var reg 1 B# instr_xor $end
$var reg 1 C# instr_srl $end
$var reg 1 D# instr_sra $end
$var reg 1 E# instr_or $end
$var reg 1 F# instr_and $end
$var reg 1 G# instr_rdcycle $end
$var reg 1 H# instr_rdcycleh $end
$var reg 1 I# instr_rdinstr $end
$var reg 1 J# instr_rdinstrh $end
$var reg 1 K# instr_ecall_ebreak $end
$var reg 1 L# instr_getq $end
$var reg 1 M# instr_setq $end
$var reg 1 N# instr_retirq $end
$var reg 1 O# instr_maskirq $end
$var reg 1 P# instr_waitirq $end
$var reg 1 Q# instr_timer $end
$var wire 1 R# instr_trap $end
$var reg 5 S# decoded_rd [4:0] $end
$var reg 5 T# decoded_rs1 [4:0] $end
$var reg 5 U# decoded_rs2 [4:0] $end
$var reg 32 V# decoded_imm [31:0] $end
$var reg 32 W# decoded_imm_uj [31:0] $end
$var reg 1 X# decoder_trigger $end
$var reg 1 Y# decoder_trigger_q $end
$var reg 1 Z# decoder_pseudo_trigger $end
$var reg 1 [# decoder_pseudo_trigger_q $end
$var reg 1 \# compressed_instr $end
$var wire 1 ]# \:X_129 $end
$var wire 1 ^# \:X_130 $end
$var wire 1 _# \:X_131 $end
$var wire 1 `# \:X_132 $end
$var wire 1 a# \:X_133 $end
$var wire 1 b# \:X_134 $end
$var wire 1 c# \:X_135 $end
$var wire 1 d# \:X_136 $end
$var wire 1 e# \:X_137 $end
$var wire 1 f# \:X_138 $end
$var wire 1 g# \:X_139 $end
$var wire 1 h# \:X_140 $end
$var wire 1 i# \:X_141 $end
$var wire 1 j# \:X_142 $end
$var wire 1 k# \:X_143 $end
$var wire 1 l# \:X_144 $end
$var reg 1 m# dbg_valid_insn $end
$var reg 32 n# cached_insn_opcode [31:0] $end
$var reg 8 o# cpu_state [7:0] $end
$var reg 2 p# irq_state [1:0] $end
$var reg 1 q# latched_store $end
$var reg 1 r# latched_stalu $end
$var reg 1 s# latched_branch $end
$var reg 1 t# latched_compr $end
$var reg 1 u# latched_is_lu $end
$var reg 1 v# latched_is_lh $end
$var reg 1 w# latched_is_lb $end
$var reg 5 x# latched_rd [4:0] $end
$var reg 4 y# pcpi_timeout_counter [3:0] $end
$var wire 32 z# alu_add_sub [31:0] $end
$var wire 32 {# alu_shl [31:0] $end
$var wire 32 |# alu_shr [31:0] $end
$var wire 1 }# alu_eq $end
$var wire 1 ~# alu_ltu $end
$var wire 1 !$ alu_lts $end
$var reg 1 "$ clear_prefetched_high_word_q $end
$var wire 1 #$ cpuregs_write $end
$var wire 32 $$ cpuregs_wrdata [31:0] $end
$var wire 32 %$ cpuregs_rs1 [31:0] $end
$var wire 32 &$ cpuregs_rs2 [31:0] $end
$var wire 1 '$ \:X_56 $end
$var wire 1 ($ \:X_57 $end
$var wire 1 )$ \:X_58 $end
$var wire 1 *$ \:X_59 $end
$var wire 1 +$ \:X_60 $end
$var wire 1 ,$ \:X_61 $end
$var wire 1 -$ \:X_62 $end
$var wire 1 .$ \:X_63 $end
$var reg 32 /$ \cpuregs[12] [31:0] $end
$var reg 32 0$ \cpuregs[13] [31:0] $end
$var reg 32 1$ \cpuregs[14] [31:0] $end
$var reg 32 2$ \cpuregs[15] [31:0] $end
$var reg 32 3$ \cpuregs[16] [31:0] $end
$var reg 32 4$ \cpuregs[17] [31:0] $end
$var reg 32 5$ \cpuregs[18] [31:0] $end
$var reg 32 6$ \cpuregs[19] [31:0] $end
$var reg 32 7$ \cpuregs[20] [31:0] $end
$var reg 32 8$ \cpuregs[21] [31:0] $end
$var reg 32 9$ \cpuregs[22] [31:0] $end
$var reg 32 :$ \cpuregs[23] [31:0] $end
$var reg 32 ;$ \cpuregs[24] [31:0] $end
$var reg 32 <$ \cpuregs[25] [31:0] $end
$var reg 32 =$ \cpuregs[26] [31:0] $end
$var reg 32 >$ \cpuregs[27] [31:0] $end
$var reg 32 ?$ \cpuregs[28] [31:0] $end
$var reg 32 @$ \cpuregs[29] [31:0] $end
$var reg 32 A$ \cpuregs[30] [31:0] $end
$var reg 32 B$ \cpuregs[31] [31:0] $end
$var wire 1 C$ pcpi_mul_wr $end
$var wire 32 D$ pcpi_mul_rd [31:0] $end
$var wire 1 E$ pcpi_mul_wait $end
$var wire 1 F$ pcpi_mul_ready $end
$var wire 1 G$ pcpi_div_wr $end
$var wire 32 H$ pcpi_div_rd [31:0] $end
$var wire 1 I$ pcpi_div_wait $end
$var wire 1 J$ pcpi_div_ready $end
$var wire 1 K$ pcpi_int_wr $end
$var wire 32 L$ pcpi_int_rd [31:0] $end
$var wire 1 M$ pcpi_int_wait $end
$var wire 1 N$ pcpi_int_ready $end
$var reg 2 O$ mem_state [1:0] $end
$var reg 2 P$ mem_wordsize [1:0] $end
$var wire 32 Q$ mem_rdata_word [31:0] $end
$var reg 32 R$ mem_rdata_q [31:0] $end
$var wire 1 S$ \:X_388 $end
$var wire 1 T$ \:X_389 $end
$var wire 1 U$ \:X_390 $end
$var wire 1 V$ \:X_391 $end
$var wire 1 W$ \:X_392 $end
$var wire 1 X$ \:X_393 $end
$var wire 1 Y$ \:X_394 $end
$var wire 1 Z$ \:X_395 $end
$var wire 1 [$ \:X_396 $end
$var wire 1 \$ \:X_397 $end
$var wire 1 ]$ \:X_398 $end
$var wire 1 ^$ \:X_399 $end
$var wire 1 _$ \:X_400 $end
$var wire 1 `$ \:X_401 $end
$var wire 1 a$ \:X_402 $end
$var wire 1 b$ \:X_403 $end
$var wire 1 c$ \:X_404 $end
$var wire 1 d$ \:X_405 $end
$var wire 1 e$ \:X_406 $end
$var wire 1 f$ \:X_407 $end
$var wire 1 g$ \:X_408 $end
$var wire 1 h$ \:X_409 $end
$var wire 1 i$ \:X_410 $end
$var wire 1 j$ \:X_411 $end
$var wire 1 k$ \:X_412 $end
$var wire 1 l$ \:X_413 $end
$var wire 1 m$ \:X_414 $end
$var wire 1 n$ \:X_415 $end
$var wire 1 o$ \:X_416 $end
$var wire 1 p$ \:X_417 $end
$var wire 1 q$ \:X_418 $end
$var wire 1 r$ \:X_419 $end
$var wire 1 s$ \:X_420 $end
$var wire 1 t$ clk $end
$upscope $end
$var wire 1 u$ rvfi_valid $end
$var wire 32 v$ rvfi_insn [31:0] $end
$var wire 1 w$ mem_ready $end
$var wire 32 x$ mem_rdata [31:0] $end
$var wire 1 y$ reset $end
$var wire 1 z$ clock $end
$upscope $end
$scope module checker_inst $end
$scope module insn_spec $end
$var wire 1 {$ rvfi_valid $end
$var wire 32 |$ rvfi_insn [31:0] $end
$var wire 1 }$ spec_valid $end
$var wire 32 ~$ insn_padding [31:0] $end
$var wire 7 !% insn_funct7 [6:0] $end
$var wire 3 "% insn_funct3 [2:0] $end
$var wire 7 #% insn_opcode [6:0] $end
$upscope $end
$var wire 1 $% spec_valid $end
$var wire 1 %% valid $end
$var wire 1 &% reset $end
$var wire 1 '% check $end
$var wire 1 (% rvfi_valid $end
$var wire 32 )% rvfi_insn [31:0] $end
$var wire 1 *% clock $end
$upscope $end
$var wire 1 +% \:jasper_formal_reset $end
$var wire 1 ,% reset $end
$var wire 1 -% rvfi_valid $end
$var wire 32 .% rvfi_insn [31:0] $end
$var reg 8 /% cycle_reg [7:0] $end
$var wire 8 0% cycle [7:0] $end
$var wire 1 1% \:jasper_formal_clock $end
$var wire 1 2% clock $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
1?
0@
b00000010000000000001000000110011 A
b11111111111111111111111111111110 B
b00000000000011111111111111111111 C
0D
0E
b00000000000000000000000000000000 F
0G
0H
0I
0J
0K
0L
0M
0N
b00000000000000000000000000000000 O
0P
0Q
0R
1S
0T
1U
0V
b00000010000000000001000000110011 W
b11111111111111111111111111111110 X
b00000000000011111111111111111111 Y
0Z
0[
b00000000000000000000000000000000 \
0]
0^
0_
0`
0a
0b
b0000 c
0d
1e
0f
0g
0h
0i
0j
1k
0l
0m
b00000001111111111110000000000000 n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
15!
16!
17!
18!
19!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
1Y!
1Z!
1[!
1\!
1]!
1^!
1_!
1`!
1a!
1b!
1c!
1d!
1e!
1f!
1g!
1h!
1i!
0j!
0k!
0l!
b00000000000000000000000000000011 m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
b00000000000000000000000000000000 P"
b00000000000000000000000000000000 Q"
0R"
0S"
0T"
b0000000000000000 U"
b00000000001000001100110000000001 V"
b00000000001000001100110000000001 W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
b00000010000000000001000000110011 l"
b11111111111111111111111111111110 m"
b00000000000011111111111111111111 n"
0o"
b00000001111111111110000000000000 p"
b0000000000000000000000000000000000000000000000000000000000000000 q"
b0000000000000000000000000000000000000000000000000000000000000000 r"
b00000000000000000000000000000000 s"
0t"
1u"
0v"
0w"
0x"
0y"
b00000000000000000000000000000000 z"
b11111111111111111111111111111110 {"
b00000000000011111111111111111111 |"
b00000000000000000000000000000000 }"
b11111 ~"
b11111111111111110000000000000011 !#
b00000001111111111110000000000000 "#
0##
0$#
0%#
b00000000000000000000000000000000 &#
b00000000000000000000000000000000 '#
b00000000000000000000000000000000 (#
b00000000000000000000000000000000 )#
b00000000000000000000000000000000 *#
b00000000000000000000000000000000 +#
b00000000000000000000000000000000 ,#
b00000000000000000000000000000000 -#
b00000000000000000000000000000000 .#
b10000000000000000000000000000000 /#
b00000000000000000000000000000000 0#
b00000000000000000000000000000000 1#
b00000000000000000000000000000000 2#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
1K#
0L#
0M#
0N#
0O#
1P#
0Q#
0R#
b11111 S#
b11100 T#
b01000 U#
b00000000000000000000000000000011 V#
b00000000000000000000000000000000 W#
0X#
0Y#
0Z#
0[#
0\#
1]#
1^#
1_#
1`#
1a#
1b#
1c#
1d#
1e#
1f#
1g#
1h#
1i#
1j#
1k#
1l#
0m#
b00000000000000000000000000000000 n#
b01000000 o#
b00 p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
b00111 x#
b1111 y#
b00000000000011111111111111111101 z#
b00000000000000000000000000000000 {#
b00000000000000000000000000000001 |#
0}#
0~#
1!$
1"$
0#$
b11111111111111111111111111111111 $$
b00000000000000000000000000000000 %$
b10000000000000000000000000000000 &$
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
b00000000000000000000000000000000 /$
b00000000000000000000000000000000 0$
b00000000000000000000000000000000 1$
b00000000000000000000000000000000 2$
b00000000000000000000000000000000 3$
b00000000000000000000000000000000 4$
b00000000000000000000000000000000 5$
b00000000000000000000000000000000 6$
b00000000000000000000000000000000 7$
b00000000000000000000000000000000 8$
b00000000000000000000000000000000 9$
b00000000000000000000000000000000 :$
b00000000000000000000000000000000 ;$
b00000000000000000000000000000000 <$
b00000000000000000000000000000000 =$
b00000000000000000000000000000000 >$
b00000000000000000000000000000000 ?$
b00000000000000000000000000000000 @$
b00000000000000000000000000000000 A$
b00000000000000000000000000000000 B$
0C$
b00000000000000000000000000000000 D$
0E$
0F$
0G$
b00000000000000000000000000000000 H$
0I$
0J$
0K$
b00000000000000000000000000000000 L$
0M$
0N$
b00 O$
b10 P$
b00000000000000000000000000000000 Q$
b00000000001000001100110000000001 R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
1t$
0u$
b00000001111111111110000000000000 v$
0w$
b00000000000000000000000000000011 x$
0y$
1z$
0{$
b00000001111111111110000000000000 |$
0}$
b00000000000000000000000000000000 ~$
b0000000 !%
b110 "%
b0000000 #%
0$%
0%%
0&%
0'%
0(%
b00000001111111111110000000000000 )%
1*%
0+%
0,%
0-%
b00000001111111111110000000000000 .%
b00000001 /%
b00000001 0%
11%
12%
#5
0S
0e
0t$
0z$
0*%
01%
02%
#10
1S
1e
1n!
1I"
b0000000000000000000000000000000000000000000000000000000000000001 q"
b11111 x#
0"$
b00 P$
b00000000000000000000000000000011 Q$
1t$
1z$
1*%
b00000010 /%
b00000010 0%
11%
12%
#15
0S
0e
0t$
0z$
0*%
01%
02%
#20
1S
1e
1k!
1l!
b11000000000000001100000000010001 m!
0n!
1L"
b11000000000000001100000000010001 V"
b11000000000000001100000000010001 W"
1Y"
b0000000000000000000000000000000000000000000000000000000000000010 q"
b01 O$
b11000000000000001100000000010001 Q$
1t$
1w$
b11000000000000001100000000010001 x$
1z$
1*%
b00000011 /%
b00000011 0%
11%
12%
#25
0S
0e
0t$
0z$
0*%
01%
02%
#30
1S
1e
1h
0k
1p
0k!
0l!
b00000000000000000000000000000000 m!
0I"
0L"
1S"
b1100000000000000 U"
b00000000000000001000001000010001 V"
b00000000000000001000001000010001 W"
0Y"
b0000000000000000000000000000000000000000000000000000000000000011 q"
0u"
b11000000000000001100000000010001 !#
0P#
1R#
b00000 S#
b01000 T#
b00000 U#
b00000000000000000000000000000100 W#
1X#
1\#
b10000000000000000000000000000000 %$
b00000000000000000000000000000000 &$
b00 O$
b00000000000000000000000000000000 Q$
b00000000000000001000001000010001 R$
1t$
0w$
b00000000000000000000000000000000 x$
1z$
1*%
b00000100 /%
b00000100 0%
11%
12%
#35
0S
0e
0t$
0z$
0*%
01%
02%
#40
b00000000000000001000001000010001 A
1S
b00000000000000001000001000010001 W
1e
1o
0p
1z
0f!
0g!
1H"
b00000000000000001100000000000000 W"
1X"
1^"
b00000000000000001000001000010001 l"
b0000000000000000000000000000000000000000000000000000000000000100 q"
b0000000000000000000000000000000000000000000000000000000000000001 r"
b00000000000000000000000000000010 z"
b00000000000000001100000000010001 "#
1%#
b00000000000000000000000000000010 &#
0K#
0R#
b00000000000000000000000000000100 V#
0X#
1Y#
1m#
b00100000 o#
1t#
b00000 x#
b11111111111111111111111111111001 $$
1t$
1z$
1*%
b00000101 /%
b00000101 0%
11%
12%
#45
0S
0e
0t$
0z$
0*%
01%
02%
#50
b10000000000000000000000000000000 B
b00000000000000000000000000000000 C
1S
b10000000000000000000000000000000 X
b00000000000000000000000000000000 Y
1e
1l
b00000000000000001100000000010001 n
0o
0z
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0h!
1I"
1L"
b00000000000000000000000000000000 V"
1Y"
b10000000000000000000000000000000 m"
b00000000000000000000000000000000 n"
b00000000000000001100000000010001 p"
b0000000000000000000000000000000000000000000000000000000000000101 q"
b10000000000000000000000000000000 {"
b00000000000000000000000000000000 |"
b00000 ~"
1##
0Y#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
0l#
b00000000000000001100000000010001 n#
b00001000 o#
b10000000000000000000000000000000 z#
b10000000000000000000000000000000 {#
b10000000000000000000000000000000 |#
b00000000000000000000000000000000 $$
b01 O$
1t$
b00000000000000001100000000010001 v$
1z$
b00000000000000001100000000010001 |$
b100 "%
b0010001 #%
b00000000000000001100000000010001 )%
1*%
b00000000000000001100000000010001 .%
b00000110 /%
b00000110 0%
11%
12%
#55
0S
0e
0t$
0z$
0*%
01%
02%
#60
1S
1e
0h
1p
0H"
0I"
0L"
b0000000000000000 U"
b00000000000000001010000000000000 V"
b00000000000000001010000000000000 W"
0X"
0Y"
b0000000000000000000000000000000000000000000000000000000000000110 q"
1x"
b00000000000000000000000000000100 }"
b11111 ~"
b00000000000000001100000000000000 !#
0%#
b01000 U#
b00000000000000000000000000000000 W#
1X#
b01000000 o#
b10000000000000000000000000000000 &$
b00 O$
b00000000000000001010000000000000 R$
1t$
1z$
1*%
b00000111 /%
b00000111 0%
11%
12%
#65
0S
0e
0t$
0z$
0*%
01%
02%
#70
b00000000000000001010000000000000 A
1S
b00000000000000001010000000000000 W
1e
0l
1o
0p
1n!
1H"
0^"
b00000000000000001010000000000000 l"
1o"
b0000000000000000000000000000000000000000000000000000000000000111 q"
b0000000000000000000000000000000000000000000000000000000000000010 r"
b00000000000000000000000000000010 s"
b00000000000000000000000000000100 z"
b00000000000000000000000000000000 }"
b00000000000000001100000000000000 "#
0##
b00000000000000000000000000000100 &#
13#
b00000000000000000000000000000000 V#
0X#
1Y#
b00100000 o#
1t$
1u$
1z$
1{$
1%%
1(%
1*%
1-%
b00001000 /%
b00001000 0%
11%
12%
#75
0S
0e
0t$
0z$
0*%
01%
02%
#80
