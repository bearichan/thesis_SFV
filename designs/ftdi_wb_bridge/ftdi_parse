Source:  (at 34)
  Description:  (at 34)
    ModuleDef: ftdi_if (at 34)
      Paramlist:  (at 39)
        Decl:  (at 40)
          Parameter: CLK_DIV, False (at 40)
            Rvalue:  (at 40)
              IntConst: 2 (at 40)
        Decl:  (at 41)
          Parameter: LITTLE_ENDIAN, False (at 41)
            Rvalue:  (at 41)
              IntConst: 1 (at 41)
        Decl:  (at 42)
          Parameter: ADDR_W, False (at 42)
            Rvalue:  (at 42)
              IntConst: 32 (at 42)
        Decl:  (at 43)
          Parameter: GP_OUTPUTS, False (at 43)
            Rvalue:  (at 43)
              IntConst: 8 (at 43)
        Decl:  (at 44)
          Parameter: GP_INPUTS, False (at 44)
            Rvalue:  (at 44)
              IntConst: 8 (at 44)
        Decl:  (at 45)
          Parameter: GP_IN_EVENT_MASK, False (at 45)
            Rvalue:  (at 45)
              IntConst: 8'h00 (at 45)
      Portlist:  (at 51)
        Ioport:  (at 52)
          Input: clk_i, False (at 52)
        Ioport:  (at 53)
          Input: rst_i, False (at 53)
        Ioport:  (at 56)
          Input: ftdi_rxf_i, False (at 56)
        Ioport:  (at 57)
          Input: ftdi_txe_i, False (at 57)
        Ioport:  (at 58)
          Output: ftdi_siwua_o, False (at 58)
        Ioport:  (at 59)
          Output: ftdi_wr_o, False (at 59)
        Ioport:  (at 60)
          Output: ftdi_rd_o, False (at 60)
        Ioport:  (at 61)
          Inout: ftdi_d_io, False (at 61)
            Width:  (at 61)
              IntConst: 7 (at 61)
              IntConst: 0 (at 61)
        Ioport:  (at 64)
          Output: gp_o, False (at 64)
            Width:  (at 64)
              Minus:  (at 64)
                Identifier: GP_OUTPUTS (at 64)
                IntConst: 1 (at 64)
              IntConst: 0 (at 64)
        Ioport:  (at 65)
          Input: gp_i, False (at 65)
            Width:  (at 65)
              Minus:  (at 65)
                Identifier: GP_INPUTS (at 65)
                IntConst: 1 (at 65)
              IntConst: 0 (at 65)
        Ioport:  (at 68)
          Output: mem_addr_o, False (at 68)
            Width:  (at 68)
              Minus:  (at 68)
                Identifier: ADDR_W (at 68)
                IntConst: 1 (at 68)
              IntConst: 0 (at 68)
        Ioport:  (at 69)
          Output: mem_data_o, False (at 69)
            Width:  (at 69)
              IntConst: 31 (at 69)
              IntConst: 0 (at 69)
        Ioport:  (at 70)
          Input: mem_data_i, False (at 70)
            Width:  (at 70)
              IntConst: 31 (at 70)
              IntConst: 0 (at 70)
        Ioport:  (at 71)
          Output: mem_sel_o, False (at 71)
            Width:  (at 71)
              IntConst: 3 (at 71)
              IntConst: 0 (at 71)
        Ioport:  (at 72)
          Output: mem_we_o, False (at 72)
          Reg: mem_we_o, False (at 72)
        Ioport:  (at 73)
          Output: mem_stb_o, False (at 73)
          Reg: mem_stb_o, False (at 73)
        Ioport:  (at 74)
          Output: mem_cyc_o, False (at 74)
        Ioport:  (at 75)
          Input: mem_ack_i, False (at 75)
        Ioport:  (at 76)
          Input: mem_stall_i, False (at 76)
      Decl:  (at 82)
        Localparam: CMD_NOP, False (at 82)
          Rvalue:  (at 82)
            IntConst: 4'd0 (at 82)
      Decl:  (at 83)
        Localparam: CMD_WR, False (at 83)
          Rvalue:  (at 83)
            IntConst: 4'd1 (at 83)
      Decl:  (at 84)
        Localparam: CMD_RD, False (at 84)
          Rvalue:  (at 84)
            IntConst: 4'd2 (at 84)
      Decl:  (at 85)
        Localparam: CMD_GP_WR, False (at 85)
          Rvalue:  (at 85)
            IntConst: 4'd3 (at 85)
      Decl:  (at 86)
        Localparam: CMD_GP_RD, False (at 86)
          Rvalue:  (at 86)
            IntConst: 4'd4 (at 86)
      Decl:  (at 87)
        Localparam: CMD_GP_RD_CLR, False (at 87)
          Rvalue:  (at 87)
            IntConst: 4'd5 (at 87)
      Decl:  (at 93)
        Localparam: LEN_W, False (at 93)
          Rvalue:  (at 93)
            IntConst: 12 (at 93)
      Decl:  (at 95)
        Localparam: DATA_W, False (at 95)
          Rvalue:  (at 95)
            IntConst: 8 (at 95)
      Decl:  (at 97)
        Localparam: STATE_W, False (at 97)
          Rvalue:  (at 97)
            IntConst: 4 (at 97)
      Decl:  (at 98)
        Localparam: STATE_IDLE, False (at 98)
          Rvalue:  (at 98)
            IntConst: 4'd0 (at 98)
      Decl:  (at 99)
        Localparam: STATE_CMD, False (at 99)
          Rvalue:  (at 99)
            IntConst: 4'd1 (at 99)
      Decl:  (at 100)
        Localparam: STATE_LEN, False (at 100)
          Rvalue:  (at 100)
            IntConst: 4'd2 (at 100)
      Decl:  (at 101)
        Localparam: STATE_ADDR0, False (at 101)
          Rvalue:  (at 101)
            IntConst: 4'd3 (at 101)
      Decl:  (at 102)
        Localparam: STATE_ADDR1, False (at 102)
          Rvalue:  (at 102)
            IntConst: 4'd4 (at 102)
      Decl:  (at 103)
        Localparam: STATE_ADDR2, False (at 103)
          Rvalue:  (at 103)
            IntConst: 4'd5 (at 103)
      Decl:  (at 104)
        Localparam: STATE_ADDR3, False (at 104)
          Rvalue:  (at 104)
            IntConst: 4'd6 (at 104)
      Decl:  (at 105)
        Localparam: STATE_WRITE, False (at 105)
          Rvalue:  (at 105)
            IntConst: 4'd7 (at 105)
      Decl:  (at 106)
        Localparam: STATE_READ, False (at 106)
          Rvalue:  (at 106)
            IntConst: 4'd8 (at 106)
      Decl:  (at 107)
        Localparam: STATE_DATA0, False (at 107)
          Rvalue:  (at 107)
            IntConst: 4'd9 (at 107)
      Decl:  (at 108)
        Localparam: STATE_DATA1, False (at 108)
          Rvalue:  (at 108)
            IntConst: 4'd10 (at 108)
      Decl:  (at 109)
        Localparam: STATE_DATA2, False (at 109)
          Rvalue:  (at 109)
            IntConst: 4'd11 (at 109)
      Decl:  (at 110)
        Localparam: STATE_DATA3, False (at 110)
          Rvalue:  (at 110)
            IntConst: 4'd12 (at 110)
      Decl:  (at 111)
        Localparam: STATE_GP_WR, False (at 111)
          Rvalue:  (at 111)
            IntConst: 4'd13 (at 111)
      Decl:  (at 112)
        Localparam: STATE_GP_RD, False (at 112)
          Rvalue:  (at 112)
            IntConst: 4'd14 (at 112)
      Decl:  (at 119)
        Wire: data_tx_w, False (at 119)
          Width:  (at 119)
            Minus:  (at 119)
              Identifier: DATA_W (at 119)
              IntConst: 1 (at 119)
            IntConst: 0 (at 119)
      Decl:  (at 120)
        Wire: data_rx_w, False (at 120)
          Width:  (at 120)
            Minus:  (at 120)
              Identifier: DATA_W (at 120)
              IntConst: 1 (at 120)
            IntConst: 0 (at 120)
      Decl:  (at 121)
        Wire: wr_w, False (at 121)
      Decl:  (at 122)
        Wire: rd_w, False (at 122)
      Decl:  (at 123)
        Wire: wr_accept_w, False (at 123)
      Decl:  (at 124)
        Wire: rx_ready_w, False (at 124)
      Decl:  (at 127)
        Reg: state_q, False (at 127)
          Width:  (at 127)
            Minus:  (at 127)
              Identifier: STATE_W (at 127)
              IntConst: 1 (at 127)
            IntConst: 0 (at 127)
      Decl:  (at 130)
        Reg: len_q, False (at 130)
          Width:  (at 130)
            Minus:  (at 130)
              Identifier: LEN_W (at 130)
              IntConst: 1 (at 130)
            IntConst: 0 (at 130)
      Decl:  (at 133)
        Reg: mem_addr_q, False (at 133)
          Width:  (at 133)
            IntConst: 31 (at 133)
            IntConst: 0 (at 133)
      Decl:  (at 134)
        Reg: mem_cyc_q, False (at 134)
      Decl:  (at 137)
        Reg: data_idx_q, False (at 137)
          Width:  (at 137)
            IntConst: 1 (at 137)
            IntConst: 0 (at 137)
      Decl:  (at 140)
        Reg: data_q, False (at 140)
          Width:  (at 140)
            IntConst: 31 (at 140)
            IntConst: 0 (at 140)
      Decl:  (at 143)
        Reg: gp_out_q, False (at 143)
          Width:  (at 143)
            Minus:  (at 143)
              Identifier: GP_OUTPUTS (at 143)
              IntConst: 1 (at 143)
            IntConst: 0 (at 143)
      Decl:  (at 146)
        Reg: gp_in_q, False (at 146)
          Width:  (at 146)
            Minus:  (at 146)
              Identifier: GP_INPUTS (at 146)
              IntConst: 1 (at 146)
            IntConst: 0 (at 146)
      Decl:  (at 151)
        Reg: next_state_r, False (at 151)
          Width:  (at 151)
            Minus:  (at 151)
              Identifier: STATE_W (at 151)
              IntConst: 1 (at 151)
            IntConst: 0 (at 151)
      Always:  (at 152)
        SensList:  (at 152)
          Sens: all (at 152)
        Block: None (at 153)
          BlockingSubstitution:  (at 154)
            Lvalue:  (at 154)
              Identifier: next_state_r (at 154)
            Rvalue:  (at 154)
              Identifier: state_q (at 154)
          CaseStatement:  (at 156)
            Identifier: state_q (at 156)
            Case:  (at 160)
              Identifier: STATE_IDLE (at 160)
              Block: None (at 161)
                IfStatement:  (at 162)
                  Identifier: rx_ready_w (at 162)
                  BlockingSubstitution:  (at 163)
                    Lvalue:  (at 163)
                      Identifier: next_state_r (at 163)
                    Rvalue:  (at 163)
                      Identifier: STATE_CMD (at 163)
            Case:  (at 168)
              Identifier: STATE_CMD (at 168)
              Block: None (at 169)
                IfStatement:  (at 170)
                  Eq:  (at 170)
                    Partselect:  (at 170)
                      Identifier: data_rx_w (at 170)
                      IntConst: 3 (at 170)
                      IntConst: 0 (at 170)
                    Identifier: CMD_NOP (at 170)
                  BlockingSubstitution:  (at 171)
                    Lvalue:  (at 171)
                      Identifier: next_state_r (at 171)
                    Rvalue:  (at 171)
                      Identifier: STATE_IDLE (at 171)
                  IfStatement:  (at 172)
                    Lor:  (at 172)
                      Eq:  (at 172)
                        Partselect:  (at 172)
                          Identifier: data_rx_w (at 172)
                          IntConst: 3 (at 172)
                          IntConst: 0 (at 172)
                        Identifier: CMD_WR (at 172)
                      Eq:  (at 172)
                        Partselect:  (at 172)
                          Identifier: data_rx_w (at 172)
                          IntConst: 3 (at 172)
                          IntConst: 0 (at 172)
                        Identifier: CMD_RD (at 172)
                    BlockingSubstitution:  (at 173)
                      Lvalue:  (at 173)
                        Identifier: next_state_r (at 173)
                      Rvalue:  (at 173)
                        Identifier: STATE_LEN (at 173)
                    IfStatement:  (at 174)
                      Eq:  (at 174)
                        Partselect:  (at 174)
                          Identifier: data_rx_w (at 174)
                          IntConst: 3 (at 174)
                          IntConst: 0 (at 174)
                        Identifier: CMD_GP_WR (at 174)
                      BlockingSubstitution:  (at 175)
                        Lvalue:  (at 175)
                          Identifier: next_state_r (at 175)
                        Rvalue:  (at 175)
                          Identifier: STATE_GP_WR (at 175)
                      IfStatement:  (at 176)
                        Eq:  (at 176)
                          Partselect:  (at 176)
                            Identifier: data_rx_w (at 176)
                            IntConst: 3 (at 176)
                            IntConst: 0 (at 176)
                          Identifier: CMD_GP_RD (at 176)
                        BlockingSubstitution:  (at 177)
                          Lvalue:  (at 177)
                            Identifier: next_state_r (at 177)
                          Rvalue:  (at 177)
                            Identifier: STATE_GP_RD (at 177)
                        BlockingSubstitution:  (at 179)
                          Lvalue:  (at 179)
                            Identifier: next_state_r (at 179)
                          Rvalue:  (at 179)
                            Identifier: STATE_IDLE (at 179)
            Case:  (at 184)
              Identifier: STATE_LEN (at 184)
              Block: None (at 185)
                IfStatement:  (at 186)
                  Identifier: rx_ready_w (at 186)
                  BlockingSubstitution:  (at 187)
                    Lvalue:  (at 187)
                      Identifier: next_state_r (at 187)
                    Rvalue:  (at 187)
                      Identifier: STATE_ADDR0 (at 187)
            Case:  (at 192)
              Identifier: STATE_ADDR0 (at 192)
              IfStatement:  (at 192)
                Identifier: rx_ready_w (at 192)
                BlockingSubstitution:  (at 192)
                  Lvalue:  (at 192)
                    Identifier: next_state_r (at 192)
                  Rvalue:  (at 192)
                    Identifier: STATE_ADDR1 (at 192)
            Case:  (at 193)
              Identifier: STATE_ADDR1 (at 193)
              IfStatement:  (at 193)
                Identifier: rx_ready_w (at 193)
                BlockingSubstitution:  (at 193)
                  Lvalue:  (at 193)
                    Identifier: next_state_r (at 193)
                  Rvalue:  (at 193)
                    Identifier: STATE_ADDR2 (at 193)
            Case:  (at 194)
              Identifier: STATE_ADDR2 (at 194)
              IfStatement:  (at 194)
                Identifier: rx_ready_w (at 194)
                BlockingSubstitution:  (at 194)
                  Lvalue:  (at 194)
                    Identifier: next_state_r (at 194)
                  Rvalue:  (at 194)
                    Identifier: STATE_ADDR3 (at 194)
            Case:  (at 195)
              Identifier: STATE_ADDR3 (at 195)
              Block: None (at 196)
                IfStatement:  (at 197)
                  Land:  (at 197)
                    Identifier: rx_ready_w (at 197)
                    Identifier: mem_we_o (at 197)
                  BlockingSubstitution:  (at 198)
                    Lvalue:  (at 198)
                      Identifier: next_state_r (at 198)
                    Rvalue:  (at 198)
                      Identifier: STATE_WRITE (at 198)
                  IfStatement:  (at 199)
                    Identifier: rx_ready_w (at 199)
                    BlockingSubstitution:  (at 200)
                      Lvalue:  (at 200)
                        Identifier: next_state_r (at 200)
                      Rvalue:  (at 200)
                        Identifier: STATE_READ (at 200)
            Case:  (at 205)
              Identifier: STATE_WRITE (at 205)
              Block: None (at 206)
                IfStatement:  (at 207)
                  Land:  (at 207)
                    Eq:  (at 207)
                      Identifier: len_q (at 207)
                      Repeat:  (at 207)
                        Concat:  (at 207)
                          IntConst: 1'b0 (at 207)
                        Identifier: LEN_W (at 207)
                    Identifier: mem_ack_i (at 207)
                  BlockingSubstitution:  (at 208)
                    Lvalue:  (at 208)
                      Identifier: next_state_r (at 208)
                    Rvalue:  (at 208)
                      Identifier: STATE_IDLE (at 208)
                  BlockingSubstitution:  (at 210)
                    Lvalue:  (at 210)
                      Identifier: next_state_r (at 210)
                    Rvalue:  (at 210)
                      Identifier: STATE_WRITE (at 210)
            Case:  (at 215)
              Identifier: STATE_READ (at 215)
              Block: None (at 216)
                IfStatement:  (at 218)
                  Identifier: mem_ack_i (at 218)
                  BlockingSubstitution:  (at 219)
                    Lvalue:  (at 219)
                      Identifier: next_state_r (at 219)
                    Rvalue:  (at 219)
                      Identifier: STATE_DATA0 (at 219)
            Case:  (at 224)
              Identifier: STATE_DATA0 (at 224)
              Block: None (at 225)
                IfStatement:  (at 226)
                  Identifier: wr_accept_w (at 226)
                  BlockingSubstitution:  (at 227)
                    Lvalue:  (at 227)
                      Identifier: next_state_r (at 227)
                    Rvalue:  (at 227)
                      Identifier: STATE_DATA1 (at 227)
            Case:  (at 229)
              Identifier: STATE_DATA1 (at 229)
              Block: None (at 230)
                IfStatement:  (at 231)
                  Identifier: wr_accept_w (at 231)
                  BlockingSubstitution:  (at 232)
                    Lvalue:  (at 232)
                      Identifier: next_state_r (at 232)
                    Rvalue:  (at 232)
                      Identifier: STATE_DATA2 (at 232)
            Case:  (at 234)
              Identifier: STATE_DATA2 (at 234)
              Block: None (at 235)
                IfStatement:  (at 236)
                  Identifier: wr_accept_w (at 236)
                  BlockingSubstitution:  (at 237)
                    Lvalue:  (at 237)
                      Identifier: next_state_r (at 237)
                    Rvalue:  (at 237)
                      Identifier: STATE_DATA3 (at 237)
            Case:  (at 239)
              Identifier: STATE_DATA3 (at 239)
              Block: None (at 240)
                IfStatement:  (at 241)
                  Land:  (at 241)
                    Identifier: wr_accept_w (at 241)
                    NotEq:  (at 241)
                      Identifier: len_q (at 241)
                      Repeat:  (at 241)
                        Concat:  (at 241)
                          IntConst: 1'b0 (at 241)
                        Identifier: LEN_W (at 241)
                  BlockingSubstitution:  (at 242)
                    Lvalue:  (at 242)
                      Identifier: next_state_r (at 242)
                    Rvalue:  (at 242)
                      Identifier: STATE_READ (at 242)
                  IfStatement:  (at 243)
                    Identifier: wr_accept_w (at 243)
                    BlockingSubstitution:  (at 244)
                      Lvalue:  (at 244)
                        Identifier: next_state_r (at 244)
                      Rvalue:  (at 244)
                        Identifier: STATE_IDLE (at 244)
            Case:  (at 249)
              Identifier: STATE_GP_WR (at 249)
              Block: None (at 250)
                IfStatement:  (at 251)
                  Identifier: rx_ready_w (at 251)
                  BlockingSubstitution:  (at 252)
                    Lvalue:  (at 252)
                      Identifier: next_state_r (at 252)
                    Rvalue:  (at 252)
                      Identifier: STATE_IDLE (at 252)
            Case:  (at 257)
              Identifier: STATE_GP_RD (at 257)
              Block: None (at 258)
                IfStatement:  (at 259)
                  Identifier: wr_accept_w (at 259)
                  BlockingSubstitution:  (at 260)
                    Lvalue:  (at 260)
                      Identifier: next_state_r (at 260)
                    Rvalue:  (at 260)
                      Identifier: STATE_IDLE (at 260)
            Case:  (at 262)
              EventStatement:  (at 0)
                SensList:  (at 0)
                  Sens: all (at 0)
      Always:  (at 268)
        SensList:  (at 268)
          Sens: posedge (at 268)
            Identifier: rst_i (at 268)
          Sens: posedge (at 268)
            Identifier: clk_i (at 268)
        IfStatement:  (at 269)
          Identifier: rst_i (at 269)
          NonblockingSubstitution:  (at 270)
            Lvalue:  (at 270)
              Identifier: state_q (at 270)
            Rvalue:  (at 270)
              Identifier: STATE_IDLE (at 270)
          NonblockingSubstitution:  (at 272)
            Lvalue:  (at 272)
              Identifier: state_q (at 272)
            Rvalue:  (at 272)
              Identifier: next_state_r (at 272)
      InstanceList: ftdi_sync (at 277)
        ParamArg: CLK_DIV (at 278)
          Identifier: CLK_DIV (at 278)
        Instance: u_sync, ftdi_sync (at 277)
          ParamArg: CLK_DIV (at 278)
            Identifier: CLK_DIV (at 278)
          PortArg: clk_i (at 281)
            Identifier: clk_i (at 281)
          PortArg: rst_i (at 282)
            Identifier: rst_i (at 282)
          PortArg: ftdi_rxf_i (at 285)
            Identifier: ftdi_rxf_i (at 285)
          PortArg: ftdi_txe_i (at 286)
            Identifier: ftdi_txe_i (at 286)
          PortArg: ftdi_siwua_o (at 287)
            Identifier: ftdi_siwua_o (at 287)
          PortArg: ftdi_wr_o (at 288)
            Identifier: ftdi_wr_o (at 288)
          PortArg: ftdi_rd_o (at 289)
            Identifier: ftdi_rd_o (at 289)
          PortArg: ftdi_d_io (at 290)
            Identifier: ftdi_d_io (at 290)
          PortArg: data_o (at 293)
            Identifier: data_rx_w (at 293)
          PortArg: data_i (at 294)
            Identifier: data_tx_w (at 294)
          PortArg: wr_i (at 295)
            Identifier: wr_w (at 295)
          PortArg: rd_i (at 296)
            Identifier: rd_w (at 296)
          PortArg: wr_accept_o (at 297)
            Identifier: wr_accept_w (at 297)
          PortArg: rd_ready_o (at 298)
            Identifier: rx_ready_w (at 298)
      Assign:  (at 306)
        Lvalue:  (at 306)
          Identifier: wr_w (at 306)
        Rvalue:  (at 306)
          Or:  (at 306)
            Or:  (at 306)
              Or:  (at 306)
                Or:  (at 306)
                  Eq:  (at 306)
                    Identifier: state_q (at 306)
                    Identifier: STATE_DATA0 (at 306)
                  Eq:  (at 307)
                    Identifier: state_q (at 307)
                    Identifier: STATE_DATA1 (at 307)
                Eq:  (at 308)
                  Identifier: state_q (at 308)
                  Identifier: STATE_DATA2 (at 308)
              Eq:  (at 309)
                Identifier: state_q (at 309)
                Identifier: STATE_DATA3 (at 309)
            Eq:  (at 310)
              Identifier: state_q (at 310)
              Identifier: STATE_GP_RD (at 310)
      Assign:  (at 313)
        Lvalue:  (at 313)
          Identifier: rd_w (at 313)
        Rvalue:  (at 313)
          Or:  (at 313)
            Or:  (at 313)
              Or:  (at 313)
                Or:  (at 313)
                  Or:  (at 313)
                    Or:  (at 313)
                      Or:  (at 313)
                        Eq:  (at 313)
                          Identifier: state_q (at 313)
                          Identifier: STATE_CMD (at 313)
                        Eq:  (at 314)
                          Identifier: state_q (at 314)
                          Identifier: STATE_LEN (at 314)
                      Eq:  (at 315)
                        Identifier: state_q (at 315)
                        Identifier: STATE_ADDR0 (at 315)
                    Eq:  (at 316)
                      Identifier: state_q (at 316)
                      Identifier: STATE_ADDR1 (at 316)
                  Eq:  (at 317)
                    Identifier: state_q (at 317)
                    Identifier: STATE_ADDR2 (at 317)
                Eq:  (at 318)
                  Identifier: state_q (at 318)
                  Identifier: STATE_ADDR3 (at 318)
              Land:  (at 319)
                Eq:  (at 319)
                  Identifier: state_q (at 319)
                  Identifier: STATE_WRITE (at 319)
                Ulnot:  (at 319)
                  Identifier: mem_cyc_o (at 319)
            Eq:  (at 320)
              Identifier: state_q (at 320)
              Identifier: STATE_GP_WR (at 320)
      Always:  (at 325)
        SensList:  (at 325)
          Sens: posedge (at 325)
            Identifier: rst_i (at 325)
          Sens: posedge (at 325)
            Identifier: clk_i (at 325)
        IfStatement:  (at 326)
          Identifier: rst_i (at 326)
          NonblockingSubstitution:  (at 327)
            Lvalue:  (at 327)
              Identifier: len_q (at 327)
            Rvalue:  (at 327)
              Repeat:  (at 327)
                Concat:  (at 327)
                  IntConst: 1'b0 (at 327)
                Identifier: LEN_W (at 327)
          IfStatement:  (at 328)
            Land:  (at 328)
              Eq:  (at 328)
                Identifier: state_q (at 328)
                Identifier: STATE_CMD (at 328)
              Identifier: rx_ready_w (at 328)
            NonblockingSubstitution:  (at 329)
              Lvalue:  (at 329)
                Partselect:  (at 329)
                  Identifier: len_q (at 329)
                  IntConst: 11 (at 329)
                  IntConst: 8 (at 329)
              Rvalue:  (at 329)
                Partselect:  (at 329)
                  Identifier: data_rx_w (at 329)
                  IntConst: 7 (at 329)
                  IntConst: 4 (at 329)
            IfStatement:  (at 330)
              Land:  (at 330)
                Eq:  (at 330)
                  Identifier: state_q (at 330)
                  Identifier: STATE_LEN (at 330)
                Identifier: rx_ready_w (at 330)
              NonblockingSubstitution:  (at 331)
                Lvalue:  (at 331)
                  Partselect:  (at 331)
                    Identifier: len_q (at 331)
                    IntConst: 7 (at 331)
                    IntConst: 0 (at 331)
                Rvalue:  (at 331)
                  Partselect:  (at 331)
                    Identifier: data_rx_w (at 331)
                    IntConst: 7 (at 331)
                    IntConst: 0 (at 331)
              IfStatement:  (at 332)
                Land:  (at 332)
                  Land:  (at 332)
                    Eq:  (at 332)
                      Identifier: state_q (at 332)
                      Identifier: STATE_WRITE (at 332)
                    Identifier: rx_ready_w (at 332)
                  Ulnot:  (at 332)
                    Identifier: mem_cyc_o (at 332)
                NonblockingSubstitution:  (at 333)
                  Lvalue:  (at 333)
                    Identifier: len_q (at 333)
                  Rvalue:  (at 333)
                    Minus:  (at 333)
                      Identifier: len_q (at 333)
                      Concat:  (at 333)
                        Repeat:  (at 333)
                          Concat:  (at 333)
                            IntConst: 1'b0 (at 333)
                          Minus:  (at 333)
                            Identifier: LEN_W (at 333)
                            IntConst: 1 (at 333)
                        IntConst: 1'b1 (at 333)
                IfStatement:  (at 334)
                  Land:  (at 334)
                    Eq:  (at 334)
                      Identifier: state_q (at 334)
                      Identifier: STATE_READ (at 334)
                    Land:  (at 334)
                      Identifier: mem_cyc_o (at 334)
                      Identifier: mem_ack_i (at 334)
                  NonblockingSubstitution:  (at 335)
                    Lvalue:  (at 335)
                      Identifier: len_q (at 335)
                    Rvalue:  (at 335)
                      Minus:  (at 335)
                        Identifier: len_q (at 335)
                        Concat:  (at 335)
                          Repeat:  (at 335)
                            Concat:  (at 335)
                              IntConst: 1'b0 (at 335)
                            Minus:  (at 335)
                              Identifier: LEN_W (at 335)
                              IntConst: 1 (at 335)
                          IntConst: 1'b1 (at 335)
                  IfStatement:  (at 336)
                    Land:  (at 336)
                      Lor:  (at 336)
                        Lor:  (at 336)
                          Eq:  (at 336)
                            Identifier: state_q (at 336)
                            Identifier: STATE_DATA0 (at 336)
                          Eq:  (at 336)
                            Identifier: state_q (at 336)
                            Identifier: STATE_DATA1 (at 336)
                        Eq:  (at 336)
                          Identifier: state_q (at 336)
                          Identifier: STATE_DATA2 (at 336)
                      Identifier: wr_accept_w (at 336)
                    NonblockingSubstitution:  (at 337)
                      Lvalue:  (at 337)
                        Identifier: len_q (at 337)
                      Rvalue:  (at 337)
                        Minus:  (at 337)
                          Identifier: len_q (at 337)
                          Concat:  (at 337)
                            Repeat:  (at 337)
                              Concat:  (at 337)
                                IntConst: 1'b0 (at 337)
                              Minus:  (at 337)
                                Identifier: LEN_W (at 337)
                                IntConst: 1 (at 337)
                            IntConst: 1'b1 (at 337)
      Always:  (at 342)
        SensList:  (at 342)
          Sens: posedge (at 342)
            Identifier: rst_i (at 342)
          Sens: posedge (at 342)
            Identifier: clk_i (at 342)
        IfStatement:  (at 343)
          Identifier: rst_i (at 343)
          NonblockingSubstitution:  (at 344)
            Lvalue:  (at 344)
              Identifier: mem_addr_q (at 344)
            Rvalue:  (at 344)
              IntConst: 'd0 (at 344)
          IfStatement:  (at 345)
            Land:  (at 345)
              Eq:  (at 345)
                Identifier: state_q (at 345)
                Identifier: STATE_ADDR0 (at 345)
              Identifier: rx_ready_w (at 345)
            NonblockingSubstitution:  (at 346)
              Lvalue:  (at 346)
                Partselect:  (at 346)
                  Identifier: mem_addr_q (at 346)
                  IntConst: 31 (at 346)
                  IntConst: 24 (at 346)
              Rvalue:  (at 346)
                Identifier: data_rx_w (at 346)
            IfStatement:  (at 347)
              Land:  (at 347)
                Eq:  (at 347)
                  Identifier: state_q (at 347)
                  Identifier: STATE_ADDR1 (at 347)
                Identifier: rx_ready_w (at 347)
              NonblockingSubstitution:  (at 348)
                Lvalue:  (at 348)
                  Partselect:  (at 348)
                    Identifier: mem_addr_q (at 348)
                    IntConst: 23 (at 348)
                    IntConst: 16 (at 348)
                Rvalue:  (at 348)
                  Identifier: data_rx_w (at 348)
              IfStatement:  (at 349)
                Land:  (at 349)
                  Eq:  (at 349)
                    Identifier: state_q (at 349)
                    Identifier: STATE_ADDR2 (at 349)
                  Identifier: rx_ready_w (at 349)
                NonblockingSubstitution:  (at 350)
                  Lvalue:  (at 350)
                    Partselect:  (at 350)
                      Identifier: mem_addr_q (at 350)
                      IntConst: 15 (at 350)
                      IntConst: 8 (at 350)
                  Rvalue:  (at 350)
                    Identifier: data_rx_w (at 350)
                IfStatement:  (at 351)
                  Land:  (at 351)
                    Eq:  (at 351)
                      Identifier: state_q (at 351)
                      Identifier: STATE_ADDR3 (at 351)
                    Identifier: rx_ready_w (at 351)
                  NonblockingSubstitution:  (at 352)
                    Lvalue:  (at 352)
                      Partselect:  (at 352)
                        Identifier: mem_addr_q (at 352)
                        IntConst: 7 (at 352)
                        IntConst: 0 (at 352)
                    Rvalue:  (at 352)
                      Identifier: data_rx_w (at 352)
                  IfStatement:  (at 354)
                    Land:  (at 354)
                      Eq:  (at 354)
                        Identifier: state_q (at 354)
                        Identifier: STATE_WRITE (at 354)
                      Land:  (at 354)
                        Identifier: mem_cyc_o (at 354)
                        Identifier: mem_ack_i (at 354)
                    NonblockingSubstitution:  (at 355)
                      Lvalue:  (at 355)
                        Identifier: mem_addr_q (at 355)
                      Rvalue:  (at 355)
                        Plus:  (at 355)
                          Concat:  (at 355)
                            Partselect:  (at 355)
                              Identifier: mem_addr_q (at 355)
                              IntConst: 31 (at 355)
                              IntConst: 2 (at 355)
                            IntConst: 2'b0 (at 355)
                          IntConst: 'd4 (at 355)
                    IfStatement:  (at 356)
                      Land:  (at 356)
                        Eq:  (at 356)
                          Identifier: state_q (at 356)
                          Identifier: STATE_READ (at 356)
                        Land:  (at 356)
                          Identifier: mem_cyc_o (at 356)
                          Identifier: mem_ack_i (at 356)
                      NonblockingSubstitution:  (at 357)
                        Lvalue:  (at 357)
                          Identifier: mem_addr_q (at 357)
                        Rvalue:  (at 357)
                          Plus:  (at 357)
                            Concat:  (at 357)
                              Partselect:  (at 357)
                                Identifier: mem_addr_q (at 357)
                                IntConst: 31 (at 357)
                                IntConst: 2 (at 357)
                              IntConst: 2'b0 (at 357)
                            IntConst: 'd4 (at 357)
      Assign:  (at 359)
        Lvalue:  (at 359)
          Identifier: mem_addr_o (at 359)
        Rvalue:  (at 359)
          Concat:  (at 359)
            Partselect:  (at 359)
              Identifier: mem_addr_q (at 359)
              Minus:  (at 359)
                Identifier: ADDR_W (at 359)
                IntConst: 1 (at 359)
              IntConst: 2 (at 359)
            IntConst: 2'b0 (at 359)
      Always:  (at 364)
        SensList:  (at 364)
          Sens: posedge (at 364)
            Identifier: rst_i (at 364)
          Sens: posedge (at 364)
            Identifier: clk_i (at 364)
        IfStatement:  (at 365)
          Identifier: rst_i (at 365)
          NonblockingSubstitution:  (at 366)
            Lvalue:  (at 366)
              Identifier: data_idx_q (at 366)
            Rvalue:  (at 366)
              IntConst: 2'b0 (at 366)
          IfStatement:  (at 367)
            Eq:  (at 367)
              Identifier: state_q (at 367)
              Identifier: STATE_ADDR3 (at 367)
            NonblockingSubstitution:  (at 368)
              Lvalue:  (at 368)
                Identifier: data_idx_q (at 368)
              Rvalue:  (at 368)
                Partselect:  (at 368)
                  Identifier: data_rx_w (at 368)
                  IntConst: 1 (at 368)
                  IntConst: 0 (at 368)
            IfStatement:  (at 369)
              Land:  (at 369)
                Land:  (at 369)
                  Eq:  (at 369)
                    Identifier: state_q (at 369)
                    Identifier: STATE_WRITE (at 369)
                  Identifier: rx_ready_w (at 369)
                Ulnot:  (at 369)
                  Identifier: mem_cyc_o (at 369)
              NonblockingSubstitution:  (at 370)
                Lvalue:  (at 370)
                  Identifier: data_idx_q (at 370)
                Rvalue:  (at 370)
                  Plus:  (at 370)
                    Identifier: data_idx_q (at 370)
                    IntConst: 2'd1 (at 370)
      Always:  (at 375)
        SensList:  (at 375)
          Sens: posedge (at 375)
            Identifier: rst_i (at 375)
          Sens: posedge (at 375)
            Identifier: clk_i (at 375)
        IfStatement:  (at 376)
          Identifier: rst_i (at 376)
          NonblockingSubstitution:  (at 377)
            Lvalue:  (at 377)
              Identifier: data_q (at 377)
            Rvalue:  (at 377)
              IntConst: 32'b0 (at 377)
          IfStatement:  (at 379)
            Eq:  (at 379)
              Identifier: state_q (at 379)
              Identifier: STATE_IDLE (at 379)
            NonblockingSubstitution:  (at 380)
              Lvalue:  (at 380)
                Identifier: data_q (at 380)
              Rvalue:  (at 380)
                Concat:  (at 380)
                  Repeat:  (at 380)
                    Concat:  (at 380)
                      IntConst: 1'b0 (at 380)
                    Minus:  (at 380)
                      IntConst: 32 (at 380)
                      Identifier: GP_INPUTS (at 380)
                  Identifier: gp_in_q (at 380)
            IfStatement:  (at 382)
              Land:  (at 382)
                Land:  (at 382)
                  Eq:  (at 382)
                    Identifier: state_q (at 382)
                    Identifier: STATE_WRITE (at 382)
                  Identifier: rx_ready_w (at 382)
                Ulnot:  (at 382)
                  Identifier: mem_cyc_o (at 382)
              Block: None (at 383)
                IfStatement:  (at 384)
                  Identifier: LITTLE_ENDIAN (at 384)
                  Block: None (at 385)
                    CaseStatement:  (at 386)
                      Identifier: data_idx_q (at 386)
                      Case:  (at 387)
                        IntConst: 2'd0 (at 387)
                        NonblockingSubstitution:  (at 387)
                          Lvalue:  (at 387)
                            Partselect:  (at 387)
                              Identifier: data_q (at 387)
                              IntConst: 7 (at 387)
                              IntConst: 0 (at 387)
                          Rvalue:  (at 387)
                            Identifier: data_rx_w (at 387)
                      Case:  (at 388)
                        IntConst: 2'd1 (at 388)
                        NonblockingSubstitution:  (at 388)
                          Lvalue:  (at 388)
                            Partselect:  (at 388)
                              Identifier: data_q (at 388)
                              IntConst: 15 (at 388)
                              IntConst: 8 (at 388)
                          Rvalue:  (at 388)
                            Identifier: data_rx_w (at 388)
                      Case:  (at 389)
                        IntConst: 2'd2 (at 389)
                        NonblockingSubstitution:  (at 389)
                          Lvalue:  (at 389)
                            Partselect:  (at 389)
                              Identifier: data_q (at 389)
                              IntConst: 23 (at 389)
                              IntConst: 16 (at 389)
                          Rvalue:  (at 389)
                            Identifier: data_rx_w (at 389)
                      Case:  (at 390)
                        IntConst: 2'd3 (at 390)
                        NonblockingSubstitution:  (at 390)
                          Lvalue:  (at 390)
                            Partselect:  (at 390)
                              Identifier: data_q (at 390)
                              IntConst: 31 (at 390)
                              IntConst: 24 (at 390)
                          Rvalue:  (at 390)
                            Identifier: data_rx_w (at 390)
                  Block: None (at 394)
                    CaseStatement:  (at 395)
                      Identifier: data_idx_q (at 395)
                      Case:  (at 396)
                        IntConst: 2'd3 (at 396)
                        NonblockingSubstitution:  (at 396)
                          Lvalue:  (at 396)
                            Partselect:  (at 396)
                              Identifier: data_q (at 396)
                              IntConst: 7 (at 396)
                              IntConst: 0 (at 396)
                          Rvalue:  (at 396)
                            Identifier: data_rx_w (at 396)
                      Case:  (at 397)
                        IntConst: 2'd2 (at 397)
                        NonblockingSubstitution:  (at 397)
                          Lvalue:  (at 397)
                            Partselect:  (at 397)
                              Identifier: data_q (at 397)
                              IntConst: 15 (at 397)
                              IntConst: 8 (at 397)
                          Rvalue:  (at 397)
                            Identifier: data_rx_w (at 397)
                      Case:  (at 398)
                        IntConst: 2'd1 (at 398)
                        NonblockingSubstitution:  (at 398)
                          Lvalue:  (at 398)
                            Partselect:  (at 398)
                              Identifier: data_q (at 398)
                              IntConst: 23 (at 398)
                              IntConst: 16 (at 398)
                          Rvalue:  (at 398)
                            Identifier: data_rx_w (at 398)
                      Case:  (at 399)
                        IntConst: 2'd0 (at 399)
                        NonblockingSubstitution:  (at 399)
                          Lvalue:  (at 399)
                            Partselect:  (at 399)
                              Identifier: data_q (at 399)
                              IntConst: 31 (at 399)
                              IntConst: 24 (at 399)
                          Rvalue:  (at 399)
                            Identifier: data_rx_w (at 399)
              IfStatement:  (at 404)
                Land:  (at 404)
                  Eq:  (at 404)
                    Identifier: state_q (at 404)
                    Identifier: STATE_READ (at 404)
                  Identifier: mem_ack_i (at 404)
                Block: None (at 405)
                  IfStatement:  (at 406)
                    Identifier: LITTLE_ENDIAN (at 406)
                    NonblockingSubstitution:  (at 407)
                      Lvalue:  (at 407)
                        Identifier: data_q (at 407)
                      Rvalue:  (at 407)
                        Identifier: mem_data_i (at 407)
                    NonblockingSubstitution:  (at 409)
                      Lvalue:  (at 409)
                        Identifier: data_q (at 409)
                      Rvalue:  (at 409)
                        Concat:  (at 409)
                          Partselect:  (at 409)
                            Identifier: mem_data_i (at 409)
                            IntConst: 7 (at 409)
                            IntConst: 0 (at 409)
                          Partselect:  (at 409)
                            Identifier: mem_data_i (at 409)
                            IntConst: 15 (at 409)
                            IntConst: 8 (at 409)
                          Partselect:  (at 409)
                            Identifier: mem_data_i (at 409)
                            IntConst: 23 (at 409)
                            IntConst: 16 (at 409)
                          Partselect:  (at 409)
                            Identifier: mem_data_i (at 409)
                            IntConst: 31 (at 409)
                            IntConst: 24 (at 409)
                IfStatement:  (at 412)
                  Land:  (at 412)
                    Lor:  (at 412)
                      Lor:  (at 412)
                        Eq:  (at 412)
                          Identifier: state_q (at 412)
                          Identifier: STATE_DATA0 (at 412)
                        Eq:  (at 412)
                          Identifier: state_q (at 412)
                          Identifier: STATE_DATA1 (at 412)
                      Eq:  (at 412)
                        Identifier: state_q (at 412)
                        Identifier: STATE_DATA2 (at 412)
                    Identifier: wr_accept_w (at 412)
                  Block: None (at 413)
                    NonblockingSubstitution:  (at 414)
                      Lvalue:  (at 414)
                        Identifier: data_q (at 414)
                      Rvalue:  (at 414)
                        Concat:  (at 414)
                          IntConst: 8'b0 (at 414)
                          Partselect:  (at 414)
                            Identifier: data_q (at 414)
                            IntConst: 31 (at 414)
                            IntConst: 8 (at 414)
      Assign:  (at 417)
        Lvalue:  (at 417)
          Identifier: data_tx_w (at 417)
        Rvalue:  (at 417)
          Partselect:  (at 417)
            Identifier: data_q (at 417)
            IntConst: 7 (at 417)
            IntConst: 0 (at 417)
      Assign:  (at 419)
        Lvalue:  (at 419)
          Identifier: mem_data_o (at 419)
        Rvalue:  (at 419)
          Identifier: data_q (at 419)
      Always:  (at 424)
        SensList:  (at 424)
          Sens: posedge (at 424)
            Identifier: rst_i (at 424)
          Sens: posedge (at 424)
            Identifier: clk_i (at 424)
        IfStatement:  (at 425)
          Identifier: rst_i (at 425)
          NonblockingSubstitution:  (at 426)
            Lvalue:  (at 426)
              Identifier: mem_stb_o (at 426)
            Rvalue:  (at 426)
              IntConst: 1'b0 (at 426)
          IfStatement:  (at 427)
            Identifier: mem_stb_o (at 427)
            Block: None (at 428)
              IfStatement:  (at 429)
                Ulnot:  (at 429)
                  Identifier: mem_stall_i (at 429)
                NonblockingSubstitution:  (at 430)
                  Lvalue:  (at 430)
                    Identifier: mem_stb_o (at 430)
                  Rvalue:  (at 430)
                    IntConst: 1'b0 (at 430)
            IfStatement:  (at 433)
              Land:  (at 433)
                Land:  (at 433)
                  Eq:  (at 433)
                    Identifier: state_q (at 433)
                    Identifier: STATE_WRITE (at 433)
                  Identifier: rx_ready_w (at 433)
                Lor:  (at 433)
                  Eq:  (at 433)
                    Identifier: data_idx_q (at 433)
                    IntConst: 2'd3 (at 433)
                  Eq:  (at 433)
                    Identifier: len_q (at 433)
                    IntConst: 1 (at 433)
              NonblockingSubstitution:  (at 434)
                Lvalue:  (at 434)
                  Identifier: mem_stb_o (at 434)
                Rvalue:  (at 434)
                  IntConst: 1'b1 (at 434)
              IfStatement:  (at 436)
                Land:  (at 436)
                  Eq:  (at 436)
                    Identifier: state_q (at 436)
                    Identifier: STATE_READ (at 436)
                  Ulnot:  (at 436)
                    Identifier: mem_cyc_o (at 436)
                NonblockingSubstitution:  (at 437)
                  Lvalue:  (at 437)
                    Identifier: mem_stb_o (at 437)
                  Rvalue:  (at 437)
                    IntConst: 1'b1 (at 437)
      Decl:  (at 442)
        Reg: mem_sel_q, False (at 442)
          Width:  (at 442)
            IntConst: 3 (at 442)
            IntConst: 0 (at 442)
      Decl:  (at 443)
        Reg: mem_sel_r, False (at 443)
          Width:  (at 443)
            IntConst: 3 (at 443)
            IntConst: 0 (at 443)
      Always:  (at 445)
        SensList:  (at 445)
          Sens: all (at 445)
        Block: None (at 446)
          BlockingSubstitution:  (at 447)
            Lvalue:  (at 447)
              Identifier: mem_sel_r (at 447)
            Rvalue:  (at 447)
              IntConst: 4'b1111 (at 447)
          CaseStatement:  (at 449)
            Identifier: data_idx_q (at 449)
            Case:  (at 450)
              IntConst: 2'd0 (at 450)
              BlockingSubstitution:  (at 450)
                Lvalue:  (at 450)
                  Identifier: mem_sel_r (at 450)
                Rvalue:  (at 450)
                  IntConst: 4'b0001 (at 450)
            Case:  (at 451)
              IntConst: 2'd1 (at 451)
              BlockingSubstitution:  (at 451)
                Lvalue:  (at 451)
                  Identifier: mem_sel_r (at 451)
                Rvalue:  (at 451)
                  IntConst: 4'b0011 (at 451)
            Case:  (at 452)
              IntConst: 2'd2 (at 452)
              BlockingSubstitution:  (at 452)
                Lvalue:  (at 452)
                  Identifier: mem_sel_r (at 452)
                Rvalue:  (at 452)
                  IntConst: 4'b0111 (at 452)
            Case:  (at 453)
              IntConst: 2'd3 (at 453)
              BlockingSubstitution:  (at 453)
                Lvalue:  (at 453)
                  Identifier: mem_sel_r (at 453)
                Rvalue:  (at 453)
                  IntConst: 4'b1111 (at 453)
          CaseStatement:  (at 456)
            Partselect:  (at 456)
              Identifier: mem_addr_q (at 456)
              IntConst: 1 (at 456)
              IntConst: 0 (at 456)
            Case:  (at 457)
              IntConst: 2'd0 (at 457)
              BlockingSubstitution:  (at 457)
                Lvalue:  (at 457)
                  Identifier: mem_sel_r (at 457)
                Rvalue:  (at 457)
                  And:  (at 457)
                    Identifier: mem_sel_r (at 457)
                    IntConst: 4'b1111 (at 457)
            Case:  (at 458)
              IntConst: 2'd1 (at 458)
              BlockingSubstitution:  (at 458)
                Lvalue:  (at 458)
                  Identifier: mem_sel_r (at 458)
                Rvalue:  (at 458)
                  And:  (at 458)
                    Identifier: mem_sel_r (at 458)
                    IntConst: 4'b1110 (at 458)
            Case:  (at 459)
              IntConst: 2'd2 (at 459)
              BlockingSubstitution:  (at 459)
                Lvalue:  (at 459)
                  Identifier: mem_sel_r (at 459)
                Rvalue:  (at 459)
                  And:  (at 459)
                    Identifier: mem_sel_r (at 459)
                    IntConst: 4'b1100 (at 459)
            Case:  (at 460)
              IntConst: 2'd3 (at 460)
              BlockingSubstitution:  (at 460)
                Lvalue:  (at 460)
                  Identifier: mem_sel_r (at 460)
                Rvalue:  (at 460)
                  And:  (at 460)
                    Identifier: mem_sel_r (at 460)
                    IntConst: 4'b1000 (at 460)
      Always:  (at 464)
        SensList:  (at 464)
          Sens: posedge (at 464)
            Identifier: rst_i (at 464)
          Sens: posedge (at 464)
            Identifier: clk_i (at 464)
        IfStatement:  (at 465)
          Identifier: rst_i (at 465)
          NonblockingSubstitution:  (at 466)
            Lvalue:  (at 466)
              Identifier: mem_sel_q (at 466)
            Rvalue:  (at 466)
              IntConst: 4'b0 (at 466)
          IfStatement:  (at 468)
            Eq:  (at 468)
              Identifier: state_q (at 468)
              Identifier: STATE_IDLE (at 468)
            NonblockingSubstitution:  (at 469)
              Lvalue:  (at 469)
                Identifier: mem_sel_q (at 469)
              Rvalue:  (at 469)
                IntConst: 4'b1111 (at 469)
            IfStatement:  (at 471)
              Land:  (at 471)
                Land:  (at 471)
                  Eq:  (at 471)
                    Identifier: state_q (at 471)
                    Identifier: STATE_WRITE (at 471)
                  Identifier: rx_ready_w (at 471)
                Lor:  (at 471)
                  Eq:  (at 471)
                    Identifier: data_idx_q (at 471)
                    IntConst: 2'd3 (at 471)
                  Eq:  (at 471)
                    Identifier: len_q (at 471)
                    IntConst: 1 (at 471)
              NonblockingSubstitution:  (at 472)
                Lvalue:  (at 472)
                  Identifier: mem_sel_q (at 472)
                Rvalue:  (at 472)
                  Identifier: mem_sel_r (at 472)
      Assign:  (at 474)
        Lvalue:  (at 474)
          Identifier: mem_sel_o (at 474)
        Rvalue:  (at 474)
          Cond:  (at 474)
            Identifier: LITTLE_ENDIAN (at 474)
            Identifier: mem_sel_q (at 474)
            Concat:  (at 474)
              Pointer:  (at 474)
                Identifier: mem_sel_q (at 474)
                IntConst: 0 (at 474)
              Pointer:  (at 474)
                Identifier: mem_sel_q (at 474)
                IntConst: 1 (at 474)
              Pointer:  (at 474)
                Identifier: mem_sel_q (at 474)
                IntConst: 2 (at 474)
              Pointer:  (at 474)
                Identifier: mem_sel_q (at 474)
                IntConst: 3 (at 474)
      Always:  (at 479)
        SensList:  (at 479)
          Sens: posedge (at 479)
            Identifier: rst_i (at 479)
          Sens: posedge (at 479)
            Identifier: clk_i (at 479)
        IfStatement:  (at 480)
          Identifier: rst_i (at 480)
          NonblockingSubstitution:  (at 481)
            Lvalue:  (at 481)
              Identifier: mem_we_o (at 481)
            Rvalue:  (at 481)
              IntConst: 1'b0 (at 481)
          IfStatement:  (at 482)
            Land:  (at 482)
              Eq:  (at 482)
                Identifier: state_q (at 482)
                Identifier: STATE_CMD (at 482)
              Identifier: rx_ready_w (at 482)
            NonblockingSubstitution:  (at 483)
              Lvalue:  (at 483)
                Identifier: mem_we_o (at 483)
              Rvalue:  (at 483)
                Eq:  (at 483)
                  Partselect:  (at 483)
                    Identifier: data_rx_w (at 483)
                    IntConst: 3 (at 483)
                    IntConst: 0 (at 483)
                  Identifier: CMD_WR (at 483)
      Always:  (at 488)
        SensList:  (at 488)
          Sens: posedge (at 488)
            Identifier: clk_i (at 488)
          Sens: posedge (at 488)
            Identifier: rst_i (at 488)
        IfStatement:  (at 489)
          Eq:  (at 489)
            Identifier: rst_i (at 489)
            IntConst: 1'b1 (at 489)
          NonblockingSubstitution:  (at 490)
            Lvalue:  (at 490)
              Identifier: mem_cyc_q (at 490)
            Rvalue:  (at 490)
              IntConst: 1'b0 (at 490)
          IfStatement:  (at 491)
            Identifier: mem_stb_o (at 491)
            NonblockingSubstitution:  (at 492)
              Lvalue:  (at 492)
                Identifier: mem_cyc_q (at 492)
              Rvalue:  (at 492)
                IntConst: 1'b1 (at 492)
            IfStatement:  (at 493)
              Identifier: mem_ack_i (at 493)
              NonblockingSubstitution:  (at 494)
                Lvalue:  (at 494)
                  Identifier: mem_cyc_q (at 494)
                Rvalue:  (at 494)
                  IntConst: 1'b0 (at 494)
      Assign:  (at 496)
        Lvalue:  (at 496)
          Identifier: mem_cyc_o (at 496)
        Rvalue:  (at 496)
          Or:  (at 496)
            Identifier: mem_stb_o (at 496)
            Identifier: mem_cyc_q (at 496)
      Always:  (at 501)
        SensList:  (at 501)
          Sens: posedge (at 501)
            Identifier: rst_i (at 501)
          Sens: posedge (at 501)
            Identifier: clk_i (at 501)
        IfStatement:  (at 502)
          Identifier: rst_i (at 502)
          NonblockingSubstitution:  (at 503)
            Lvalue:  (at 503)
              Identifier: gp_out_q (at 503)
            Rvalue:  (at 503)
              Repeat:  (at 503)
                Concat:  (at 503)
                  IntConst: 1'b0 (at 503)
                Identifier: GP_OUTPUTS (at 503)
          IfStatement:  (at 504)
            Land:  (at 504)
              Eq:  (at 504)
                Identifier: state_q (at 504)
                Identifier: STATE_GP_WR (at 504)
              Identifier: rx_ready_w (at 504)
            NonblockingSubstitution:  (at 505)
              Lvalue:  (at 505)
                Identifier: gp_out_q (at 505)
              Rvalue:  (at 505)
                Partselect:  (at 505)
                  Identifier: data_rx_w (at 505)
                  Minus:  (at 505)
                    Identifier: GP_OUTPUTS (at 505)
                    IntConst: 1 (at 505)
                  IntConst: 0 (at 505)
      Assign:  (at 507)
        Lvalue:  (at 507)
          Identifier: gp_o (at 507)
        Rvalue:  (at 507)
          Identifier: gp_out_q (at 507)
      Decl:  (at 512)
        Reg: gp_in_r, False (at 512)
          Width:  (at 512)
            Minus:  (at 512)
              Identifier: GP_INPUTS (at 512)
              IntConst: 1 (at 512)
            IntConst: 0 (at 512)
      Always:  (at 513)
        SensList:  (at 513)
          Sens: all (at 513)
        Block: None (at 514)
          IfStatement:  (at 517)
            Land:  (at 517)
              Eq:  (at 517)
                Identifier: state_q (at 517)
                Identifier: STATE_GP_RD (at 517)
              Identifier: wr_accept_w (at 517)
            BlockingSubstitution:  (at 518)
              Lvalue:  (at 518)
                Identifier: gp_in_r (at 518)
              Rvalue:  (at 518)
                Identifier: gp_i (at 518)
            BlockingSubstitution:  (at 520)
              Lvalue:  (at 520)
                Identifier: gp_in_r (at 520)
              Rvalue:  (at 520)
                Or:  (at 520)
                  And:  (at 520)
                    Identifier: gp_in_q (at 520)
                    Identifier: GP_IN_EVENT_MASK (at 520)
                  Identifier: gp_i (at 520)
      Always:  (at 523)
        SensList:  (at 523)
          Sens: posedge (at 523)
            Identifier: rst_i (at 523)
          Sens: posedge (at 523)
            Identifier: clk_i (at 523)
        IfStatement:  (at 524)
          Identifier: rst_i (at 524)
          NonblockingSubstitution:  (at 525)
            Lvalue:  (at 525)
              Identifier: gp_in_q (at 525)
            Rvalue:  (at 525)
              Repeat:  (at 525)
                Concat:  (at 525)
                  IntConst: 1'b0 (at 525)
                Identifier: GP_INPUTS (at 525)
          NonblockingSubstitution:  (at 527)
            Lvalue:  (at 527)
              Identifier: gp_in_q (at 527)
            Rvalue:  (at 527)
              Identifier: gp_in_r (at 527)
    ModuleDef: ftdi_sync (at 562)
      Paramlist:  (at 567)
        Decl:  (at 568)
          Parameter: CLK_DIV, False (at 568)
            Rvalue:  (at 568)
              IntConst: 0 (at 568)
      Portlist:  (at 574)
        Ioport:  (at 575)
          Input: clk_i, False (at 575)
        Ioport:  (at 576)
          Input: rst_i, False (at 576)
        Ioport:  (at 579)
          Input: ftdi_rxf_i, False (at 579)
        Ioport:  (at 580)
          Input: ftdi_txe_i, False (at 580)
        Ioport:  (at 581)
          Output: ftdi_siwua_o, False (at 581)
        Ioport:  (at 582)
          Output: ftdi_wr_o, False (at 582)
          Reg: ftdi_wr_o, False (at 582)
        Ioport:  (at 583)
          Output: ftdi_rd_o, False (at 583)
          Reg: ftdi_rd_o, False (at 583)
        Ioport:  (at 584)
          Inout: ftdi_d_io, False (at 584)
            Width:  (at 584)
              IntConst: 7 (at 584)
              IntConst: 0 (at 584)
        Ioport:  (at 587)
          Output: data_o, False (at 587)
            Width:  (at 587)
              IntConst: 7 (at 587)
              IntConst: 0 (at 587)
        Ioport:  (at 588)
          Input: data_i, False (at 588)
            Width:  (at 588)
              IntConst: 7 (at 588)
              IntConst: 0 (at 588)
        Ioport:  (at 589)
          Input: wr_i, False (at 589)
        Ioport:  (at 590)
          Input: rd_i, False (at 590)
        Ioport:  (at 591)
          Output: wr_accept_o, False (at 591)
        Ioport:  (at 592)
          Output: rd_ready_o, False (at 592)
          Reg: rd_ready_o, False (at 592)
      Decl:  (at 598)
        Localparam: STATE_W, False (at 598)
          Rvalue:  (at 598)
            IntConst: 2 (at 598)
      Decl:  (at 599)
        Localparam: STATE_IDLE, False (at 599)
          Rvalue:  (at 599)
            IntConst: 2'd0 (at 599)
      Decl:  (at 600)
        Localparam: STATE_TX_SETUP, False (at 600)
          Rvalue:  (at 600)
            IntConst: 2'd1 (at 600)
      Decl:  (at 601)
        Localparam: STATE_TX, False (at 601)
          Rvalue:  (at 601)
            IntConst: 2'd2 (at 601)
      Decl:  (at 602)
        Localparam: STATE_RX, False (at 602)
          Rvalue:  (at 602)
            IntConst: 2'd3 (at 602)
      Decl:  (at 614)
        Reg: state_q, False (at 614)
          Width:  (at 614)
            Minus:  (at 614)
              Identifier: STATE_W (at 614)
              IntConst: 1 (at 614)
            IntConst: 0 (at 614)
      Decl:  (at 616)
        Reg: tx_ready_q, False (at 616)
      Decl:  (at 618)
        Reg: ftdi_rxf_ms_q, False (at 618)
      Decl:  (at 619)
        Reg: ftdi_txe_ms_q, False (at 619)
      Decl:  (at 620)
        Reg: ftdi_rxf_q, False (at 620)
      Decl:  (at 621)
        Reg: ftdi_txe_q, False (at 621)
      Decl:  (at 623)
        Reg: rx_data_q, False (at 623)
          Width:  (at 623)
            IntConst: 7 (at 623)
            IntConst: 0 (at 623)
      Decl:  (at 624)
        Reg: tx_data_q, False (at 624)
          Width:  (at 624)
            IntConst: 7 (at 624)
            IntConst: 0 (at 624)
      Always:  (at 629)
        SensList:  (at 629)
          Sens: posedge (at 629)
            Identifier: clk_i (at 629)
          Sens: posedge (at 629)
            Identifier: rst_i (at 629)
        IfStatement:  (at 630)
          Identifier: rst_i (at 630)
          Block: None (at 631)
            NonblockingSubstitution:  (at 632)
              Lvalue:  (at 632)
                Identifier: ftdi_rxf_ms_q (at 632)
              Rvalue:  (at 632)
                IntConst: 1'b1 (at 632)
            NonblockingSubstitution:  (at 633)
              Lvalue:  (at 633)
                Identifier: ftdi_txe_ms_q (at 633)
              Rvalue:  (at 633)
                IntConst: 1'b1 (at 633)
            NonblockingSubstitution:  (at 634)
              Lvalue:  (at 634)
                Identifier: ftdi_rxf_q (at 634)
              Rvalue:  (at 634)
                IntConst: 1'b1 (at 634)
            NonblockingSubstitution:  (at 635)
              Lvalue:  (at 635)
                Identifier: ftdi_txe_q (at 635)
              Rvalue:  (at 635)
                IntConst: 1'b1 (at 635)
          Block: None (at 638)
            NonblockingSubstitution:  (at 639)
              Lvalue:  (at 639)
                Identifier: ftdi_rxf_q (at 639)
              Rvalue:  (at 639)
                Identifier: ftdi_rxf_ms_q (at 639)
            NonblockingSubstitution:  (at 640)
              Lvalue:  (at 640)
                Identifier: ftdi_rxf_ms_q (at 640)
              Rvalue:  (at 640)
                Identifier: ftdi_rxf_i (at 640)
            NonblockingSubstitution:  (at 642)
              Lvalue:  (at 642)
                Identifier: ftdi_txe_q (at 642)
              Rvalue:  (at 642)
                Identifier: ftdi_txe_ms_q (at 642)
            NonblockingSubstitution:  (at 643)
              Lvalue:  (at 643)
                Identifier: ftdi_txe_ms_q (at 643)
              Rvalue:  (at 643)
                Identifier: ftdi_txe_i (at 643)
      Decl:  (at 649)
        Reg: clk_div_q, False (at 649)
          Width:  (at 649)
            Identifier: CLK_DIV (at 649)
            IntConst: 0 (at 649)
      Always:  (at 651)
        SensList:  (at 651)
          Sens: posedge (at 651)
            Identifier: rst_i (at 651)
          Sens: posedge (at 651)
            Identifier: clk_i (at 651)
        IfStatement:  (at 652)
          Identifier: rst_i (at 652)
          NonblockingSubstitution:  (at 653)
            Lvalue:  (at 653)
              Identifier: clk_div_q (at 653)
            Rvalue:  (at 653)
              Concat:  (at 653)
                IntConst: 1'b1 (at 653)
                Repeat:  (at 653)
                  Concat:  (at 653)
                    IntConst: 1'b0 (at 653)
                  Identifier: CLK_DIV (at 653)
          IfStatement:  (at 654)
            GreaterThan:  (at 654)
              Identifier: CLK_DIV (at 654)
              IntConst: 0 (at 654)
            NonblockingSubstitution:  (at 655)
              Lvalue:  (at 655)
                Identifier: clk_div_q (at 655)
              Rvalue:  (at 655)
                Concat:  (at 655)
                  Pointer:  (at 655)
                    Identifier: clk_div_q (at 655)
                    IntConst: 0 (at 655)
                  Partselect:  (at 655)
                    Identifier: clk_div_q (at 655)
                    Identifier: CLK_DIV (at 655)
                    IntConst: 1 (at 655)
            NonblockingSubstitution:  (at 657)
              Lvalue:  (at 657)
                Identifier: clk_div_q (at 657)
              Rvalue:  (at 657)
                Unot:  (at 657)
                  Identifier: clk_div_q (at 657)
      Decl:  (at 659)
        Wire: clk_en_w, False (at 659)
        Assign:  (at 659)
          Lvalue:  (at 659)
            Identifier: clk_en_w (at 659)
          Rvalue:  (at 659)
            Pointer:  (at 659)
              Identifier: clk_div_q (at 659)
              IntConst: 0 (at 659)
      Decl:  (at 665)
        Wire: rx_sample_w, False (at 665)
        Assign:  (at 665)
          Lvalue:  (at 665)
            Identifier: rx_sample_w (at 665)
          Rvalue:  (at 665)
            And:  (at 665)
              Eq:  (at 665)
                Identifier: state_q (at 665)
                Identifier: STATE_RX (at 665)
              Identifier: clk_en_w (at 665)
      Decl:  (at 668)
        Wire: tx_sent_w, False (at 668)
        Assign:  (at 668)
          Lvalue:  (at 668)
            Identifier: tx_sent_w (at 668)
          Rvalue:  (at 668)
            And:  (at 668)
              Eq:  (at 668)
                Identifier: state_q (at 668)
                Identifier: STATE_TX (at 668)
              Identifier: clk_en_w (at 668)
      Decl:  (at 670)
        Wire: rx_ready_w, False (at 670)
        Assign:  (at 670)
          Lvalue:  (at 670)
            Identifier: rx_ready_w (at 670)
          Rvalue:  (at 670)
            And:  (at 670)
              Unot:  (at 670)
                Identifier: ftdi_rxf_q (at 670)
              Identifier: clk_en_w (at 670)
      Decl:  (at 671)
        Wire: tx_space_w, False (at 671)
        Assign:  (at 671)
          Lvalue:  (at 671)
            Identifier: tx_space_w (at 671)
          Rvalue:  (at 671)
            And:  (at 671)
              Unot:  (at 671)
                Identifier: ftdi_txe_q (at 671)
              Identifier: clk_en_w (at 671)
      Decl:  (at 673)
        Wire: rx_start_w, False (at 673)
        Assign:  (at 673)
          Lvalue:  (at 673)
            Identifier: rx_start_w (at 673)
          Rvalue:  (at 673)
            And:  (at 673)
              And:  (at 673)
                Eq:  (at 673)
                  Identifier: state_q (at 673)
                  Identifier: STATE_IDLE (at 673)
                Identifier: rx_ready_w (at 673)
              Ulnot:  (at 673)
                Identifier: rd_ready_o (at 673)
      Decl:  (at 674)
        Wire: tx_start_w, False (at 674)
        Assign:  (at 674)
          Lvalue:  (at 674)
            Identifier: tx_start_w (at 674)
          Rvalue:  (at 674)
            And:  (at 674)
              And:  (at 674)
                Eq:  (at 674)
                  Identifier: state_q (at 674)
                  Identifier: STATE_IDLE (at 674)
                Identifier: tx_space_w (at 674)
              Identifier: tx_ready_q (at 674)
      Decl:  (at 679)
        Reg: next_state_r, False (at 679)
          Width:  (at 679)
            Minus:  (at 679)
              Identifier: STATE_W (at 679)
              IntConst: 1 (at 679)
            IntConst: 0 (at 679)
      Always:  (at 680)
        SensList:  (at 680)
          Sens: all (at 680)
        Block: None (at 681)
          BlockingSubstitution:  (at 682)
            Lvalue:  (at 682)
              Identifier: next_state_r (at 682)
            Rvalue:  (at 682)
              Identifier: state_q (at 682)
          CaseStatement:  (at 684)
            Identifier: state_q (at 684)
            Case:  (at 688)
              Identifier: STATE_IDLE (at 688)
              Block: None (at 689)
                IfStatement:  (at 690)
                  Identifier: rx_start_w (at 690)
                  BlockingSubstitution:  (at 691)
                    Lvalue:  (at 691)
                      Identifier: next_state_r (at 691)
                    Rvalue:  (at 691)
                      Identifier: STATE_RX (at 691)
                  IfStatement:  (at 692)
                    Identifier: tx_start_w (at 692)
                    BlockingSubstitution:  (at 693)
                      Lvalue:  (at 693)
                        Identifier: next_state_r (at 693)
                      Rvalue:  (at 693)
                        Identifier: STATE_TX_SETUP (at 693)
            Case:  (at 698)
              Identifier: STATE_RX (at 698)
              Block: None (at 699)
                IfStatement:  (at 700)
                  Identifier: clk_en_w (at 700)
                  BlockingSubstitution:  (at 701)
                    Lvalue:  (at 701)
                      Identifier: next_state_r (at 701)
                    Rvalue:  (at 701)
                      Identifier: STATE_IDLE (at 701)
            Case:  (at 706)
              Identifier: STATE_TX_SETUP (at 706)
              Block: None (at 707)
                IfStatement:  (at 708)
                  Identifier: clk_en_w (at 708)
                  BlockingSubstitution:  (at 709)
                    Lvalue:  (at 709)
                      Identifier: next_state_r (at 709)
                    Rvalue:  (at 709)
                      Identifier: STATE_TX (at 709)
            Case:  (at 714)
              Identifier: STATE_TX (at 714)
              Block: None (at 715)
                IfStatement:  (at 716)
                  Identifier: clk_en_w (at 716)
                  BlockingSubstitution:  (at 717)
                    Lvalue:  (at 717)
                      Identifier: next_state_r (at 717)
                    Rvalue:  (at 717)
                      Identifier: STATE_IDLE (at 717)
            Case:  (at 719)
              EventStatement:  (at 0)
                SensList:  (at 0)
                  Sens: all (at 0)
      Always:  (at 725)
        SensList:  (at 725)
          Sens: posedge (at 725)
            Identifier: rst_i (at 725)
          Sens: posedge (at 725)
            Identifier: clk_i (at 725)
        IfStatement:  (at 726)
          Identifier: rst_i (at 726)
          NonblockingSubstitution:  (at 727)
            Lvalue:  (at 727)
              Identifier: state_q (at 727)
            Rvalue:  (at 727)
              Identifier: STATE_IDLE (at 727)
          NonblockingSubstitution:  (at 729)
            Lvalue:  (at 729)
              Identifier: state_q (at 729)
            Rvalue:  (at 729)
              Identifier: next_state_r (at 729)
      Always:  (at 734)
        SensList:  (at 734)
          Sens: posedge (at 734)
            Identifier: rst_i (at 734)
          Sens: posedge (at 734)
            Identifier: clk_i (at 734)
        IfStatement:  (at 735)
          Identifier: rst_i (at 735)
          NonblockingSubstitution:  (at 736)
            Lvalue:  (at 736)
              Identifier: rd_ready_o (at 736)
            Rvalue:  (at 736)
              IntConst: 1'b0 (at 736)
          IfStatement:  (at 737)
            Identifier: rx_sample_w (at 737)
            NonblockingSubstitution:  (at 738)
              Lvalue:  (at 738)
                Identifier: rd_ready_o (at 738)
              Rvalue:  (at 738)
                IntConst: 1'b1 (at 738)
            IfStatement:  (at 739)
              Identifier: rd_i (at 739)
              NonblockingSubstitution:  (at 740)
                Lvalue:  (at 740)
                  Identifier: rd_ready_o (at 740)
                Rvalue:  (at 740)
                  IntConst: 1'b0 (at 740)
      Always:  (at 745)
        SensList:  (at 745)
          Sens: posedge (at 745)
            Identifier: rst_i (at 745)
          Sens: posedge (at 745)
            Identifier: clk_i (at 745)
        IfStatement:  (at 746)
          Identifier: rst_i (at 746)
          NonblockingSubstitution:  (at 747)
            Lvalue:  (at 747)
              Identifier: tx_ready_q (at 747)
            Rvalue:  (at 747)
              IntConst: 1'b0 (at 747)
          IfStatement:  (at 748)
            Identifier: tx_sent_w (at 748)
            NonblockingSubstitution:  (at 749)
              Lvalue:  (at 749)
                Identifier: tx_ready_q (at 749)
              Rvalue:  (at 749)
                IntConst: 1'b0 (at 749)
            IfStatement:  (at 750)
              Identifier: wr_i (at 750)
              NonblockingSubstitution:  (at 751)
                Lvalue:  (at 751)
                  Identifier: tx_ready_q (at 751)
                Rvalue:  (at 751)
                  IntConst: 1'b1 (at 751)
      Assign:  (at 753)
        Lvalue:  (at 753)
          Identifier: wr_accept_o (at 753)
        Rvalue:  (at 753)
          Ulnot:  (at 753)
            Identifier: tx_ready_q (at 753)
      Always:  (at 758)
        SensList:  (at 758)
          Sens: posedge (at 758)
            Identifier: rst_i (at 758)
          Sens: posedge (at 758)
            Identifier: clk_i (at 758)
        IfStatement:  (at 759)
          Identifier: rst_i (at 759)
          NonblockingSubstitution:  (at 760)
            Lvalue:  (at 760)
              Identifier: ftdi_rd_o (at 760)
            Rvalue:  (at 760)
              IntConst: 1'b1 (at 760)
          IfStatement:  (at 761)
            Identifier: rx_start_w (at 761)
            NonblockingSubstitution:  (at 762)
              Lvalue:  (at 762)
                Identifier: ftdi_rd_o (at 762)
              Rvalue:  (at 762)
                IntConst: 1'b0 (at 762)
            IfStatement:  (at 763)
              Identifier: rx_sample_w (at 763)
              NonblockingSubstitution:  (at 764)
                Lvalue:  (at 764)
                  Identifier: ftdi_rd_o (at 764)
                Rvalue:  (at 764)
                  IntConst: 1'b1 (at 764)
      Always:  (at 769)
        SensList:  (at 769)
          Sens: posedge (at 769)
            Identifier: rst_i (at 769)
          Sens: posedge (at 769)
            Identifier: clk_i (at 769)
        IfStatement:  (at 770)
          Identifier: rst_i (at 770)
          NonblockingSubstitution:  (at 771)
            Lvalue:  (at 771)
              Identifier: ftdi_wr_o (at 771)
            Rvalue:  (at 771)
              IntConst: 1'b1 (at 771)
          IfStatement:  (at 772)
            Land:  (at 772)
              Eq:  (at 772)
                Identifier: state_q (at 772)
                Identifier: STATE_TX_SETUP (at 772)
              Identifier: clk_en_w (at 772)
            NonblockingSubstitution:  (at 773)
              Lvalue:  (at 773)
                Identifier: ftdi_wr_o (at 773)
              Rvalue:  (at 773)
                IntConst: 1'b0 (at 773)
            IfStatement:  (at 774)
              Identifier: tx_sent_w (at 774)
              NonblockingSubstitution:  (at 775)
                Lvalue:  (at 775)
                  Identifier: ftdi_wr_o (at 775)
                Rvalue:  (at 775)
                  IntConst: 1'b1 (at 775)
      Always:  (at 780)
        SensList:  (at 780)
          Sens: posedge (at 780)
            Identifier: rst_i (at 780)
          Sens: posedge (at 780)
            Identifier: clk_i (at 780)
        IfStatement:  (at 781)
          Identifier: rst_i (at 781)
          NonblockingSubstitution:  (at 782)
            Lvalue:  (at 782)
              Identifier: rx_data_q (at 782)
            Rvalue:  (at 782)
              IntConst: 8'b0 (at 782)
          IfStatement:  (at 783)
            Identifier: rx_sample_w (at 783)
            NonblockingSubstitution:  (at 784)
              Lvalue:  (at 784)
                Identifier: rx_data_q (at 784)
              Rvalue:  (at 784)
                Identifier: ftdi_d_io (at 784)
      Always:  (at 789)
        SensList:  (at 789)
          Sens: posedge (at 789)
            Identifier: rst_i (at 789)
          Sens: posedge (at 789)
            Identifier: clk_i (at 789)
        IfStatement:  (at 790)
          Identifier: rst_i (at 790)
          NonblockingSubstitution:  (at 791)
            Lvalue:  (at 791)
              Identifier: tx_data_q (at 791)
            Rvalue:  (at 791)
              IntConst: 8'b0 (at 791)
          IfStatement:  (at 792)
            Land:  (at 792)
              Identifier: wr_i (at 792)
              Identifier: wr_accept_o (at 792)
            NonblockingSubstitution:  (at 793)
              Lvalue:  (at 793)
                Identifier: tx_data_q (at 793)
              Rvalue:  (at 793)
                Identifier: data_i (at 793)
      Assign:  (at 800)
        Lvalue:  (at 800)
          Identifier: ftdi_d_io (at 800)
        Rvalue:  (at 800)
          Cond:  (at 800)
            Lor:  (at 800)
              Eq:  (at 800)
                Identifier: state_q (at 800)
                Identifier: STATE_TX_SETUP (at 800)
              Eq:  (at 800)
                Identifier: state_q (at 800)
                Identifier: STATE_TX (at 800)
            Identifier: tx_data_q (at 800)
            IntConst: 8'hzz (at 800)
      Assign:  (at 801)
        Lvalue:  (at 801)
          Identifier: ftdi_siwua_o (at 801)
        Rvalue:  (at 801)
          IntConst: 1'b1 (at 801)
      Assign:  (at 803)
        Lvalue:  (at 803)
          Identifier: data_o (at 803)
        Rvalue:  (at 803)
          Identifier: rx_data_q (at 803)
